{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","views/addVisitor/ReceiptForm/AddReceiptForm.js","views/addVisitor/NewVisitorsForm.js","views/addVisitor/ReceiptForm/ReceiptForm.js","views/addVisitor/DoctorsForm/DoctorReceipt.js","views/addVisitor/DoctorsForm/AddNewPetForm.js","views/addVisitor/DoctorsForm/DoctorAppointmentForm.js","views/addVisitor/DoctorsForm/DoctorsForm.js","views/addVisitor/addVisitorReducer.js","views/addVisitor/addVisitorState.js","views/addVisitor/AddVisitor.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","AddReceiptForm","show","setShow","dispatch","addToast","React","useContext","AppContext","useState","categoryId","itemId","packageId","quantity","discount","addReceiptRecord","setAddReceiptRecord","categories","setCategories","items","setItems","packages","setPackages","setDiscount","packageKeyword","setPackageKeyword","useAxios","url","PUBLIC_API","method","manual","fetchRecord","handleChange","e","resetOther","isSelect","includes","valueFor","oldState","option","target","name","useEffect","totalPrice","price","discountedPrice","getCategories","useCallback","a","record","options","data","rows","map","category","label","displayName","id","message","response","console","log","getPackageOptions","keyword","params","serviceId","search","item","getItemOptions","record2","options2","getPackageItems","onClose","row","className","htmlFor","xs","onChange","onInputChange","input","placeholder","type","color","onClick","payload","NewVisitorsForm","isVisitorRecordAdded","visitorRecord","disabled","contact","email","emiratesId","receiptTableFields","ReceiptForm","receiptFormVisibility","showAddReceiptFormModal","receiptItems","showAddReceiptForm","status","shape","variant","checked","fields","footer","hover","scopedSlots","size","overTableSlot","DoctorReceipt","doctorsReceipt","md","pet","appointmentDate","getDate","getMonth","getFullYear","isFollowUp","fee","AddNewPetForm","visitorId","setSelectedPet","breed","age","dob","specie","gender","microchip","microchipNumber","petInfo","setPetInfo","handleChangePetInfo","dobAge","currentYear","Date","inYears","sm","custom","patientId","resp","catch","DoctorAppointmentForm","showAddAppointmentModal","setShowAddAppointmentModal","showNewPetModal","setShowNewPetModal","setKeyword","setDoctorKeyword","doctors","setDoctors","selectedPet","selectedDoctor","setSelectedDoctor","setFee","setIsFollowUp","length","o","assignTo","DoctorsForm","doctorFormVisibility","isDoctorVisitAdded","addVisitorReducer","state","visitorsId","isItemId","itemIdx","findIndex","i","qty","total","idx","filter","initialState","AddVisitor","history","useHistory","useReducer","reducer","appointment","checkUpPrice","description","followUp","push","storeNewOrder"],"mappings":"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","file":"static/js/16.ca154697.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react'\n\nimport RSelect from 'react-select';\n\nimport {\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalBody,\n  CButton,\n  CFormGroup,\n  CCol,\n  CLabel,\n  CInput\n} from '@coreui/react'\n\nimport useAxios from 'axios-hooks'\n\nimport { AppContext } from '../../../App.js'\nimport { PUBLIC_API } from '../../../config/index'\n\n\nconst AddReceiptForm = ({ show, setShow, dispatch }) => {\n  const { addToast } = React.useContext(AppContext)\n  const [addReceiptRecord, setAddReceiptRecord] = React.useState({\n    categoryId: null,\n    itemId: null,\n    packageId: null,\n    quantity: 1,\n    discount: 0\n  })\n\n  const [categories, setCategories] = React.useState([])\n  const [items, setItems] = React.useState([])\n  const [packages, setPackages] = React.useState([])\n  const [discount, setDiscount] = React.useState(null);\n\n  const [packageKeyword, setPackageKeyword] = React.useState();\n\n  const [\n    ,\n    fetchRecord\n  ] = useAxios(\n    {\n      url: PUBLIC_API + '/services',\n      method: 'POST'\n    },\n    { manual: true }\n  )\n\n  const handleChange = (e) => {\n    if (e.isSelect) {\n      let resetOther\n      if (['packageId', 'itemId'].includes(e.valueFor)) {\n        resetOther = e.valueFor === 'itemId' ? 'packageId' : 'itemId'\n      }\n      setAddReceiptRecord(oldState => {\n        return {\n          ...oldState,\n          [resetOther]: null,\n          [e.valueFor]: e.option\n        }\n      })\n    } else {\n      setAddReceiptRecord(oldState => {\n        return {\n          ...oldState,\n          [e.target.name]: e.target.value\n        }\n      })\n\n      \n    }\n  }\n\n  React.useEffect(() => {\n    if (!!addReceiptRecord.itemId && !!addReceiptRecord.quantity && !!addReceiptRecord.discount) {\n      const totalPrice = (addReceiptRecord.itemId.price * addReceiptRecord.quantity);\n\n      const discountedPrice = totalPrice - ((totalPrice * addReceiptRecord.discount)/ 100)\n      setDiscount(discountedPrice)\n    }\n\n    if (!!addReceiptRecord.packageId && !!addReceiptRecord.quantity && !!addReceiptRecord.discount) {\n      const totalPrice = (addReceiptRecord.packageId.price * addReceiptRecord.quantity);\n\n      const discountedPrice = totalPrice - ((totalPrice * addReceiptRecord.discount)/ 100)\n      setDiscount(discountedPrice)\n    }\n  }, [addReceiptRecord])\n\n  const getCategories = React.useCallback(async () => {\n    try {\n      const record = await fetchRecord({\n        url: PUBLIC_API + '/services',\n        method: 'GET'\n      })\n\n      const options = (record?.data?.rows || []).map(category => {\n        return {\n          label: category.displayName,\n          value: category.id\n        }\n      })\n\n      setCategories(options)\n    } catch (err) {\n      addToast({\n        message: err?.response?.data?.message || 'Error Try again later !'\n      })\n    }\n  }, [fetchRecord])\n\n  React.useEffect(() => {\n    console.log(packageKeyword)\n    getPackageOptions(packageKeyword)\n  }, [packageKeyword])\n\n  const getPackageOptions = async (keyword = null) => {\n    const record = await fetchRecord({\n      url: PUBLIC_API + '/packages/records/active',\n      method: 'GET',\n      params: {\n        serviceId: addReceiptRecord.categoryId?.value || null,\n        search: keyword || null\n      }\n    })\n\n    const options = (record?.data || []).map(item => {\n      return {\n        label: item.name,\n        value: item.id,\n        price: item.price\n      }\n    })\n\n    setPackages(options)\n  }\n\n  const getItemOptions = async () => {\n    const record2 = await fetchRecord({\n      url: PUBLIC_API + '/items/records/active',\n      method: 'GET',\n      params: {\n        serviceId: addReceiptRecord.categoryId?.value || null\n      }\n    })\n\n    const options2 = (record2?.data || []).map(item => {\n      return {\n        label: item.name,\n        value: item.id,\n        price: item.price\n      }\n    })\n\n    setItems(options2)\n  }\n\n  const getPackageItems = React.useCallback(async () => {\n    try {\n      setAddReceiptRecord(oldState => {\n        return {\n          ...oldState,\n          itemId: null,\n          packageId: null,\n        }\n      })\n\n      getPackageOptions()\n      getItemOptions()      \n    } catch (err) {\n      addToast({\n        message: err.response.data.message\n      })\n    }\n  }, [addReceiptRecord?.categoryId?.value])\n\n  const submitRecord = () => {\n    if (!(addReceiptRecord.categoryId && (addReceiptRecord.itemId || addReceiptRecord.packageId))) {\n      addToast({\n        message: 'Please select item first !'\n      })\n    } else if (addReceiptRecord.quantity <= 0) {\n      addToast({\n        message: 'Quantity must not be 0 !'\n      })\n    } else {\n      dispatch({ type: 'addItemInReceipt', payload: addReceiptRecord })\n      setAddReceiptRecord({\n        categoryId: null,\n        itemId: null,\n        packageId: null,\n        quantity: 1,\n        discount: 0\n      })\n      setShow(false)\n    }\n  }\n\n  React.useEffect(() => {\n    if (show) {\n      getCategories()\n    }\n  }, [show, getCategories])\n\n  React.useEffect(() => {\n    if (show && addReceiptRecord.categoryId) {\n      setItems([])\n      setPackages([])\n      getPackageItems()\n    }\n  }, [show, getPackageItems, addReceiptRecord.categoryId])\n\n  return (\n    <CModal\n      show={show}\n      onClose={() => setShow(false)}\n    >\n      <CModalHeader>\n        Add Item\n      </CModalHeader>\n      <CModalBody>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-category\">Category</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <RSelect value={addReceiptRecord.categoryId} name=\"categoryId\" options={categories} onChange={(e) => handleChange({isSelect: true, valueFor: 'categoryId', option: e})}/>\n          </CCol>\n        </CFormGroup>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-package\">Package</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <RSelect value={addReceiptRecord.packageId} name=\"packageItem\" onInputChange={(input) => setPackageKeyword(input)} options={packages} onChange={(e) => handleChange({isSelect: true, valueFor: 'packageId', option: e})}/>\n          </CCol>\n        </CFormGroup>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-package-item\">Item</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <RSelect value={addReceiptRecord.itemId} name=\"packageItem\" options={items} onChange={(e) => handleChange({isSelect: true, valueFor: 'itemId', option: e})}/>\n          </CCol>\n        </CFormGroup>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-qty\">Quantity</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <CInput value={addReceiptRecord.quantity} id=\"text-qty\" name=\"quantity\" placeholder=\"Enter Quantity\" type=\"number\" onChange={handleChange} />\n          </CCol>\n        </CFormGroup>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-qty\">Discount</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <CInput value={addReceiptRecord.discount} id=\"text-qty\" name=\"discount\" placeholder=\"Enter discount\" type=\"number\" onChange={handleChange} />\n          </CCol>\n        </CFormGroup>\n        {\n          discount &&\n          <div>\n            <p>The Price after discount is <span className=\"text-success\">{discount}</span></p>\n          </div>\n        }\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"danger\" onClick={() => setShow(false)}>Cancel</CButton>\n        <CButton color=\"primary\" onClick={submitRecord}>Submit</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default AddReceiptForm\n","import React from 'react'\n\nimport {\n  CFormGroup,\n  CInput,\n  CLabel,\n} from '@coreui/react'\n\nconst NewVisitorsForm = ({ isVisitorRecordAdded, visitorRecord, dispatch }) => {\n  return (\n    <>\n      <CFormGroup>\n        <CLabel htmlFor=\"contact\">Phone No</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.contact} name=\"contact\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"contact\" placeholder=\"Enter Phone number\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"name\">Visitors Name</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.name} name=\"name\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"name\" placeholder=\"Enter Visitor's name\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"email\">Email</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.email} name=\"email\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"email\" placeholder=\"Enter Visitor's email\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"emiratesId\">Visitors Emirates ID</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.emiratesId} name=\"emiratesId\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"emiratesId\" placeholder=\"Enter Visitor's emirates id\" />\n      </CFormGroup>\n    </>\n  )\n}\n\nexport default NewVisitorsForm\n","import React from 'react'\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CSwitch,\n  CDataTable\n} from '@coreui/react'\n\nimport AddReceiptForm from './AddReceiptForm.js'\n\nconst receiptTableFields = [\n  'action',\n  'name',\n  'category',\n  'price',\n  'qty',\n  'total'\n]\n\nconst ReceiptForm = ({ receiptFormVisibility, showAddReceiptFormModal, receiptItems, dispatch }) => {\n  const showAddReceiptForm = (status) => {\n    dispatch({ type: 'setShowAddReceiptForm', payload: status })\n  }\n\n  const handleAction = (data) => {\n    console.log(data.payload)\n    dispatch(data)\n  }\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <div><strong>Shopping, Grooming and Others</strong></div>\n          <CSwitch\n            className=\"mr-1\"\n            color=\"dark\"\n            shape=\"pill\"\n            variant=\"opposite\"\n            value={receiptFormVisibility}\n            onChange={e => dispatch({ type: 'setReceiptFormVisibility', payload: e.target.checked })}\n          />\n        </CCardHeader>\n        {\n          receiptFormVisibility &&\n          <CCardBody>\n            <CDataTable\n              fields={receiptTableFields}\n              items={receiptItems || []}\n              footer\n              hover\n              scopedSlots={{\n                'action':\n                  (item)=>(\n                    <td className=\"px-1 py-2\">\n                    {\n                      <CButton onClick={() => handleAction({ type: 'removeItem', payload: item })} size=\"sm\">&#10006;</CButton>\n                    }\n                    </td>\n                  )\n              }}\n              overTableSlot={\n                <div className=\"text-right\">\n                  <CButton\n                    size=\"sm\"\n                    color=\"primary\"\n                    variant=\"outline\"\n                    className=\"m-2 pl-3 pr-4\"\n                    onClick={() => showAddReceiptForm(true)}\n                  >\n                      <span className=\"ml-1\">Add Item</span>\n                  </CButton>\n                </div>\n              }\n            />\n          </CCardBody>\n        }\n      </CCard>\n\n      <AddReceiptForm show={showAddReceiptFormModal} setShow={showAddReceiptForm} dispatch={dispatch}/>\n    </>\n  )\n}\n\nexport default ReceiptForm\n","import React from 'react'\nimport {\n  CCol,\n  CRow,\n} from '@coreui/react'\n\nconst DoctorReceipt = ({ doctorsReceipt }) => {\n  return (\n    <div>\n      <p className=\"font-weight-bold font-lg\">Doctor receipt form</p>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Pet's Name</CCol>\n        <CCol>\n          {doctorsReceipt.pet.label}\n        </CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Check up Date</CCol>\n        <CCol>\n          {\n            doctorsReceipt.appointmentDate.getDate() + '/' +\n            (+doctorsReceipt.appointmentDate.getMonth() + 1) + '/' +\n            doctorsReceipt.appointmentDate.getFullYear()\n          }\n        </CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Doctor's Name</CCol>\n        <CCol>--</CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Is Follow Up ?</CCol>\n        <CCol>{\n          doctorsReceipt.isFollowUp ? 'Yes' : 'No'  \n        }</CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Doctor's Fee</CCol>\n        <CCol>{ doctorsReceipt.fee } AED</CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default DoctorReceipt\n","import React from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalBody,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CButton,\n  CRow,\n  CCol,\n  CSwitch,\n  CSelect\n} from '@coreui/react'\n\nimport useAxios from 'axios-hooks'\n\nimport { AppContext } from '../../../App.js'\nimport { PUBLIC_API } from '../../../config/index'\n\n\nconst AddNewPetForm = ({ show, setShow, visitorId, setItems, setSelectedPet }) => {\n  const { addToast } = React.useContext(AppContext)\n  const [,\n    fetchRecord\n  ] = useAxios(\n    {\n      method: 'GET'\n    },\n    { manual: true }\n  )\n\n  const [petInfo, setPetInfo] = React.useState({\n    id: '',\n    name: '',\n    breed: '',\n    age: '',\n    dob: '',\n    color: '',\n    specie: '',\n    gender: '',\n    microchip: false,\n    microchipNumber: null\n  })\n\n  const handleChangePetInfo = (e) => {\n    let dobAge = petInfo.age\n    if (e.target.name === 'dob') {\n      const currentYear = new Date().getFullYear()\n      const inYears = new Date(e.target.value).getFullYear()\n\n      dobAge = currentYear - inYears\n    }\n    setPetInfo(oldState => {\n      return {\n        ...oldState,\n        age: dobAge,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  const setIsMicroChip = (status) => {\n    setPetInfo(oldState => {\n      return {\n        ...oldState,\n        microchip: status,\n        microchipNumber: null\n      }\n    })\n  }\n\n  const storePetInfo = () => {\n    const data = {...petInfo, patientId: visitorId}\n\n    delete data.id;\n\n    fetchRecord({\n      url: PUBLIC_API + '/pets',\n      method: 'POST',\n      data\n    }).then(resp => {\n      setPetInfo(oldState => {\n        return {\n          ...oldState,\n          id: resp.data.id\n        }\n      })\n    \n\n      setItems(oldState => {\n        return [...oldState, resp.data]\n      })\n\n      setSelectedPet({\n        label: resp.data.name,\n        value: resp.data\n      })\n\n      setShow(false)\n    }).catch(err => {\n      addToast({\n        message: err.response.data.message\n      })\n    })\n  }\n\n  return (\n    <CModal\n      show={show}\n      onClose={() => setShow(false)}\n    >\n      <CModalHeader>\n        Add New Pet\n      </CModalHeader>\n      <CModalBody>\n      <CRow>\n        <CCol md=\"6\" sm=\"12\">\n          <CFormGroup>\n            <CLabel htmlFor=\"name\">Pet Name</CLabel>\n            <CInput value={petInfo.name} name=\"name\" onChange={handleChangePetInfo} id=\"name\" placeholder=\"Enter name\" />\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"type\">Breed</CLabel>\n            <CInput value={petInfo.breed} name=\"breed\" onChange={handleChangePetInfo} id=\"type\" placeholder=\"Enter breed\" />\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"age\">Pet Age ( years )</CLabel>\n            <CInput value={petInfo.age} name=\"age\" onChange={handleChangePetInfo} id=\"age\" placeholder=\"Enter age\" />\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"age\">Pet DOB</CLabel>\n            <CInput value={petInfo.dob} name=\"dob\" type=\"date\" onChange={handleChangePetInfo} id=\"dob\" placeholder=\"Enter dob\" />\n          </CFormGroup>\n        </CCol>\n        <CCol md=\"6\" sm=\"12\">\n          <CFormGroup>\n            <CLabel htmlFor=\"color\">Pet Color</CLabel>\n            <CInput value={petInfo.color} name=\"color\" onChange={handleChangePetInfo} id=\"color\" placeholder=\"Enter color\" />\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"specie\">Specie</CLabel>\n            <CInput value={petInfo.specie} name=\"specie\" onChange={handleChangePetInfo} id=\"specie\" placeholder=\"Enter specie\" />\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"gender\">Sex</CLabel>\n            <CSelect \n              custom \n              name=\"gender\" \n              id=\"text-pet-type\"\n              value={petInfo.gender}\n              onChange={handleChangePetInfo}\n            >\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"Neutered\">Neutered</option>\n              <option value=\"Spayed\">Spayed</option>\n            </CSelect>\n          </CFormGroup>\n          <CFormGroup row className=\"align-items-center mt-4\">\n            \n            <CCol xs=\"3\" md=\"3\">\n              <CSwitch\n                color=\"primary\"\n                name=\"microchip\"\n                value={petInfo.microchip}\n                onChange={(e) => setIsMicroChip(e.target.checked)}\n                {\n                  ...({\n                    variant: 'opposite',\n                    shape:'pill'\n                  })\n                }\n              />\n            </CCol>\n            <CCol xs=\"6\" md=\"6\">\n              <CLabel htmlFor=\"text-microchip\" className=\"pl-1\">Microchip ?</CLabel>\n            </CCol>\n          </CFormGroup>\n          {\n            petInfo.microchip &&\n            <CFormGroup>\n              <CLabel htmlFor=\"microchipNumber\">Micro chip Number</CLabel>\n              <CInput value={petInfo.microchipNumber} name=\"microchipNumber\" onChange={handleChangePetInfo} id=\"microchipNumber\" placeholder=\"Enter Microchip Number\" />\n            </CFormGroup>\n          }\n        </CCol>\n      </CRow>\n      </CModalBody>\n      \n      <CModalFooter>\n        <CButton onClick={() => setShow(false)} color=\"danger\">Cancel</CButton>\n        <CButton onClick={storePetInfo} color=\"primary\">Submit</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default AddNewPetForm\n","import React from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalBody,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CCol,\n  CSwitch,\n  CButton,\n} from '@coreui/react'\n\nimport useAxios from 'axios-hooks'\n\nimport RSelect from 'react-select';\n\nimport { AppContext } from '../../../App.js'\nimport { PUBLIC_API } from '../../../config/index'\n\n\nimport AddNewPetForm from './AddNewPetForm.js'\n\nconst DoctorAppointmentForm = ({ visitorId, dispatch }) => {\n  const { addToast } = React.useContext(AppContext)\n  const [,\n    fetchRecord\n  ] = useAxios(\n    {\n      method: 'GET'\n    },\n    { manual: true }\n  )\n\n  const [showAddAppointmentModal, setShowAddAppointmentModal] = React.useState(false)\n  const [showNewPetModal, setShowNewPetModal] = React.useState(false)\n\n  \n\n  const [keyword, setKeyword] = React.useState('')\n  const [doctorKeyword, setDoctorKeyword] = React.useState('')\n  const [items, setItems] = React.useState([])\n  const [doctors, setDoctors] = React.useState([])\n\n  const [selectedPet, setSelectedPet] = React.useState(null)\n  const [selectedDoctor, setSelectedDoctor] = React.useState(null)\n  const [fee, setFee] = React.useState('')\n  const [isFollowUp, setIsFollowUp] = React.useState(false)\n\n  const handleChange = (option) => {\n    setSelectedPet(option)\n  }\n\n  const handleDoctorChange = (option) => {\n    setSelectedDoctor(option)\n  }\n\n  const addDoctorReceipt = () => {\n    if (!isFollowUp && +fee === 0 ) {\n      addToast({\n        message: 'Please provide fee or check follow up if it is follow up !'\n      })\n    } else {\n      dispatch({ type: 'addDoctorReceipt', payload: {\n        pet: selectedPet,\n        fee: +fee === 0 ? '0' : fee,\n        appointmentDate: new Date(),\n        assignTo: selectedDoctor.value.id,\n        isFollowUp\n      } })\n    }\n  }\n\n  React.useEffect(() => {\n    if (keyword.length > 0) {\n      fetchRecord({\n        url: PUBLIC_API + '/pets',\n        method: 'GET',\n        params: {\n          patientId: visitorId,\n          search: keyword\n        }\n      }).catch(err => {\n        addToast({\n          message: err.response.data.message\n        })\n      })\n    }\n  }, [keyword, fetchRecord, visitorId])\n\n  React.useEffect(() => {\n    \n  }, [fetchRecord, visitorId])\n\n  React.useEffect(() => {\n    fetchRecord({\n      url: PUBLIC_API + '/users?role=3',\n      method: 'GET'\n    }).then(resp => {\n      setDoctors(resp?.data?.rows.map(o => {\n        return {\n          label: o.name,\n          value: o\n        }\n      }) || [])\n\n      fetchRecord({\n        url: PUBLIC_API + '/pets/all/patients',\n        method: 'POST',\n        data: {\n          patientId: visitorId\n        }\n      }).then(resp => {\n        setItems(resp?.data?.rows.map(o => {\n          return {\n            label: o.name,\n            value: o\n          }\n        }) || [])\n      }).catch(err => {\n        addToast({\n          message: err.response?.data?.message || 'Error occured try again later !'\n        })\n      })\n    }).catch(err => {\n      addToast({\n        message: err.response?.data?.message || 'Error occured try again later !'\n      })\n    })\n  }, [])\n\n\n  return (\n    <div>\n      <p onClick={() => setShowAddAppointmentModal(true)} className=\"my-5 text-center\">Add Doctors check up</p>\n\n      <CModal\n        show={showAddAppointmentModal}\n        onClose={() => setShowAddAppointmentModal(false)}\n      >\n        <CModalHeader>\n          Create check up\n        </CModalHeader>\n        <CModalBody>\n          <CFormGroup row>\n            <CCol xs=\"12\">\n              <CLabel className=\"pt-1\" htmlFor=\"search\">Assign Doctor</CLabel>\n            </CCol>\n            <CCol xs=\"12\">\n              <RSelect name=\"search\" value={selectedDoctor} options={doctors} onInputChange={(input) => setDoctorKeyword(input)} onChange={handleDoctorChange}></RSelect>\n            </CCol>\n          </CFormGroup>\n          <CFormGroup row>\n            <CCol xs=\"12\">\n              <CLabel className=\"pt-1\" htmlFor=\"search\">Select Pet</CLabel>\n            </CCol>\n            <CCol xs=\"12\">\n              <RSelect name=\"search\" value={selectedPet} options={items} onInputChange={(input) => setKeyword(input)} onChange={handleChange}></RSelect>\n            </CCol>\n          </CFormGroup>\n          <div className=\"text-right\">\n            <CButton onClick={() => setShowNewPetModal(true)} size=\"sm\">Add New Pet</CButton>\n          </div>\n          <CFormGroup>\n            <CLabel htmlFor=\"fee\">Fee</CLabel>\n            <CInput value={fee} onChange={(e) => setFee(e.target.value)} name=\"fee\" id=\"fee\" placeholder=\"Enter fees\" />\n          </CFormGroup>\n          <CFormGroup row className=\"align-items-center pt-3\">\n            <CCol xs=\"3\" md=\"3\">\n              <CLabel htmlFor=\"text-description\" className=\"pl-1\">Follow Up ?</CLabel>\n            </CCol>\n            <CCol xs=\"9\" md=\"9\">\n              <CSwitch\n                color=\"primary\"\n                name=\"active\"\n                value={isFollowUp}\n                onChange={(e) => setIsFollowUp(e.target.checked)}\n                {\n                  ...({\n                    variant: 'opposite',\n                    shape:'pill'\n                  })\n                }\n              />\n            </CCol>\n          </CFormGroup>\n\n          <AddNewPetForm\n            show={showNewPetModal}\n            visitorId={visitorId}\n            setShow={setShowNewPetModal}\n            setItems={setItems}\n            setSelectedPet={setSelectedPet}\n          />\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"danger\" onClick={() => setShowAddAppointmentModal(false)}>Cancel</CButton>\n          <CButton color=\"primary\" onClick={addDoctorReceipt}>Submit</CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default DoctorAppointmentForm\n","import React from 'react'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CSwitch,\n} from '@coreui/react'\n\nimport DoctorReceipt from './DoctorReceipt.js'\nimport DoctorAppointmentForm from './DoctorAppointmentForm.js'\n\nconst DoctorsForm = ({ visitorId, doctorFormVisibility, isDoctorVisitAdded, doctorsReceipt, dispatch }) => {\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <div><strong>Doctor's Visit</strong></div>\n          <CSwitch\n            className=\"mr-1\"\n            color=\"dark\"\n            shape=\"pill\"\n            variant=\"opposite\"\n            value={doctorFormVisibility}\n            onChange={(e) => dispatch({ type: 'setDoctorFormVisibility', payload: e.target.checked })}\n          />\n        </CCardHeader>\n        {\n          doctorFormVisibility &&\n          <CCardBody>\n            {\n              isDoctorVisitAdded ?\n              <DoctorReceipt doctorsReceipt={doctorsReceipt} /> :\n              <DoctorAppointmentForm visitorId={visitorId} dispatch={dispatch} />\n            }\n          </CCardBody> \n        }\n      </CCard>\n    </>\n  )\n}\n\nexport default DoctorsForm\n","const addVisitorReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'setKeyword':\n      return {\n        ...state,\n        keyword: payload\n      }\n    case 'setItems': \n      return {\n        ...state,\n        items: payload\n      }\n    case 'setIsVisitorRecordAdded':\n      return {\n        ...state,\n        isVisitorRecordAdded: payload\n      }\n    case 'setVisitorsId':\n      return {\n        ...state,\n        visitorsId: payload\n      }\n    case 'setVisitorsRecord':\n      return {\n        ...state,\n        visitorRecord: { ...payload }\n      }\n    case 'handleChangeVisitorRecord':\n      return {\n        ...state,\n        visitorRecord: {\n          ...state.visitorRecord,\n          [payload.target.name]: payload.target.value \n        }\n      }\n    case 'setReceiptFormVisibility':\n      return {\n        ...state,\n        receiptFormVisibility: payload\n      }\n    case 'setShowAddReceiptForm':\n      return {\n        ...state,\n        showAddReceiptForm: payload\n      }\n    case 'setDoctorFormVisibility':\n      return {\n        ...state,\n        doctorFormVisibility: payload\n      }\n    case 'setIsDoctorVisitAdded':\n      return {\n        ...state,\n        isDoctorVisitAdded: payload\n      }\n    case 'addItemInReceipt':\n      let isItemId = true\n      let itemIdx = -1\n\n      if (payload.packageId?.value) isItemId = false\n\n      if (isItemId) {\n        itemIdx = state.receiptItems.findIndex(i => i.id === payload.itemId?.value)\n      } else {\n        itemIdx = state.receiptItems.findIndex(i => i.packageId === payload.packageId?.value)\n      }\n\n      if (itemIdx === -1) {\n        const item = {\n          id: payload.itemId?.value || null,\n          packageId: payload.packageId?.value || null,\n          name: payload.itemId?.label || payload.packageId?.label,\n          category: payload.categoryId.label,\n          price: payload.itemId?.price || payload.packageId?.price,\n          qty: payload.quantity,\n          discount: payload.discount || 0,\n          total: payload.quantity * (payload.itemId?.price || payload.packageId?.price)\n        }\n  \n        return {\n          ...state,\n          receiptItems: [...state.receiptItems, item]\n        }\n      } else {\n        return {\n          ...state,\n          receiptItems: state.receiptItems.map((i, idx) => {\n            if (idx === itemIdx) {\n              const qty = +i.qty + +payload.quantity\n              return {\n                ...i,\n                qty,\n                total: qty * i.price\n              }\n            }\n\n            return i\n          })\n        }\n      }\n    case 'removeItem':\n      return {\n        ...state,\n        receiptItems: state.receiptItems.filter(i => {\n          if (payload.id) {\n            return i.id !== payload.id\n          } else {\n            return i.packageId !== payload.packageId\n          }\n        })\n      }\n    case 'addDoctorReceipt':\n      const doctorsReceipt = {\n        pet: payload.pet,\n        fee: payload.fee,\n        appointmentDate: payload.appointmentDate,\n        isFollowUp: payload.isFollowUp,\n        assignTo: payload.assignTo\n      }\n\n      return {\n        ...state,\n        isDoctorVisitAdded: true,\n        doctorsReceipt: doctorsReceipt\n      }\n    case 'resetForm':\n      return {\n        ...state,\n        keyword: '',\n        items: [],\n        isVisitorRecordAdded: false,\n        visitorsId: null,\n        visitorRecord: {\n          emiratesId: '',\n          name: '',\n          email: '',\n          contact: ''\n        },\n\n        receiptFormVisibility: false,\n        showAddReceiptForm: false,\n\n        doctorFormVisibility: false,\n        isDoctorVisitAdded: false,\n\n        receiptItems: [],\n        doctorsReceipt: {\n          pet: null,\n          fee: '',\n          appointmentDate: null,\n          isFollowUp: false\n        }\n      }\n    default: \n      return state\n  }\n}\n\nexport default addVisitorReducer","const initialState = {\n  keyword: '',\n  items: [],\n  isVisitorRecordAdded: false,\n  visitorsId: null,\n  visitorRecord: {\n    emiratesId: '',\n    name: '',\n    email: '',\n    contact: ''\n  },\n\n  receiptFormVisibility: false,\n  showAddReceiptForm: false,\n\n  doctorFormVisibility: false,\n  isDoctorVisitAdded: false,\n\n  receiptItems: [],\n  doctorsReceipt: {\n    pet: null,\n    fee: '',\n    appointmentDate: null,\n    isFollowUp: false\n  }\n}\n\nexport default initialState","import React, { useContext } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CFormGroup,\n  CLabel,\n  CRow,\n} from '@coreui/react'\n\nimport { useHistory } from 'react-router-dom'\n\nimport RSelect from 'react-select';\n\nimport useAxios from 'axios-hooks'\n\nimport NewVisitorsForm from './NewVisitorsForm.js'\nimport ReceiptForm from './ReceiptForm/ReceiptForm.js'\nimport DoctorsForm from './DoctorsForm/DoctorsForm.js'\n\nimport reducer from './addVisitorReducer'\nimport initialState from './addVisitorState'\n\nimport { AppContext } from '../../App.js'\nimport { PUBLIC_API } from '../../config/index'\n\nconst AddVisitor = () => {\n  const history = useHistory()\n  const { addToast } = useContext(AppContext)\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const [,\n    fetchRecord\n  ] = useAxios(\n    {\n      method: 'GET'\n    },\n    { manual: true }\n  )\n\n  const createNewVisitor = () => {\n    fetchRecord({\n      url: PUBLIC_API + '/patients',\n      method: 'POST',\n      data: {\n        ...state.visitorRecord\n      }\n    }).then(resp => {\n      dispatch({ type: 'setVisitorsId', payload: resp.data.id })\n      dispatch({ type: 'setIsVisitorRecordAdded', payload: true })\n    }).catch(err => {\n      addToast({\n        message: err.response.data.message\n      })\n    })\n  }\n\n  const storeNewOrder = () => {\n    const data = {\n      patientId: state.visitorsId,\n      appointment: state.isDoctorVisitAdded,\n      checkUpPrice: +state.doctorsReceipt.fee,\n      description: 'Order Receipt For Shopping.',\n      followUp: state.doctorsReceipt.isFollowUp,\n      assignTo: state.doctorsReceipt.assignTo || null,\n      items: state.receiptItems.filter(item => item.id !== null).map(item => {\n        return {\n          itemId: item.id,\n          quantity: item.qty,\n          discount: item.discount || 0\n        }\n      }),\n      packages: state.receiptItems.filter(item => item.packageId !== null).map(item => {\n        return {\n          packageId: item.packageId,\n          quantity: item.qty,\n          discount: item.discount || 0\n        }\n      })\n    }\n\n    fetchRecord({\n      url: PUBLIC_API + '/orders',\n      method: 'POST',\n      data\n    }).then(resp => {\n      dispatch({ type: 'resetForm', payload: null })\n      history.push('/visitors')\n    })\n  }\n\n  const handleSubmit = () => {\n    if (!state.isVisitorRecordAdded) {\n      createNewVisitor()\n    } else {\n      storeNewOrder()\n    }\n  }\n\n  const resetForm = () => {\n    dispatch({ type: 'setVisitorsRecord', payload: {\n      emiratesId: '',\n      name: '',\n      email: '',\n      contact: ''\n    }})\n    dispatch({ type: 'setVisitorsId', payload: null })\n    dispatch({ type: 'setIsVisitorRecordAdded', payload: false })\n  }\n\n  const handleUserChange = ({ value }) => {\n    dispatch({ type: 'setVisitorsRecord', payload: {\n      emiratesId: value.emiratesId,\n      name: value.name,\n      email: value.email,\n      contact: value.contact\n    }})\n    dispatch({ type: 'setVisitorsId', payload: value.id })\n    dispatch({ type: 'setIsVisitorRecordAdded', payload: true })\n    dispatch({ type: 'setKeyword', payload: {} })\n  }\n\n  React.useEffect(() => {\n    if (state.keyword.length > 0) {\n      fetchRecord({\n        url: PUBLIC_API + '/patients',\n        params: {\n          search: state.keyword\n        }\n      }).then(resp => {\n        dispatch({ type: 'setItems', payload: (resp?.data?.rows || []).map((item, idx) => {\n          return {\n            label: (idx + 1) + ': ' + item.name + ' - ' + item.contact,\n            value: item,\n          }\n        })})\n      })\n    }\n  }, [state.keyword, fetchRecord])\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" sm=\"12\">\n          <CCard>\n            <CCardHeader>\n              Visitor\n              <small> Form</small>\n            </CCardHeader>\n            <CCardBody>\n              <CFormGroup row>\n                <CCol xs=\"12\">\n                  <CLabel className=\"pt-1\" htmlFor=\"search\">Search</CLabel>\n                </CCol>\n                <CCol xs=\"12\">\n                  <RSelect name=\"search\" options={state.items} onInputChange={(input) => dispatch({ type: 'setKeyword', payload: input })} onChange={handleUserChange}></RSelect>\n                </CCol>\n              </CFormGroup>\n              <CCard>\n                <CCardBody>\n                  <NewVisitorsForm \n                    isVisitorRecordAdded={state.isVisitorRecordAdded}\n                    visitorRecord={state.visitorRecord}\n                    dispatch={dispatch}\n                  />\n                </CCardBody>\n              </CCard>\n\n              {\n                state.isVisitorRecordAdded &&\n                <CRow>\n                  <CCol sm=\"6\">\n                    <ReceiptForm\n                      receiptFormVisibility={state.receiptFormVisibility}\n                      showAddReceiptFormModal={state.showAddReceiptForm}\n                      receiptItems={state.receiptItems}\n                      dispatch={dispatch}\n                    />\n                  </CCol>\n                  <CCol sm=\"6\">\n                    <DoctorsForm\n                      visitorId={state.visitorsId}\n                      doctorFormVisibility={state.doctorFormVisibility}\n                      isDoctorVisitAdded={state.isDoctorVisitAdded}\n                      doctorsReceipt={state.doctorsReceipt}\n                      dispatch={dispatch}\n                    />\n                  </CCol>\n                </CRow>\n              }\n            </CCardBody>\n            <CCardFooter>\n              <div className=\"d-flex\">\n                <div className=\"w-50 ml-auto text-right\">\n                  <CButton onClick={resetForm} className=\"w-25 mr-1\" color=\"danger\">Clear</CButton>\n                  <CButton onClick={handleSubmit} className=\"w-25\" color=\"primary\">Submit</CButton>\n                </div>\n              </div>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default AddVisitor\n"],"sourceRoot":""}