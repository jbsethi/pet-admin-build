{"version":3,"sources":["utils/dateUtils.js","views/base/tableHeader/TableHeader.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","views/packages/AddPackage.js","views/packages/Packages.js"],"names":["formatDate","date","Date","toLocaleString","datesObj","convert","d","constructor","Array","Number","String","year","month","NaN","compare","a","b","isFinite","this","valueOf","inRange","start","end","TableHeader","keyword","changeKeyword","children","className","sm","type","name","placeholder","autoComplete","value","onChange","onKeyPress","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","AddPackage","show","setShow","refetch","itemId","setEditId","React","useState","setKeyword","services","setServices","petTypes","setPetTypes","items","setItems","description","price","petTypeId","serviceId","active","packageRecord","setPackageRecord","useAxios","url","PUBLIC_API","method","manual","loading","fetchData","fetchRecord","handleChange","e","oldState","target","checked","initializeRecord","useCallback","result","data","rows","defaultItems","PackageItems","map","item","label","Item","id","useEffect","console","log","params","search","resp","onClose","closeButton","row","md","htmlFor","xs","custom","petType","service","displayName","context","isMulti","options","onInputChange","input","color","variant","shape","onClick","config","itemIds","fields","Packages","useContext","AppContext","role","addToast","totalPages","setTotalPages","currentPage","setActivePage","editId","pageNo","fetch","loadData","lg","striped","itemsPerPage","overTableSlot","underTableSlot","activePage","pages","onActivePageChange","i","scopedSlots","createdAt","size"],"mappings":"4KAAA,oEAAO,IAAMA,EAAa,SAACC,GAEzB,OAAQ,IAAIC,KAAKD,GAAOE,kBAGbC,EAAW,CACtBC,QAAQ,SAASC,GAUb,OACIA,EAAEC,cAAgBL,KAAOI,EACzBA,EAAEC,cAAgBC,MAAQ,IAAIN,KAAKI,EAAE,GAAGA,EAAE,GAAGA,EAAE,IAC/CA,EAAEC,cAAgBE,QAClBH,EAAEC,cAAgBG,OADS,IAAIR,KAAKI,GAEvB,kBAANA,EAAiB,IAAIJ,KAAKI,EAAEK,KAAKL,EAAEM,MAAMN,EAAEL,MAClDY,KAGRC,QAAQ,SAASC,EAAEC,GAQf,OACIC,SAASF,EAAEG,KAAKb,QAAQU,GAAGI,YAC3BF,SAASD,EAAEE,KAAKb,QAAQW,GAAGG,YAC1BJ,EAAEC,IAAID,EAAEC,GACTH,KAGRO,QAAQ,SAASd,EAAEe,EAAMC,GAOtB,OACKL,SAASX,EAAEY,KAAKb,QAAQC,GAAGa,YAC3BF,SAASI,EAAMH,KAAKb,QAAQgB,GAAOF,YACnCF,SAASK,EAAIJ,KAAKb,QAAQiB,GAAKH,WAC/BE,GAASf,GAAKA,GAAKgB,EACnBT,O,iCCpDV,yBAiCeU,IAvBK,SAAC,GAAsD,IAAD,IAAnDC,eAAmD,MAAzC,GAAyC,MAArCC,qBAAqC,MAArB,KAAqB,EAAfC,EAAe,EAAfA,SACzD,OACE,eAAC,IAAD,CAAMC,UAAU,kDAAhB,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAYD,UAAU,OAAtB,SACE,cAAC,IAAD,CACEE,KAAK,OACLC,KAAK,UACLC,YAAY,gBACZC,aAAa,MACbC,MAAOT,EACPU,SAAUT,EACVU,WAAYV,QAIlB,cAAC,IAAD,CAAMG,GAAG,IAAID,UAAU,6BAAvB,SACID,S,iCC3BV,SAASU,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBV,EAAQW,EAAKX,MACjB,MAAOY,GAEP,YADAN,EAAOM,GAILD,EAAKE,KACPR,EAAQL,GAERc,QAAQT,QAAQL,GAAOe,KAAKR,EAAOC,GAIxB,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOjC,KACPkC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGI,MAAMH,EAAMC,GAEzB,SAASZ,EAAMP,GACbG,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQR,GAGlE,SAASQ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,GAGnEf,OAAMgB,OA/BZ,mC,oKCsUeC,EA9SI,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAAgB,EACtCC,IAAMC,SAAS,IADuB,mBAC7DxC,EAD6D,KACpDyC,EADoD,OAEpCF,IAAMC,SAAS,IAFqB,mBAE7DE,EAF6D,KAEnDC,EAFmD,OAGpCJ,IAAMC,SAAS,IAHqB,mBAG7DI,EAH6D,KAGnDC,EAHmD,OAI1CN,IAAMC,SAAS,IAJ2B,mBAI7DM,EAJ6D,KAItDC,EAJsD,OAM1BR,IAAMC,SAAS,CACvDlC,KAAM,GACN0C,YAAa,GACbC,MAAO,GACPC,UAAW,GACXC,UAAW,GACXL,MAAO,GACPM,QAAQ,IAb0D,mBAM7DC,EAN6D,KAM9CC,EAN8C,OAmBhEC,YACF,CACEC,IAAKC,IAAa,YAClBC,OAAQ,QAEV,CAAEC,QAAQ,IAxBwD,mBAiBhEC,EAjBgE,KAiBhEA,QACFC,EAlBkE,OA8BhEN,YACF,CACEC,IAAKC,IAAa,SAClBC,OAAQ,OAEV,CAAEC,QAAQ,IANVG,EA7BkE,oBAoE9DC,EAAe,SAACC,GACpBV,GAAiB,SAACW,GAChB,OAAO,2BACFA,GADL,kBAEGD,EAAEE,OAAO5D,KAAyB,WAAlB0D,EAAEE,OAAO5D,KAAoB0D,EAAEE,OAAOC,QAAUH,EAAEE,OAAOzD,YAoC1E2D,EAAmB7B,IAAM8B,YAAN,sBAAkB,sCAAA9E,EAAA,sEACtBsE,EAAU,CAC3BL,IAAKC,IAAa,YAClBC,OAAQ,QAH+B,cACrCY,EADqC,OAMzC3B,GAAkB,QAAN,EAAA2B,SAAA,mBAAQC,YAAR,eAAcC,OAAQ,IANO,SAQ1BX,EAAU,CACvBL,IAAKC,IAAa,aAClBC,OAAQ,QAV+B,UAQzCY,EARyC,OAazCzB,GAAkB,QAAN,EAAAyB,SAAA,mBAAQC,YAAR,eAAcC,OAAQ,KAE9BnC,EAfqC,kCAgBxBwB,EAAU,CACvBL,IAAKC,IAAU,oBAAgBpB,GAC/BqB,OAAQ,QAlB6B,QAgBvCY,EAhBuC,OAqBjCG,EAAeH,EAAOC,KAAKG,aAAaC,KAAI,SAAAC,GAChD,MAAO,CACLC,MAAOD,EAAKE,KAAKxE,KACjBG,MAAOmE,EAAKE,KAAKC,OAIrBhC,EAAS0B,GAETnB,EAAiB,CACfhD,KAAMgE,EAAOC,KAAKjE,KAClB0C,YAAasB,EAAOC,KAAKvB,YACzBC,MAAOqB,EAAOC,KAAKtB,MACnBC,UAAWoB,EAAOC,KAAKrB,UACvBC,UAAWmB,EAAOC,KAAKpB,UACvBL,MAAO2B,EACPrB,OAAQkB,EAAOC,KAAKnB,SArCiB,4CAwCxC,CAACS,EAAWxB,IA0Bf,OAxBAE,IAAMyC,WAAU,WACV9C,GACFkC,MAED,CAAClC,EAAMkC,IAEV7B,IAAMyC,WAAU,WACdC,QAAQC,IAAIlF,GACRkC,GACF4B,EAAY,CACVqB,OAAQ,CACNC,OAAQpF,KAETwB,MAAK,SAAA6D,GAAS,IAAD,EACdtC,IAAc,OAAJsC,QAAI,IAAJA,GAAA,UAAAA,EAAMd,YAAN,eAAYC,OAAQ,IAAIG,KAAI,SAAAC,GACpC,MAAO,CACLC,MAAOD,EAAKtE,KACZG,MAAOmE,EAAKG,aAKnB,CAAC/E,EAAS8D,EAAa5B,IAGxB,mCACE,eAAC,IAAD,CACEA,KAAMA,EACNoD,QAAS,kBAAMnD,GAAQ,IAFzB,UAIE,cAAC,IAAD,CAAcoD,aAAW,EAAzB,yBACA,cAAC,IAAD,UAEI3B,EACA,qBAAKzD,UAAU,mBAAf,iCACA,cAAC,IAAD,UACE,eAAC,IAAD,CAAMA,UAAU,YAAhB,UACE,eAAC,IAAD,CAAYqF,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAQtF,UAAU,OAAOuF,QAAQ,YAAjC,oBAEF,cAAC,IAAD,CAAMC,GAAG,KAAKF,GAAG,IAAjB,SACE,cAAC,IAAD,CAAQV,GAAG,YAAYzE,KAAK,OAAOG,MAAO4C,EAAc/C,KAAMI,SAAUqD,EAAcxD,YAAY,6BAGtG,eAAC,IAAD,CAAYiF,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAQtF,UAAU,OAAOuF,QAAQ,aAAjC,qBAEF,cAAC,IAAD,CAAMC,GAAG,KAAKF,GAAG,IAAjB,SACE,cAAC,IAAD,CAAQV,GAAG,aAAazE,KAAK,QAAQG,MAAO4C,EAAcJ,MAAOvC,SAAUqD,EAAcxD,YAAY,8BAGzG,eAAC,IAAD,CAAYiF,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAQtF,UAAU,OAAOuF,QAAQ,gBAAjC,wBAEF,cAAC,IAAD,CAAMC,GAAG,KAAKF,GAAG,IAAjB,SACE,eAAC,IAAD,CACEG,QAAM,EACNtF,KAAK,YACLyE,GAAG,gBACHrE,SAAUqD,EACVtD,MAAO4C,EAAcH,UALvB,UAOE,wBAAQzC,MAAM,IAAd,oBAEEmC,EAAS+B,KAAI,SAAAkB,GACX,OACE,wBAAyBpF,MAAOoF,EAAQd,GAAxC,SAA6Cc,EAAQvF,MAAxCuF,EAAQd,eAOjC,eAAC,IAAD,CAAYS,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAQtF,UAAU,OAAOuF,QAAQ,eAAjC,uBAEF,cAAC,IAAD,CAAMC,GAAG,KAAKF,GAAG,IAAjB,SACE,eAAC,IAAD,CACEG,QAAM,EACNtF,KAAK,YACLyE,GAAG,eACHrE,SAAUqD,EACVtD,MAAO4C,EAAcF,UALvB,UAOE,wBAAQ1C,MAAM,IAAd,oBAEEiC,EAASiC,KAAI,SAAAmB,GACX,OACE,wBAAyBrF,MAAOqF,EAAQf,GAAxC,SAA6Ce,EAAQC,aAAxCD,EAAQf,eAOjC,eAAC,IAAD,CAAYS,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAQtF,UAAU,OAAOuF,QAAQ,eAAjC,qBAEF,cAAC,IAAD,CAAMC,GAAG,KAAKF,GAAG,IAAjB,SACE,cAAC,IAAD,CAAa/E,SAjLN,SAACsF,GACxB1C,GAAiB,SAACW,GAChB,OAAO,2BACFA,GADL,IAEEnB,MAAOkD,QA6K8C1F,KAAK,UAAU2F,SAAO,EAACC,QAASpD,EAAOrC,MAAO4C,EAAcP,MAAOqD,cAAe,SAACC,GAAD,OAAW3D,EAAW2D,WAGrJ,eAAC,IAAD,CAAYZ,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAQtF,UAAU,OAAOuF,QAAQ,mBAAjC,2BAEF,cAAC,IAAD,CAAMC,GAAG,KAAKF,GAAG,IAAjB,SACE,cAAC,KAAD,CAAWV,GAAG,mBAAmBzE,KAAK,cAAcG,MAAO4C,EAAcL,YAAatC,SAAUqD,EAAcxD,YAAY,+BAG9H,eAAC,IAAD,CAAYiF,KAAG,EAAf,UACE,cAAC,IAAD,CAAMG,GAAG,IAAIF,GAAG,IAAhB,SACE,cAAC,IAAD,CAAQC,QAAQ,mBAAhB,sBAEF,cAAC,IAAD,CAAMC,GAAG,IAAIF,GAAG,IAAhB,SACE,cAAC,KAAD,CACEY,MAAM,UACN/F,KAAK,SACL6D,QAASd,EAAcD,OACvB1C,SAAUqD,EAGNuC,QAAS,WACTC,MAAM,qBAUxB,eAAC,IAAD,WACE,cAAC,IAAD,CACEF,MAAM,YACNG,QAAS,kBA5PjBrE,GAAQ,GACRmB,EAAiB,CACfhD,KAAM,GACN0C,YAAa,GACbC,MAAO,GACPC,UAAW,GACXC,UAAW,GACXL,MAAO,GACPM,QAAQ,SAGVd,EAAU,OA+OJ,oBAMA,cAAC,IAAD,CAASkE,QAjNI,WACnB,IAAK5C,EAAS,CACZ,IAAM6C,EAAS,CACblC,KAAK,2BACAlB,GADD,IAEFqD,QAASrD,EAAcP,MAAM6B,KAAI,SAAAC,GAAI,OAAIA,EAAKnE,mBAI3CgG,EAAOlC,KAAKzB,MAEfT,IACFoE,EAAOjD,IAAMC,IAAU,oBAAgBpB,GACvCoE,EAAO/C,OAAS,OAGlBG,EAAU4C,GAAQjF,MAAK,SAAA6D,GAhDzBlD,GAAQ,GACRmB,EAAiB,CACfhD,KAAM,GACN0C,YAAa,GACbC,MAAO,GACPC,UAAW,GACXC,UAAW,GACXL,MAAO,GACPM,QAAQ,IAEVd,EAAU,MACVF,SAsOsCjC,UAAU,OAAOkG,MAAM,UAAvD,SAAmEzC,EAAU,UAAY,qB,kBC1S7F+C,EAAS,CACX,OACA,QACA,CACEzF,IAAK,YACL2D,MAAO,cAET,cACA,WA+HW+B,UA5HE,WAAO,IAAD,EACMC,qBAAWC,KAApBC,GADG,EACbC,SADa,EACHD,MADG,EAEGxE,IAAMC,UAAS,GAFlB,mBAEdN,EAFc,KAERC,EAFQ,OAISI,IAAMC,SAAS,IAJxB,mBAIdxC,EAJc,KAILyC,EAJK,OAMeF,IAAMC,SAAS,GAN9B,mBAMdyE,EANc,KAMFC,EANE,OAOgB3E,IAAMC,SAAS,GAP/B,mBAOd2E,EAPc,KAODC,EAPC,OASO7E,IAAMC,SAAS,MATtB,mBASd6E,EATc,KASN/E,EATM,OAWqBiB,YACxC,CACEC,IAAKC,IAAa,YAClBC,OAAQ,MACRyB,OAAQ,CACNmC,OAAQH,IAGZ,CACExD,QAAQ,IApBS,0BAWZY,EAXY,EAWZA,KAAMX,EAXM,EAWNA,QAASvC,EAXH,EAWGA,MAASkG,EAXZ,KAyCfC,EAAWjF,IAAM8B,aAAY,WACjCkD,IACG/F,MAAK,SAAA6D,GACJ6B,EAAc7B,EAAKd,KAAK0C,iBAE3B,CAACM,IAeJ,OAJAhF,IAAMyC,WAAU,WACdwC,MACC,CAACA,IAGF,qCACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAM7B,GAAG,KAAK8B,GAAG,KAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,uBAGA,cAAC,IAAD,UACA,cAAC,IAAD,CACE3E,MAAOc,GAAgBvC,EAAN,IAAuB,OAAJkD,QAAI,IAAJA,OAAA,EAAAA,EAAMC,OAAQ,GAClDmC,OAAQA,EACRe,SAAO,EACPC,aAAc,GACd/D,QAASA,EACTgE,cACE,cAAC7H,EAAA,EAAD,CAAaC,QAASA,EAASC,cArDvB,SAAC+D,GACR,UAAVA,EAAE9C,IACHqG,EAAM,CACJpC,OAAQ,CACNC,OAAQpF,KAIZyC,EAAWuB,EAAEE,OAAOzD,QA6CV,SACE,cAAC,IAAD,CACE4F,MAAM,UACNC,QAAQ,UACNnG,UAAU,gBACVqG,QAAS,kBAAMrE,GAAQ,IAJ3B,SAMI,sBAAMhC,UAAU,OAAhB,6BAIR0H,eACE,cAAC,IAAD,CACEC,WAAYX,EACZY,MAAOd,EACPe,mBAAoB,SAACC,GAAD,OAAOb,EAAca,MAG7CC,YAAa,CACX,UACE,SAACtD,GAAD,OACE,6BACGpG,YAAWoG,EAAKuD,cAGvB,QACE,SAACvD,GAAD,OACE,+BACE,cAAC,IAAD,CAAS4B,QAAS,kBArEnBzB,EAqEmCH,EAAKG,GApEzDzC,EAAUyC,QACV5C,GAAQ,GAFQ,IAAC4C,GAqE6CsB,MAAM,UAAU+B,KAAK,KAAKjI,UAAU,OAAhF,kBAEW,iBAAT4G,GACF,cAAC,IAAD,CAASP,QAAS,kBA5DlBzB,EA4DmCH,EAAKG,QA3D1DwC,EAAM,CACJ/D,IAAKC,IAAU,oBAAgBsB,GAC/BrB,OAAQ,WACPlC,MAAK,WACNgG,OALe,IAACzC,GA4D6CsB,MAAM,SAAS+B,KAAK,KAAjE,oCAWhB,cAAC,EAAD,CAAYlG,KAAMA,EAAMC,QAASA,EAASC,QAASmF,EAAOlF,OAAQgF,EAAQ/E,UAAWA","file":"static/js/9.e20aef3b.chunk.js","sourcesContent":["export const formatDate = (date) => {\n  // return (new Date(date)).toISOString().slice(0, 19).replace(/-/g, \"/\").replace(\"T\", \" \");\n  return (new Date(date)).toLocaleString();\n}\n\nexport const datesObj = {\n  convert:function(d) {\n      // Converts the date in d to a date-object. The input can be:\n      //   a date object: returned without modification\n      //  an array      : Interpreted as [year,month,day]. NOTE: month is 0-11.\n      //   a number     : Interpreted as number of milliseconds\n      //                  since 1 Jan 1970 (a timestamp) \n      //   a string     : Any format supported by the javascript engine, like\n      //                  \"YYYY/MM/DD\", \"MM/DD/YYYY\", \"Jan 31 2009\" etc.\n      //  an object     : Interpreted as an object with year, month and date\n      //                  attributes.  **NOTE** month is 0-11.\n      return (\n          d.constructor === Date ? d :\n          d.constructor === Array ? new Date(d[0],d[1],d[2]) :\n          d.constructor === Number ? new Date(d) :\n          d.constructor === String ? new Date(d) :\n          typeof d === \"object\" ? new Date(d.year,d.month,d.date) :\n          NaN\n      );\n  },\n  compare:function(a,b) {\n      // Compare two dates (could be of any type supported by the convert\n      // function above) and returns:\n      //  -1 : if a < b\n      //   0 : if a = b\n      //   1 : if a > b\n      // NaN : if a or b is an illegal date\n      // NOTE: The code inside isFinite does an assignment (=).\n      return (\n          isFinite(a=this.convert(a).valueOf()) &&\n          isFinite(b=this.convert(b).valueOf()) ?\n          (a>b)-(a<b) :\n          NaN\n      );\n  },\n  inRange:function(d,start,end) {\n      // Checks if date in d is between dates in start and end.\n      // Returns a boolean or NaN:\n      //    true  : if d is between start and end (inclusive)\n      //    false : if d is before start or after end\n      //    NaN   : if one or more of the dates is illegal.\n      // NOTE: The code inside isFinite does an assignment (=).\n     return (\n          isFinite(d=this.convert(d).valueOf()) &&\n          isFinite(start=this.convert(start).valueOf()) &&\n          isFinite(end=this.convert(end).valueOf()) ?\n          start <= d && d <= end :\n          NaN\n      );\n  }\n}","import React from 'react'\r\n\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CInput,\r\n} from '@coreui/react'\r\n\r\n\r\nconst TableHeader = ({ keyword = '', changeKeyword = null, children }) => {\r\n  return (\r\n    <CRow className=\"align-items-center justify-content-between pb-2\">\r\n      <CCol sm=\"4\">\r\n        <CFormGroup className=\"mb-0\">\r\n          <CInput\r\n            type=\"text\"\r\n            name=\"nf-text\"\r\n            placeholder=\"Search Here..\"\r\n            autoComplete=\"off\"\r\n            value={keyword}\r\n            onChange={changeKeyword}\r\n            onKeyPress={changeKeyword}\r\n          />\r\n        </CFormGroup>\r\n      </CCol>\r\n      <CCol sm=\"4\" className=\"d-flex justify-content-end\">\r\n        { children }\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default TableHeader\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react'\nimport useAxios from 'axios-hooks'\n\nimport AsyncSelect from 'react-select';\n\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n  CButton,\n  CFormGroup,\n  CCol,\n  CLabel,\n  CInput,\n  CTextarea,\n  CSwitch,\n  CRow,\n  CSelect,\n} from '@coreui/react'\n\nimport { PUBLIC_API } from '../../config/index'\n\n\nconst AddPackage = ({ show, setShow, refetch, itemId, setEditId }) => {\n  const [keyword, setKeyword] = React.useState('')\n  const [services, setServices] = React.useState([])\n  const [petTypes, setPetTypes] = React.useState([])\n  const [items, setItems] = React.useState([])\n\n  const [packageRecord, setPackageRecord] = React.useState({\n    name: '',\n    description: '',\n    price: '',\n    petTypeId: '',\n    serviceId: '',\n    items: [],\n    active: true\n  })\n\n  const [\n    { loading },\n    fetchData\n  ] = useAxios(\n    {\n      url: PUBLIC_API + '/packages',\n      method: 'POST'\n    },\n    { manual: true }\n  )\n\n  const [\n    ,\n    fetchRecord\n  ] = useAxios(\n    {\n      url: PUBLIC_API + '/items',\n      method: 'GET'\n    },\n    { manual: true }\n  )\n\n  const resetAndCancel = () => {\n    setShow(false)\n    setPackageRecord({\n      name: '',\n      description: '',\n      price: '',\n      petTypeId: '',\n      serviceId: '',\n      items: [],\n      active: true\n    })\n\n    setEditId(null)\n  }\n\n  const confirmClose = () => {\n    setShow(false)\n    setPackageRecord({\n      name: '',\n      description: '',\n      price: '',\n      petTypeId: '',\n      serviceId: '',\n      items: [],\n      active: true\n    })\n    setEditId(null)\n    refetch()\n  }\n\n  const handleChange = (e) => {\n    setPackageRecord((oldState) => {\n      return {\n        ...oldState,\n        [e.target.name]: e.target.name === 'active' ? e.target.checked : e.target.value\n      }\n    })\n  }\n\n  const handleItemChange = (context) => {\n    setPackageRecord((oldState) => {\n      return {\n        ...oldState,\n        items: context\n      }\n    })\n  }\n\n  const storePackage = () => {\n    if (!loading) {\n      const config = {\n        data: {\n          ...packageRecord,\n          itemIds: packageRecord.items.map(item => item.value)\n        }\n      }\n\n      delete config.data.items\n\n      if (itemId) {\n        config.url = PUBLIC_API + `/packages/${itemId}`\n        config.method = 'PUT'\n      }\n\n      fetchData(config).then(resp => {\n        confirmClose()\n      })\n    }\n  }\n\n  const initializeRecord = React.useCallback(async () => {\n    let result = await fetchData({\n      url: PUBLIC_API + '/services',\n      method: 'GET'\n    })\n\n    setServices(result?.data?.rows || [])\n\n    result = await fetchData({\n      url: PUBLIC_API + '/pet-types',\n      method: 'GET'\n    })\n\n    setPetTypes(result?.data?.rows || [])\n\n    if (itemId) {\n      result = await fetchData({\n        url: PUBLIC_API + `/packages/${itemId}`,\n        method: 'GET'\n      })\n\n      const defaultItems = result.data.PackageItems.map(item => {\n        return {\n          label: item.Item.name,\n          value: item.Item.id\n        }\n      })\n\n      setItems(defaultItems)\n\n      setPackageRecord({\n        name: result.data.name,\n        description: result.data.description,\n        price: result.data.price,\n        petTypeId: result.data.petTypeId,\n        serviceId: result.data.serviceId,\n        items: defaultItems,\n        active: result.data.active\n      })\n    }\n  }, [fetchData, itemId])\n\n  React.useEffect(() => {\n    if (show) {\n      initializeRecord()\n    }\n  }, [show, initializeRecord])\n\n  React.useEffect(() => {\n    console.log(keyword)\n    if (show) {\n      fetchRecord({\n        params: {\n          search: keyword\n        }\n      }).then(resp => {\n        setItems((resp?.data?.rows || []).map(item => {\n          return {\n            label: item.name,\n            value: item.id\n          }\n        }))\n      })\n    }\n  }, [keyword, fetchRecord, show])\n\n  return (\n    <>\n      <CModal\n        show={show}\n        onClose={() => setShow(false)}\n      >\n        <CModalHeader closeButton>Add Package</CModalHeader>\n        <CModalBody>\n          {\n            loading?\n            <div className=\"py-5 text-center\">Loading Details ...</div> :\n            <CRow>\n              <CCol className=\"px-5 pt-4\">\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel className=\"pt-1\" htmlFor=\"text-name\">Name</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput id=\"text-name\" name=\"name\" value={packageRecord.name} onChange={handleChange} placeholder=\"Enter Name for item\" />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel className=\"pt-1\" htmlFor=\"text-price\">Price</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput id=\"text-price\" name=\"price\" value={packageRecord.price} onChange={handleChange} placeholder=\"Enter Price for item\" />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel className=\"pt-1\" htmlFor=\"text-pet-type\">Pet Type</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect \n                      custom \n                      name=\"petTypeId\" \n                      id=\"text-pet-type\"\n                      onChange={handleChange}\n                      value={packageRecord.petTypeId}\n                    >\n                      <option value=\"0\">Select</option>\n                      {\n                        petTypes.map(petType => {\n                          return (\n                            <option key={petType.id} value={petType.id}>{petType.name}</option>\n                          )\n                        })\n                      }\n                    </CSelect>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel className=\"pt-1\" htmlFor=\"text-service\">Service</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect \n                      custom \n                      name=\"serviceId\" \n                      id=\"text-service\"\n                      onChange={handleChange}\n                      value={packageRecord.serviceId}\n                    >\n                      <option value=\"0\">Select</option>\n                      {\n                        services.map(service => {\n                          return (\n                            <option key={service.id} value={service.id}>{service.displayName}</option>\n                          )\n                        })\n                      }\n                    </CSelect>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel className=\"pt-1\" htmlFor=\"text-service\">Items</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <AsyncSelect onChange={handleItemChange} name=\"itemIds\" isMulti options={items} value={packageRecord.items} onInputChange={(input) => setKeyword(input)} ></AsyncSelect>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel className=\"pt-1\" htmlFor=\"text-description\">Description</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CTextarea id=\"text-description\" name=\"description\" value={packageRecord.description} onChange={handleChange} placeholder=\"Enter Description ...\" ></CTextarea>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol xs=\"3\" md=\"3\">\n                    <CLabel htmlFor=\"text-description\">Active</CLabel>\n                  </CCol>\n                  <CCol xs=\"9\" md=\"9\">\n                    <CSwitch\n                      color=\"primary\"\n                      name=\"active\"\n                      checked={packageRecord.active}\n                      onChange={handleChange}\n                      {\n                        ...({\n                          variant: 'opposite',\n                          shape:'pill'\n                        })\n                      }\n                    />\n                  </CCol>\n                </CFormGroup>\n              </CCol>\n            </CRow>\n          }\n        </CModalBody>\n        <CModalFooter>\n          <CButton\n            color=\"secondary\"\n            onClick={() => resetAndCancel()}\n          >\n            Cancel\n          </CButton>\n          <CButton onClick={storePackage} className=\"ml-1\" color=\"primary\">{ loading ? 'Loading' : 'Confirm' }</CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\n\nexport default AddPackage\n","import React, {useContext} from 'react'\nimport useAxios from 'axios-hooks'\nimport TableHeader from '../base/tableHeader/TableHeader'\nimport AddPackage from './AddPackage'\n\nimport { formatDate } from '../../utils/dateUtils'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CPagination\n} from '@coreui/react'\n\nimport { AppContext } from '../../App.js'\nimport { PUBLIC_API } from '../../config/index'\n\nconst fields = [\n    'name',\n    'price',\n    {\n      key: 'createdAt',\n      label: 'Registered'\n    },\n    'description',\n    'actions'\n  ]\n\nconst Packages = () => {\n  const { addToast, role } = useContext(AppContext)\n  const [show, setShow] = React.useState(false)\n\n  const [keyword, setKeyword] = React.useState('')\n\n  const [totalPages, setTotalPages] = React.useState(1)\n  const [currentPage, setActivePage] = React.useState(1)\n\n  const [editId, setEditId] = React.useState(null)\n\n  const [{ data, loading, error }, fetch] = useAxios(\n    {\n      url: PUBLIC_API + '/packages',\n      method: 'GET',\n      params: {\n        pageNo: currentPage\n      }\n    },\n    {\n      manual: true\n    }\n  )\n\n  const changeKeyword = (e) => {\n    if(e.key === 'Enter') {\n      fetch({\n        params: {\n          search: keyword\n        }\n      })\n    } else {\n      setKeyword(e.target.value)\n    }\n  }\n\n  const editModal = (id) => {\n    setEditId(id)\n    setShow(true)\n  }\n\n  const loadData = React.useCallback(() => {\n    fetch()\n      .then(resp => {\n        setTotalPages(resp.data.totalPages)\n      })\n  }, [fetch])\n\n  const deleteItem = (id) => {\n    fetch({\n      url: PUBLIC_API + `/packages/${id}`,\n      method: 'DELETE'\n    }).then(() => {\n      loadData()\n    })\n  }\n\n  React.useEffect(() => {\n    loadData()\n  }, [loadData])\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              Packages\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={loading ? [] : (error ? [] : data?.rows || [])}\n              fields={fields}\n              striped\n              itemsPerPage={10}\n              loading={loading}\n              overTableSlot={\n                <TableHeader keyword={keyword} changeKeyword={changeKeyword}>\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                      className=\"m-2 pl-3 pr-4\"\n                      onClick={() => setShow(true)}\n                    >\n                      <span className=\"ml-1\">Add Package</span>\n                    </CButton>\n                </TableHeader>\n              }\n              underTableSlot={\n                <CPagination\n                  activePage={currentPage}\n                  pages={totalPages}\n                  onActivePageChange={(i) => setActivePage(i)}\n                ></CPagination>\n              }\n              scopedSlots={{\n                'createdAt':\n                  (item) => (\n                    <td>\n                      {formatDate(item.createdAt)}\n                    </td>\n                  ),\n                'actions':\n                  (item) => (\n                    <td>\n                      <CButton onClick={() => editModal(item.id)} color=\"primary\" size=\"sm\" className=\"mr-1\">Edit</CButton>\n                      {\n                        role !== 'receptionist' &&\n                      <CButton onClick={() => deleteItem(item.id)} color=\"danger\" size=\"sm\">Delete</CButton>\n                      }\n                    </td>\n                  )\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <AddPackage show={show} setShow={setShow} refetch={fetch} itemId={editId} setEditId={setEditId}/>\n    </>\n  )\n}\n\nexport default Packages\n"],"sourceRoot":""}