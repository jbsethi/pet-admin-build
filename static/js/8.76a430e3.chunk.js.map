{"version":3,"sources":["views/visitorDetails/NewPrescription.js","views/visitorDetails/PetHistory.js","views/visitorDetails/PetTab.js","views/visitorDetails/PetTabs.js","views/visitorDetails/Treatments.js"],"names":["withRouter","match","show","setShow","details","refetch","React","useState","statement","prescription","description","recomendation","followUp","treatmentRecord","setTreatmentRecord","handleChange","e","oldState","target","name","value","useEffect","onClose","htmlFor","disabled","onChange","id","placeholder","type","color","onClick","PetHistory","setDetails","items","setItems","useAxios","url","method","manual","loading","fetch","data","petId","params","then","resp","rows","className","fields","onRowClick","item","viewDetails","striped","status","pet","to","pathname","patientId","createdAt","PetTabs","pets","map","Treatment","history","useHistory","length","replace","md","path","exact","render","component"],"mappings":"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","file":"static/js/8.76a430e3.chunk.js","sourcesContent":["import { CModal, CModalBody, CModalFooter, CModalHeader, CFormGroup, CLabel, CInput, CButton } from '@coreui/react'\nimport React from 'react'\n\nimport { withRouter } from 'react-router-dom'\n\nconst NewPrescription = ({ match, show, setShow, details, refetch }) => {\n\n  const [treatmentRecord, setTreatmentRecord] = React.useState({\n    statement: '',\n    prescription: '',\n    description: '',\n    recomendation: '',\n    followUp: ''\n  })\n\n  const handleChange = (e) => {\n    setTreatmentRecord(oldState => {\n      return {\n        ...oldState,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  React.useEffect(() => {\n    if (show && details) {\n      setTreatmentRecord({\n        statement: details.statement,\n        prescription: details.prescription,\n        description: details.description,\n        recomendation: details.recomendation,\n        followUp: ''\n      })\n    }\n  }, [details, show])\n\n  return (\n    <CModal show={show} onClose={() => setShow(false)}>\n      <CModalHeader>\n        {\n          details ?\n          'Treatment Details' :\n          'New Prescription'\n        }\n      </CModalHeader>\n      <CModalBody>\n      <CFormGroup>\n        <CLabel htmlFor=\"Statement\">Statement</CLabel>\n        <CInput disabled={details} value={treatmentRecord.statement} name=\"statement\" onChange={handleChange} id=\"statement\" placeholder=\"Enter Statement\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"prescription\">Prescription</CLabel>\n        <CInput disabled={details} value={treatmentRecord.prescription} name=\"prescription\" onChange={handleChange} id=\"prescription\" placeholder=\"Enter Prescription\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"recomendation\">Recomendation</CLabel>\n        <CInput disabled={details} value={treatmentRecord.recomendation} name=\"recomendation\" onChange={handleChange} id=\"recomendation\" placeholder=\"Enter Recomendation\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"description\">Description</CLabel>\n        <CInput disabled={details} value={treatmentRecord.description} name=\"description\" onChange={handleChange} id=\"description\" placeholder=\"Enter Description\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"followUp\">Follow up ?</CLabel>\n        <CInput disabled={details} type=\"number\" value={treatmentRecord.followUp} name=\"followUp\" onChange={handleChange} id=\"followUp\" placeholder=\"Enter follow Up day\" />\n      </CFormGroup>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"danger\" onClick={() => setShow(false)}>Cancel</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default withRouter(NewPrescription)\n","import { CCard, CCardBody, CCardHeader, CDataTable } from '@coreui/react'\nimport React from 'react'\n\nimport useAxios from 'axios-hooks'\n\nimport NewPrescription from './NewPrescription'\n\nconst PetHistory = ({ match }) => {\n  const [details, setDetails] = React.useState(null)\n  const [show, setShow] = React.useState(false)\n  const [items, setItems] = React.useState([])\n\n  const [{ loading }, fetch] = useAxios(\n    {\n      url: 'https://app.aloropivetcenter.com/api/treatments/all/pets',\n      method: 'POST',\n    },\n    {\n      manual: true\n    }\n  )\n\n  const viewDetails = (item) => {\n    setDetails(item)\n    setShow(true)\n  }\n\n  const toggleModal = (status) => {\n    setShow(status)\n    if (!status) {\n      setDetails(null)\n    }\n  }\n  \n  React.useEffect(() => {\n    fetch({\n      data: {\n        petId: match.params.petId\n      }\n    }).then(resp => {\n      setItems(resp?.data?.rows || [])\n    })\n  }, [fetch, match.params.petId])\n\n  return (\n    <CCard>\n      <CCardHeader>\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <div className=\"font-lg\">Pet Previous History</div>\n        </div>\n      </CCardHeader>\n      <CCardBody className=\"p-0\">\n        <CDataTable\n          loading={loading}\n          fields={['statement', 'description', 'createdAt']}\n          items={items}\n          onRowClick={(item) => viewDetails(item)}\n          striped\n        ></CDataTable>\n      </CCardBody>\n\n      <NewPrescription  show={show} setShow={toggleModal} details={details}/>\n    </CCard>\n  )\n}\n\nexport default PetHistory\n","import { CCard, CCardBody } from '@coreui/react'\nimport React from 'react'\n\nimport { NavLink } from 'react-router-dom'\n\nimport { withRouter } from 'react-router-dom'\n\nimport './PetTab.css'\n\nconst PetTab = ({ match, pet }) => {\n  return (\n    <div className=\"petTab\">\n      <NavLink to={{\n        pathname: `/visitors/${pet.patientId}/treatments/${pet.id}`\n      }}>\n        <CCard className=\"m-0\">\n          <CCardBody className=\"p-3\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <p className=\"m-0\">{pet.name}</p>\n              <p className=\"m-0\">{pet.createdAt}</p>\n            </div>\n          </CCardBody>\n        </CCard>\n      </NavLink>\n    </div>\n  )\n}\n\nexport default withRouter(PetTab)\n","import React from 'react'\nimport PetTab from './PetTab'\n\nconst PetTabs = ({ pets }) => {\n  return pets.map(pet => (\n    <PetTab key={pet.id} pet={pet}></PetTab>\n  ))\n}\n\nexport default PetTabs\n","import {  CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\nimport React from 'react'\nimport { Route, useHistory } from 'react-router-dom'\nimport PetHistory from './PetHistory'\nimport PetTabs from './PetTabs'\n\nimport useAxios from 'axios-hooks'\n\nconst Treatment = ({ match }) => {\n  const history = useHistory()\n  const [items, setItems] = React.useState([])\n  const [{ loading }, fetch] = useAxios(\n    {\n      url: 'https://app.aloropivetcenter.com/api/pets/all/patients',\n      method: 'POST',\n    },\n    {\n      manual: true\n    }\n  )\n\n  React.useEffect(() => {\n    fetch({\n      data: {\n        patientId: match.params.id\n      }\n    }).then((resp) => {\n      setItems(resp?.data?.rows.map(item => {\n        return {\n          id: item.id,\n          patientId: match.params.id,\n          name: item.name,\n          createdAt: item.createdAt\n        }\n      }))\n\n      if (resp?.data?.rows?.length  > 0)\n        history.replace(`/visitors/${match.params.id}/treatments/${resp?.data?.rows[0].id}`)\n    })\n\n  }, [fetch, match.params.id, history])\n\n\n  return (\n    <>\n      <CRow>\n        <CCol md=\"4\">\n          <CCard>\n            <CCardHeader>\n              <p className=\"font-lg m-0\">Pets</p>\n            </CCardHeader>\n            <CCardBody className=\"p-0\">\n              {\n                loading ?\n                <p className=\"pt-3 text-center\">Loading ...</p> :\n                <PetTabs pets={items} ></PetTabs>\n              }\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol>\n          <Route path=\"/visitors/:id/treatments\" exact render={() => (\n            <p className=\"p-5 text-center\">Please select Pet to view details.</p>\n          )} />\n          <Route path=\"/visitors/:id/treatments/:petId\" component={PetHistory} />\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Treatment\n"],"sourceRoot":""}