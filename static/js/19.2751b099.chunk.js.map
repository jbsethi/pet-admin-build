{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","views/addVisitor/ReceiptForm/AddReceiptForm.js","views/addVisitor/NewVisitorsForm.js","views/addVisitor/ReceiptForm/ReceiptForm.js","views/addVisitor/DoctorsForm/DoctorReceipt.js","views/addVisitor/DoctorsForm/AddNewPetForm.js","views/addVisitor/DoctorsForm/DoctorAppointmentForm.js","views/addVisitor/DoctorsForm/DoctorsForm.js","views/addVisitor/addVisitorReducer.js","views/addVisitor/addVisitorState.js","views/addVisitor/AddVisitor.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","AddReceiptForm","show","setShow","dispatch","addToast","React","useContext","AppContext","useState","categoryId","itemId","packageId","quantity","discount","addReceiptRecord","setAddReceiptRecord","categories","setCategories","items","setItems","packages","setPackages","useAxios","url","PUBLIC_API","method","manual","fetchRecord","handleChange","e","resetOther","isSelect","includes","valueFor","oldState","option","target","name","getCategories","useCallback","a","record","options","data","rows","map","category","label","displayName","id","response","message","getPackageItems","params","serviceId","item","price","record2","options2","useEffect","onClose","row","className","htmlFor","xs","onChange","placeholder","type","color","onClick","payload","NewVisitorsForm","isVisitorRecordAdded","visitorRecord","disabled","contact","email","emiratesId","receiptTableFields","ReceiptForm","receiptFormVisibility","showAddReceiptFormModal","receiptItems","showAddReceiptForm","status","shape","variant","checked","fields","footer","hover","scopedSlots","console","log","size","overTableSlot","DoctorReceipt","doctorsReceipt","md","pet","appointmentDate","getDate","getMonth","getFullYear","assignedDoctor","isFollowUp","fee","AddNewPetForm","visitorId","setSelectedPet","breed","age","dob","specie","gender","microchip","microchipNumber","petInfo","setPetInfo","handleChangePetInfo","dobAge","currentYear","Date","inYears","sm","custom","patientId","resp","catch","DoctorAppointmentForm","showAddAppointmentModal","setShowAddAppointmentModal","showNewPetModal","setShowNewPetModal","keyword","setKeyword","setDoctorKeyword","doctors","setDoctors","selectedPet","selectedDoctor","setSelectedDoctor","setFee","setIsFollowUp","length","search","o","onInputChange","input","assignTo","DoctorsForm","doctorFormVisibility","isDoctorVisitAdded","addVisitorReducer","state","visitorsId","isItemId","itemIdx","findIndex","i","qty","total","idx","filter","initialState","AddVisitor","history","useHistory","useReducer","reducer","addVisit","preventDefault","addUserVisit","appointment","checkUpPrice","description","followUp","push","storeNewOrder"],"mappings":"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","file":"static/js/19.2751b099.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react'\n\nimport RSelect from 'react-select';\n\nimport {\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalBody,\n  CButton,\n  CFormGroup,\n  CCol,\n  CLabel,\n  CInput\n} from '@coreui/react'\n\nimport useAxios from 'axios-hooks'\n\nimport { AppContext } from '../../../App.js'\nimport { PUBLIC_API } from '../../../config/index'\n\n\nconst AddReceiptForm = ({ show, setShow, dispatch }) => {\n  const { addToast } = React.useContext(AppContext)\n  const [addReceiptRecord, setAddReceiptRecord] = React.useState({\n    categoryId: null,\n    itemId: null,\n    packageId: null,\n    quantity: 1,\n    discount: 0\n  })\n\n  const [categories, setCategories] = React.useState([])\n  const [items, setItems] = React.useState([])\n  const [packages, setPackages] = React.useState([])\n\n  const [\n    ,\n    fetchRecord\n  ] = useAxios(\n    {\n      url: PUBLIC_API + '/services',\n      method: 'POST'\n    },\n    { manual: true }\n  )\n\n  const handleChange = (e) => {\n    if (e.isSelect) {\n      let resetOther\n      if (['packageId', 'itemId'].includes(e.valueFor)) {\n        resetOther = e.valueFor === 'itemId' ? 'packageId' : 'itemId'\n      }\n      setAddReceiptRecord(oldState => {\n        return {\n          ...oldState,\n          [resetOther]: null,\n          [e.valueFor]: e.option\n        }\n      })\n    } else {\n      setAddReceiptRecord(oldState => {\n        return {\n          ...oldState,\n          [e.target.name]: e.target.value\n        }\n      })\n    }\n  }\n\n  const getCategories = React.useCallback(async () => {\n    try {\n      const record = await fetchRecord({\n        url: PUBLIC_API + '/services',\n        method: 'GET'\n      })\n\n      const options = (record?.data?.rows || []).map(category => {\n        return {\n          label: category.displayName,\n          value: category.id\n        }\n      })\n\n      setCategories(options)\n    } catch (err) {\n      if (err.response)\n      addToast({\n        message: err?.response?.data?.message || 'Error Try again later !'\n      })\n    }\n  }, [fetchRecord])\n\n  const getPackageItems = React.useCallback(async () => {\n    try {\n      setAddReceiptRecord(oldState => {\n        return {\n          ...oldState,\n          itemId: null,\n          packageId: null,\n        }\n      })\n\n      const record = await fetchRecord({\n        url: PUBLIC_API + '/packages/records/active',\n        method: 'GET',\n        params: {\n          serviceId: addReceiptRecord.categoryId?.value || null\n        }\n      })\n\n      const options = (record?.data || []).map(item => {\n        return {\n          label: item.name,\n          value: item.id,\n          price: item.price\n        }\n      })\n\n      setPackages(options)\n\n      const record2 = await fetchRecord({\n        url: PUBLIC_API + '/items/records/active',\n        method: 'GET',\n        params: {\n          serviceId: addReceiptRecord.categoryId?.value || null\n        }\n      })\n\n      const options2 = (record2?.data || []).map(item => {\n        return {\n          label: item.name,\n          value: item.id,\n          price: item.price\n        }\n      })\n\n      setItems(options2)\n    } catch (err) {\n      addToast({\n        message: err?.response?.data?.message || 'Error occured. Please try again .'\n      })\n    }\n  }, [fetchRecord, addReceiptRecord?.categoryId?.value])\n\n  const submitRecord = () => {\n    if (!(addReceiptRecord.categoryId && (addReceiptRecord.itemId || addReceiptRecord.packageId))) {\n      addToast({\n        message: 'Please select item first !'\n      })\n    } else if (addReceiptRecord.quantity <= 0) {\n      addToast({\n        message: 'Quantity must not be 0 !'\n      })\n    } else {\n      dispatch({ type: 'addItemInReceipt', payload: addReceiptRecord })\n      setAddReceiptRecord({\n        categoryId: null,\n        itemId: null,\n        packageId: null,\n        quantity: 1,\n        discount: 0\n      })\n      setShow(false)\n    }\n  }\n\n  React.useEffect(() => {\n    if (show) {\n      getCategories()\n    }\n  }, [show, getCategories])\n\n  React.useEffect(() => {\n    if (show && addReceiptRecord.categoryId) {\n      setItems([])\n      setPackages([])\n      getPackageItems()\n    }\n  }, [show, getPackageItems, addReceiptRecord.categoryId])\n\n  return (\n    <CModal\n      show={show}\n      onClose={() => setShow(false)}\n    >\n      <CModalHeader>\n        Add Item\n      </CModalHeader>\n      <CModalBody>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-category\">Category</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <RSelect value={addReceiptRecord.categoryId} name=\"categoryId\" options={categories} onChange={(e) => handleChange({isSelect: true, valueFor: 'categoryId', option: e})}/>\n          </CCol>\n        </CFormGroup>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-package\">Package</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <RSelect value={addReceiptRecord.packageId} name=\"packageItem\" options={packages} onChange={(e) => handleChange({isSelect: true, valueFor: 'packageId', option: e})}/>\n          </CCol>\n        </CFormGroup>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-package-item\">Item</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <RSelect value={addReceiptRecord.itemId} name=\"packageItem\" options={items} onChange={(e) => handleChange({isSelect: true, valueFor: 'itemId', option: e})}/>\n          </CCol>\n        </CFormGroup>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-qty\">Quantity</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <CInput value={addReceiptRecord.quantity} id=\"text-qty\" name=\"quantity\" placeholder=\"Enter Quantity\" type=\"number\" onChange={handleChange} />\n          </CCol>\n        </CFormGroup>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-qty\">Discount ( % )</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <CInput value={addReceiptRecord.discount} id=\"text-qty\" name=\"discount\" placeholder=\"Enter discount\" type=\"number\" onChange={handleChange} />\n          </CCol>\n        </CFormGroup>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"danger\" onClick={() => setShow(false)}>Cancel</CButton>\n        <CButton color=\"primary\" onClick={submitRecord}>Submit</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default AddReceiptForm\n","import React from 'react'\n\nimport {\n  CFormGroup,\n  CInput,\n  CLabel,\n} from '@coreui/react'\n\nconst NewVisitorsForm = ({ isVisitorRecordAdded, visitorRecord, dispatch }) => {\n  return (\n    <>\n      <CFormGroup>\n        <CLabel htmlFor=\"contact\">Phone No</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.contact} name=\"contact\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"contact\" placeholder=\"Enter Phone number\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"name\">Visitors Name</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.name} name=\"name\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"name\" placeholder=\"Enter Visitor's name\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"email\">Email</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.email} name=\"email\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"email\" placeholder=\"Enter Visitor's email\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"emiratesId\">Visitors Emirates ID</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.emiratesId} name=\"emiratesId\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"emiratesId\" placeholder=\"Enter Visitor's emirates id\" />\n      </CFormGroup>\n    </>\n  )\n}\n\nexport default NewVisitorsForm\n","import React from 'react'\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CSwitch,\n  CDataTable\n} from '@coreui/react'\n\nimport AddReceiptForm from './AddReceiptForm.js'\n\nconst receiptTableFields = [\n  'action',\n  'name',\n  'category',\n  'price',\n  'qty',\n  'total'\n]\n\nconst ReceiptForm = ({ receiptFormVisibility, showAddReceiptFormModal, receiptItems, dispatch }) => {\n  const showAddReceiptForm = (status) => {\n    dispatch({ type: 'setShowAddReceiptForm', payload: status })\n  }\n\n  const handleAction = (data) => {\n    console.log(data.payload)\n    dispatch(data)\n  }\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <div><strong>Shopping, Grooming and Others</strong></div>\n          <CSwitch\n            className=\"mr-1\"\n            color=\"dark\"\n            shape=\"pill\"\n            variant=\"opposite\"\n            value={receiptFormVisibility}\n            onChange={e => dispatch({ type: 'setReceiptFormVisibility', payload: e.target.checked })}\n          />\n        </CCardHeader>\n        {\n          receiptFormVisibility &&\n          <CCardBody>\n            <CDataTable\n              fields={receiptTableFields}\n              items={receiptItems || []}\n              footer\n              hover\n              scopedSlots={{\n                'action':\n                  (item)=>(\n                    <td className=\"px-1 py-2\">\n                    {\n                      <CButton onClick={() => handleAction({ type: 'removeItem', payload: item })} size=\"sm\">&#10006;</CButton>\n                    }\n                    </td>\n                  )\n              }}\n              overTableSlot={\n                <div className=\"text-right\">\n                  <CButton\n                    size=\"sm\"\n                    color=\"primary\"\n                    variant=\"outline\"\n                    className=\"m-2 pl-3 pr-4\"\n                    onClick={() => showAddReceiptForm(true)}\n                  >\n                      <span className=\"ml-1\">Add Item</span>\n                  </CButton>\n                </div>\n              }\n            />\n          </CCardBody>\n        }\n      </CCard>\n\n      <AddReceiptForm show={showAddReceiptFormModal} setShow={showAddReceiptForm} dispatch={dispatch}/>\n    </>\n  )\n}\n\nexport default ReceiptForm\n","import React from 'react'\nimport {\n  CCol,\n  CRow,\n} from '@coreui/react'\n\nconst DoctorReceipt = ({ doctorsReceipt }) => {\n  return (\n    <div>\n      <p className=\"font-weight-bold font-lg\">Doctor receipt form</p>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Pet's Name</CCol>\n        <CCol>\n          {doctorsReceipt.pet.label}\n        </CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Check up Date</CCol>\n        <CCol>\n          {\n            doctorsReceipt.appointmentDate.getDate() + '/' +\n            (+doctorsReceipt.appointmentDate.getMonth() + 1) + '/' +\n            doctorsReceipt.appointmentDate.getFullYear()\n          }\n        </CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Doctor's Name</CCol>\n        <CCol>{ doctorsReceipt.assignedDoctor }</CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Is Follow Up ?</CCol>\n        <CCol>{\n          doctorsReceipt.isFollowUp ? 'Yes' : 'No'\n        }</CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Doctor's Fee</CCol>\n        <CCol>{ doctorsReceipt.fee } AED</CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default DoctorReceipt\n","import React from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalBody,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CButton,\n  CRow,\n  CCol,\n  CSwitch,\n  CSelect\n} from '@coreui/react'\n\nimport useAxios from 'axios-hooks'\n\nimport { AppContext } from '../../../App.js'\nimport { PUBLIC_API } from '../../../config/index'\n\n\nconst AddNewPetForm = ({ show, setShow, visitorId, setItems, setSelectedPet }) => {\n  const { addToast } = React.useContext(AppContext)\n  const [,\n    fetchRecord\n  ] = useAxios(\n    {\n      method: 'GET'\n    },\n    { manual: true }\n  )\n\n  const [petInfo, setPetInfo] = React.useState({\n    id: '',\n    name: '',\n    breed: '',\n    age: '',\n    dob: '',\n    color: '',\n    specie: '',\n    gender: '',\n    microchip: false,\n    microchipNumber: null\n  })\n\n  const handleChangePetInfo = (e) => {\n    let dobAge = petInfo.age\n    if (e.target.name === 'dob') {\n      const currentYear = new Date().getFullYear()\n      const inYears = new Date(e.target.value).getFullYear()\n\n      dobAge = currentYear - inYears\n    }\n    setPetInfo(oldState => {\n      return {\n        ...oldState,\n        age: dobAge,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  const setIsMicroChip = (status) => {\n    setPetInfo(oldState => {\n      return {\n        ...oldState,\n        microchip: status,\n        microchipNumber: null\n      }\n    })\n  }\n\n  const storePetInfo = () => {\n    const data = {...petInfo, patientId: visitorId}\n\n    delete data.id;\n\n    fetchRecord({\n      url: PUBLIC_API + '/pets',\n      method: 'POST',\n      data\n    }).then(resp => {\n      setPetInfo(oldState => {\n        return {\n          ...oldState,\n          id: resp.data.id\n        }\n      })\n    \n\n      setItems(oldState => {\n        return [...oldState, resp.data]\n      })\n\n      setSelectedPet({\n        label: resp.data.name,\n        value: resp.data\n      })\n\n      setShow(false)\n    }).catch(err => {\n      addToast({\n        message: err.response.data.message\n      })\n    })\n  }\n\n  return (\n    <CModal\n      show={show}\n      onClose={() => setShow(false)}\n    >\n      <CModalHeader>\n        Add New Pet\n      </CModalHeader>\n      <CModalBody>\n      <CRow>\n        <CCol md=\"6\" sm=\"12\">\n          <CFormGroup>\n            <CLabel htmlFor=\"name\">Pet Name</CLabel>\n            <CInput value={petInfo.name} name=\"name\" onChange={handleChangePetInfo} id=\"name\" placeholder=\"Enter name\" />\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"type\">Breed</CLabel>\n            <CInput value={petInfo.breed} name=\"breed\" onChange={handleChangePetInfo} id=\"type\" placeholder=\"Enter breed\" />\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"age\">Pet Age ( years )</CLabel>\n            <CInput value={petInfo.age} name=\"age\" onChange={handleChangePetInfo} id=\"age\" placeholder=\"Enter age\" />\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"age\">Pet DOB</CLabel>\n            <CInput value={petInfo.dob} name=\"dob\" type=\"date\" onChange={handleChangePetInfo} id=\"dob\" placeholder=\"Enter dob\" />\n          </CFormGroup>\n        </CCol>\n        <CCol md=\"6\" sm=\"12\">\n          <CFormGroup>\n            <CLabel htmlFor=\"color\">Pet Color</CLabel>\n            <CInput value={petInfo.color} name=\"color\" onChange={handleChangePetInfo} id=\"color\" placeholder=\"Enter color\" />\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"specie\">Specie</CLabel>\n            <CInput value={petInfo.specie} name=\"specie\" onChange={handleChangePetInfo} id=\"specie\" placeholder=\"Enter specie\" />\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"gender\">Sex</CLabel>\n            <CSelect \n              custom \n              name=\"gender\" \n              id=\"text-pet-type\"\n              value={petInfo.gender}\n              onChange={handleChangePetInfo}\n            >\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"Neutered\">Neutered</option>\n              <option value=\"Spayed\">Spayed</option>\n            </CSelect>\n          </CFormGroup>\n          <CFormGroup row className=\"align-items-center mt-4\">\n            \n            <CCol xs=\"3\" md=\"3\">\n              <CSwitch\n                color=\"primary\"\n                name=\"microchip\"\n                value={petInfo.microchip}\n                onChange={(e) => setIsMicroChip(e.target.checked)}\n                {\n                  ...({\n                    variant: 'opposite',\n                    shape:'pill'\n                  })\n                }\n              />\n            </CCol>\n            <CCol xs=\"6\" md=\"6\">\n              <CLabel htmlFor=\"text-microchip\" className=\"pl-1\">Microchip ?</CLabel>\n            </CCol>\n          </CFormGroup>\n          {\n            petInfo.microchip &&\n            <CFormGroup>\n              <CLabel htmlFor=\"microchipNumber\">Micro chip Number</CLabel>\n              <CInput value={petInfo.microchipNumber} name=\"microchipNumber\" onChange={handleChangePetInfo} id=\"microchipNumber\" placeholder=\"Enter Microchip Number\" />\n            </CFormGroup>\n          }\n        </CCol>\n      </CRow>\n      </CModalBody>\n      \n      <CModalFooter>\n        <CButton onClick={() => setShow(false)} color=\"danger\">Cancel</CButton>\n        <CButton onClick={storePetInfo} color=\"primary\">Submit</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default AddNewPetForm\n","import React from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalBody,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CCol,\n  CSwitch,\n  CButton,\n} from '@coreui/react'\n\nimport useAxios from 'axios-hooks'\n\nimport RSelect from 'react-select';\n\nimport { AppContext } from '../../../App.js'\nimport { PUBLIC_API } from '../../../config/index'\n\n\nimport AddNewPetForm from './AddNewPetForm.js'\n\nconst DoctorAppointmentForm = ({ visitorId, dispatch }) => {\n  const { addToast } = React.useContext(AppContext)\n  const [,\n    fetchRecord\n  ] = useAxios(\n    {\n      method: 'GET'\n    },\n    { manual: true }\n  )\n\n  const [showAddAppointmentModal, setShowAddAppointmentModal] = React.useState(false)\n  const [showNewPetModal, setShowNewPetModal] = React.useState(false)\n\n\n\n  const [keyword, setKeyword] = React.useState('')\n  const [doctorKeyword, setDoctorKeyword] = React.useState('')\n  const [items, setItems] = React.useState([])\n  const [doctors, setDoctors] = React.useState([])\n\n  const [selectedPet, setSelectedPet] = React.useState(null)\n  const [selectedDoctor, setSelectedDoctor] = React.useState(null)\n  const [fee, setFee] = React.useState('')\n  const [isFollowUp, setIsFollowUp] = React.useState(false)\n\n  const handleChange = (option) => {\n    setSelectedPet(option)\n  }\n\n  const handleDoctorChange = (option) => {\n    setSelectedDoctor(option)\n  }\n\n  const addDoctorReceipt = () => {\n    if (!isFollowUp && +fee === 0 ) {\n      addToast({\n        message: 'Please provide fee or check follow up if it is follow up !'\n      })\n    } else {\n      dispatch({ type: 'addDoctorReceipt', payload: {\n        pet: selectedPet,\n        fee: +fee === 0 ? '0' : fee,\n        appointmentDate: new Date(),\n        assignTo: selectedDoctor?.value?.id,\n        assignedDoctor: selectedDoctor?.value?.name,\n        isFollowUp\n      } })\n    }\n  }\n\n  React.useEffect(() => {\n    if (keyword.length > 0) {\n      fetchRecord({\n        url: PUBLIC_API + '/pets',\n        method: 'GET',\n        params: {\n          patientId: visitorId,\n          search: keyword\n        }\n      }).catch(err => {\n        addToast({\n          message: err.response.data.message\n        })\n      })\n    }\n  }, [keyword, fetchRecord, visitorId])\n\n  React.useEffect(() => {\n\n  }, [fetchRecord, visitorId])\n\n  React.useEffect(() => {\n    fetchRecord({\n      url: PUBLIC_API + '/users?role=3',\n      method: 'GET'\n    }).then(resp => {\n      setDoctors(resp?.data?.rows.map(o => {\n        return {\n          label: o.name,\n          value: o\n        }\n      }) || [])\n\n      fetchRecord({\n        url: PUBLIC_API + '/pets/all/patients',\n        method: 'POST',\n        data: {\n          patientId: visitorId\n        }\n      }).then(resp => {\n        setItems(resp?.data?.rows.map(o => {\n          return {\n            label: o.name,\n            value: o\n          }\n        }) || [])\n      }).catch(err => {\n        addToast({\n          message: err.response?.data?.message || 'Error occured try again later !'\n        })\n      })\n    }).catch(err => {\n      addToast({\n        message: err.response?.data?.message || 'Error occured try again later !'\n      })\n    })\n  }, [])\n\n\n  return (\n    <div>\n      <p onClick={() => setShowAddAppointmentModal(true)} className=\"my-5 text-center\">Add Doctors check up</p>\n\n      <CModal\n        show={showAddAppointmentModal}\n        onClose={() => setShowAddAppointmentModal(false)}\n      >\n        <CModalHeader>\n          Create check up\n        </CModalHeader>\n        <CModalBody>\n          <CFormGroup row>\n            <CCol xs=\"12\">\n              <CLabel className=\"pt-1\" htmlFor=\"search\">Assign Doctor</CLabel>\n            </CCol>\n            <CCol xs=\"12\">\n              <RSelect name=\"search\" value={selectedDoctor} options={doctors} onInputChange={(input) => setDoctorKeyword(input)} onChange={handleDoctorChange}></RSelect>\n            </CCol>\n          </CFormGroup>\n          <CFormGroup row>\n            <CCol xs=\"12\">\n              <CLabel className=\"pt-1\" htmlFor=\"search\">Select Pet</CLabel>\n            </CCol>\n            <CCol xs=\"12\">\n              <RSelect name=\"search\" value={selectedPet} options={items} onInputChange={(input) => setKeyword(input)} onChange={handleChange}></RSelect>\n            </CCol>\n          </CFormGroup>\n          <div className=\"text-right\">\n            <CButton onClick={() => setShowNewPetModal(true)} size=\"sm\">Add New Pet</CButton>\n          </div>\n          <CFormGroup>\n            <CLabel htmlFor=\"fee\">Fee</CLabel>\n            <CInput value={fee} onChange={(e) => setFee(e.target.value)} name=\"fee\" id=\"fee\" placeholder=\"Enter fees\" />\n          </CFormGroup>\n          <CFormGroup row className=\"align-items-center pt-3\">\n            <CCol xs=\"3\" md=\"3\">\n              <CLabel htmlFor=\"text-description\" className=\"pl-1\">Follow Up ?</CLabel>\n            </CCol>\n            <CCol xs=\"9\" md=\"9\">\n              <CSwitch\n                color=\"primary\"\n                name=\"active\"\n                value={isFollowUp}\n                onChange={(e) => setIsFollowUp(e.target.checked)}\n                {\n                  ...({\n                    variant: 'opposite',\n                    shape:'pill'\n                  })\n                }\n              />\n            </CCol>\n          </CFormGroup>\n\n          <AddNewPetForm\n            show={showNewPetModal}\n            visitorId={visitorId}\n            setShow={setShowNewPetModal}\n            setItems={setItems}\n            setSelectedPet={setSelectedPet}\n          />\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"danger\" onClick={() => setShowAddAppointmentModal(false)}>Cancel</CButton>\n          <CButton color=\"primary\" onClick={addDoctorReceipt}>Submit</CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default DoctorAppointmentForm\n","import React from 'react'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CSwitch,\n} from '@coreui/react'\n\nimport DoctorReceipt from './DoctorReceipt.js'\nimport DoctorAppointmentForm from './DoctorAppointmentForm.js'\n\nconst DoctorsForm = ({ visitorId, doctorFormVisibility, isDoctorVisitAdded, doctorsReceipt, dispatch }) => {\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <div><strong>Doctor's Visit</strong></div>\n          <CSwitch\n            className=\"mr-1\"\n            color=\"dark\"\n            shape=\"pill\"\n            variant=\"opposite\"\n            value={doctorFormVisibility}\n            onChange={(e) => dispatch({ type: 'setDoctorFormVisibility', payload: e.target.checked })}\n          />\n        </CCardHeader>\n        {\n          doctorFormVisibility &&\n          <CCardBody>\n            {\n              isDoctorVisitAdded ?\n              <DoctorReceipt doctorsReceipt={doctorsReceipt} /> :\n              <DoctorAppointmentForm visitorId={visitorId} dispatch={dispatch} />\n            }\n          </CCardBody> \n        }\n      </CCard>\n    </>\n  )\n}\n\nexport default DoctorsForm\n","const addVisitorReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'setKeyword':\n      return {\n        ...state,\n        keyword: payload\n      }\n    case 'setItems':\n      return {\n        ...state,\n        items: payload\n      }\n    case 'setIsVisitorRecordAdded':\n      return {\n        ...state,\n        isVisitorRecordAdded: payload\n      }\n    case 'setVisitorsId':\n      return {\n        ...state,\n        visitorsId: payload\n      }\n    case 'setVisitorsRecord':\n      return {\n        ...state,\n        visitorRecord: { ...payload }\n      }\n    case 'handleChangeVisitorRecord':\n      return {\n        ...state,\n        visitorRecord: {\n          ...state.visitorRecord,\n          [payload.target.name]: payload.target.value\n        }\n      }\n    case 'setReceiptFormVisibility':\n      return {\n        ...state,\n        receiptFormVisibility: payload\n      }\n    case 'setShowAddReceiptForm':\n      return {\n        ...state,\n        showAddReceiptForm: payload\n      }\n    case 'setDoctorFormVisibility':\n      return {\n        ...state,\n        doctorFormVisibility: payload\n      }\n    case 'setIsDoctorVisitAdded':\n      return {\n        ...state,\n        isDoctorVisitAdded: payload\n      }\n    case 'addItemInReceipt':\n      let isItemId = true\n      let itemIdx = -1\n\n      if (payload.packageId?.value) isItemId = false\n\n      if (isItemId) {\n        itemIdx = state.receiptItems.findIndex(i => i.id === payload.itemId?.value)\n      } else {\n        itemIdx = state.receiptItems.findIndex(i => i.packageId === payload.packageId?.value)\n      }\n\n      if (itemIdx === -1) {\n        const item = {\n          id: payload.itemId?.value || null,\n          packageId: payload.packageId?.value || null,\n          name: payload.itemId?.label || payload.packageId?.label,\n          category: payload.categoryId.label,\n          price: payload.itemId?.price || payload.packageId?.price,\n          qty: payload.quantity,\n          discount: payload.discount || 0,\n          total: payload.quantity * (payload.itemId?.price || payload.packageId?.price)\n        }\n\n        return {\n          ...state,\n          receiptItems: [...state.receiptItems, item]\n        }\n      } else {\n        return {\n          ...state,\n          receiptItems: state.receiptItems.map((i, idx) => {\n            if (idx === itemIdx) {\n              const qty = +i.qty + +payload.quantity\n              return {\n                ...i,\n                qty,\n                total: qty * i.price\n              }\n            }\n\n            return i\n          })\n        }\n      }\n    case 'removeItem':\n      return {\n        ...state,\n        receiptItems: state.receiptItems.filter(i => {\n          if (payload.id) {\n            return i.id !== payload.id\n          } else {\n            return i.packageId !== payload.packageId\n          }\n        })\n      }\n    case 'addDoctorReceipt':\n      const doctorsReceipt = {\n        pet: payload.pet,\n        fee: payload.fee,\n        appointmentDate: payload.appointmentDate,\n        isFollowUp: payload.isFollowUp,\n        assignTo: payload.assignTo,\n        assignedDoctor: payload.assignedDoctor,\n      }\n\n      return {\n        ...state,\n        isDoctorVisitAdded: true,\n        doctorsReceipt: doctorsReceipt\n      }\n    case 'resetForm':\n      return {\n        ...state,\n        keyword: '',\n        items: [],\n        isVisitorRecordAdded: false,\n        visitorsId: null,\n        visitorRecord: {\n          emiratesId: '',\n          name: '',\n          email: '',\n          contact: ''\n        },\n\n        receiptFormVisibility: false,\n        showAddReceiptForm: false,\n\n        doctorFormVisibility: false,\n        isDoctorVisitAdded: false,\n\n        receiptItems: [],\n        doctorsReceipt: {\n          pet: null,\n          fee: '',\n          appointmentDate: null,\n          isFollowUp: false\n        }\n      }\n    default:\n      return state\n  }\n}\n\nexport default addVisitorReducer\n","const initialState = {\n  keyword: '',\n  items: [],\n  isVisitorRecordAdded: false,\n  visitorsId: null,\n  visitorRecord: {\n    emiratesId: '',\n    name: '',\n    email: '',\n    contact: ''\n  },\n\n  receiptFormVisibility: false,\n  showAddReceiptForm: false,\n\n  doctorFormVisibility: false,\n  isDoctorVisitAdded: false,\n\n  receiptItems: [],\n  doctorsReceipt: {\n    pet: null,\n    fee: '',\n    appointmentDate: null,\n    isFollowUp: false\n  }\n}\n\nexport default initialState","import React, { useContext } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CFormGroup,\n  CLabel,\n  CRow,\n} from '@coreui/react'\n\nimport { useHistory } from 'react-router-dom'\n\nimport RSelect from 'react-select';\n\nimport useAxios from 'axios-hooks'\n\nimport NewVisitorsForm from './NewVisitorsForm.js'\nimport ReceiptForm from './ReceiptForm/ReceiptForm.js'\nimport DoctorsForm from './DoctorsForm/DoctorsForm.js'\n\nimport reducer from './addVisitorReducer'\nimport initialState from './addVisitorState'\n\nimport { AppContext } from '../../App.js'\nimport { PUBLIC_API } from '../../config/index'\n\nconst AddVisitor = () => {\n  const history = useHistory()\n  const { addToast } = useContext(AppContext)\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const [,\n    fetchRecord\n  ] = useAxios(\n    {\n      method: 'GET'\n    },\n    { manual: true }\n  )\n\n  const addVisit = async (e = null, patientId = null) => {\n    try {\n      if (!!e) e.preventDefault()\n\n      const visitorId = !!patientId ? patientId : state.visitorsId\n\n      await fetchRecord({\n        url : PUBLIC_API + '/patients/' + visitorId + '/visit',\n        method: 'POST'\n      })\n    } catch (_) {\n      console.log(_)\n      addToast({\n        message: 'Couldn\\'t store users visit.'\n      })\n    } finally {\n      return Promise.resolve('Visits')\n    }\n  }\n\n  const createNewVisitor = () => {\n    fetchRecord({\n      url: PUBLIC_API + '/patients',\n      method: 'POST',\n      data: {\n        ...state.visitorRecord\n      }\n    }).then(async (resp) => {\n\n      await addVisit(null, resp.data.id)\n\n      dispatch({ type: 'setVisitorsId', payload: resp.data.id })\n      dispatch({ type: 'setIsVisitorRecordAdded', payload: true })\n    }).catch(err => {\n      addToast({\n        message: err.response.data.message\n      })\n    })\n  }\n\n  const storeNewOrder = () => {\n    const data = {\n      patientId: state.visitorsId,\n      appointment: state.isDoctorVisitAdded,\n      checkUpPrice: +state.doctorsReceipt.fee,\n      description: 'Order Receipt For Shopping.',\n      followUp: state.doctorsReceipt.isFollowUp,\n      assignTo: state.doctorsReceipt.assignTo || null,\n      items: state.receiptItems.filter(item => item.id !== null).map(item => {\n        return {\n          itemId: item.id,\n          quantity: item.qty,\n          discount: item.discount || 0\n        }\n      }),\n      packages: state.receiptItems.filter(item => item.packageId !== null).map(item => {\n        return {\n          packageId: item.packageId,\n          quantity: item.qty,\n          discount: item.discount || 0\n        }\n      })\n    }\n\n    fetchRecord({\n      url: PUBLIC_API + '/orders',\n      method: 'POST',\n      data\n    }).then(resp => {\n      dispatch({ type: 'resetForm', payload: null })\n      history.push('/visitors')\n    })\n  }\n\n  const handleSubmit = () => {\n    if (!state.isVisitorRecordAdded) {\n      createNewVisitor()\n    } else {\n      storeNewOrder()\n    }\n  }\n\n  const resetForm = () => {\n    dispatch({ type: 'setVisitorsRecord', payload: {\n      emiratesId: '',\n      name: '',\n      email: '',\n      contact: ''\n    }})\n    dispatch({ type: 'setVisitorsId', payload: null })\n    dispatch({ type: 'setIsVisitorRecordAdded', payload: false })\n  }\n\n  const handleUserChange = ({ value }) => {\n    dispatch({ type: 'setVisitorsRecord', payload: {\n      emiratesId: value.emiratesId,\n      name: value.name,\n      email: value.email,\n      contact: value.contact\n    }})\n    dispatch({ type: 'setVisitorsId', payload: value.id })\n    dispatch({ type: 'setIsVisitorRecordAdded', payload: true })\n    dispatch({ type: 'setKeyword', payload: {} })\n  }\n\n  React.useEffect(() => {\n    if (state.keyword.length > 0) {\n      fetchRecord({\n        url: PUBLIC_API + '/patients',\n        params: {\n          search: state.keyword\n        }\n      }).then(resp => {\n        dispatch({ type: 'setItems', payload: (resp?.data?.rows || []).map((item, idx) => {\n          return {\n            label: (idx + 1) + ': ' + item.name + ' - ' + item.contact,\n            value: item,\n          }\n        })})\n      })\n    }\n  }, [state.keyword, fetchRecord])\n\n  const addUserVisit = (\n    <div className='d-flex justify-content-end'>\n      <CButton onClick={(e) => addVisit(e)} color='primary'>Add A Visit</CButton>\n    </div>\n  )\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" sm=\"12\">\n          <CCard>\n            <CCardHeader>\n              Visitor\n              <small> Form</small>\n            </CCardHeader>\n            <CCardBody>\n              <CFormGroup row>\n                <CCol xs=\"12\">\n                  <CLabel className=\"pt-1\" htmlFor=\"search\">Search</CLabel>\n                </CCol>\n                <CCol xs=\"12\">\n                  <RSelect name=\"search\" options={state.items} onInputChange={(input) => dispatch({ type: 'setKeyword', payload: input })} onChange={handleUserChange}></RSelect>\n                </CCol>\n              </CFormGroup>\n              <CCard>\n                <CCardBody>\n                  <NewVisitorsForm\n                    isVisitorRecordAdded={state.isVisitorRecordAdded}\n                    visitorRecord={state.visitorRecord}\n                    dispatch={dispatch}\n                  />\n\n                  {\n                    state.isVisitorRecordAdded && addUserVisit\n                  }\n                </CCardBody>\n              </CCard>\n\n              {\n                state.isVisitorRecordAdded &&\n                <CRow>\n                  <CCol sm=\"6\">\n                    <ReceiptForm\n                      receiptFormVisibility={state.receiptFormVisibility}\n                      showAddReceiptFormModal={state.showAddReceiptForm}\n                      receiptItems={state.receiptItems}\n                      dispatch={dispatch}\n                    />\n                  </CCol>\n                  <CCol sm=\"6\">\n                    <DoctorsForm\n                      visitorId={state.visitorsId}\n                      doctorFormVisibility={state.doctorFormVisibility}\n                      isDoctorVisitAdded={state.isDoctorVisitAdded}\n                      doctorsReceipt={state.doctorsReceipt}\n                      dispatch={dispatch}\n                    />\n                  </CCol>\n                </CRow>\n              }\n            </CCardBody>\n            <CCardFooter>\n              <div className=\"d-flex\">\n                <div className=\"w-50 ml-auto text-right\">\n                  <CButton onClick={resetForm} className=\"w-25 mr-1\" color=\"danger\">Clear</CButton>\n                  <CButton onClick={handleSubmit} className=\"w-25\" color=\"primary\">Submit</CButton>\n                </div>\n              </div>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default AddVisitor\n"],"sourceRoot":""}