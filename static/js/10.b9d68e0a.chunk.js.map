{"version":3,"sources":["utils/dateUtils.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","views/dashboard/Dashboard.js"],"names":["formatDate","date","Date","toLocaleString","datesObj","convert","d","constructor","Array","Number","String","year","month","NaN","compare","a","b","isFinite","this","valueOf","inRange","start","end","dateFormat","getFullYear","getMonth","getDate","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","DatePicker","lazy","WidgetsDropdown","ReportsDropdown","Dashboard","useState","filterType","setFilterType","dateRange","setDateRange","startDate","endDate","reportStats","setReportStats","items","packages","orders","patients","dashboardStats","setDastboardStats","useAxios","_","manual","fetchAllStatistics","fetchReportStatistics","DatePickerCTA","forwardRef","ref","onClick","className","style","border","background","fontSize","name","populateData","useCallback","url","PUBLIC_API","method","data","console","filterReport","payload","log","useEffect","dayRange","setDate","fromDate","toDate","fontWeight","color","setMonth","date2","selected","onChange","customInput","showMonthYearPicker","selectsRange","update","withPortal","e","target"],"mappings":"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","file":"static/js/10.b9d68e0a.chunk.js","sourcesContent":["export const formatDate = (date) => {\n  // return (new Date(date)).toISOString().slice(0, 19).replace(/-/g, \"/\").replace(\"T\", \" \");\n  return (new Date(date)).toLocaleString();\n}\n\nexport const datesObj = {\n  convert:function(d) {\n      // Converts the date in d to a date-object. The input can be:\n      //   a date object: returned without modification\n      //  an array      : Interpreted as [year,month,day]. NOTE: month is 0-11.\n      //   a number     : Interpreted as number of milliseconds\n      //                  since 1 Jan 1970 (a timestamp)\n      //   a string     : Any format supported by the javascript engine, like\n      //                  \"YYYY/MM/DD\", \"MM/DD/YYYY\", \"Jan 31 2009\" etc.\n      //  an object     : Interpreted as an object with year, month and date\n      //                  attributes.  **NOTE** month is 0-11.\n      return (\n          d.constructor === Date ? d :\n          d.constructor === Array ? new Date(d[0],d[1],d[2]) :\n          d.constructor === Number ? new Date(d) :\n          d.constructor === String ? new Date(d) :\n          typeof d === \"object\" ? new Date(d.year,d.month,d.date) :\n          NaN\n      );\n  },\n  compare:function(a,b) {\n      // Compare two dates (could be of any type supported by the convert\n      // function above) and returns:\n      //  -1 : if a < b\n      //   0 : if a = b\n      //   1 : if a > b\n      // NaN : if a or b is an illegal date\n      // NOTE: The code inside isFinite does an assignment (=).\n      return (\n          isFinite(a=this.convert(a).valueOf()) &&\n          isFinite(b=this.convert(b).valueOf()) ?\n          (a>b)-(a<b) :\n          NaN\n      );\n  },\n  inRange:function(d,start,end) {\n      // Checks if date in d is between dates in start and end.\n      // Returns a boolean or NaN:\n      //    true  : if d is between start and end (inclusive)\n      //    false : if d is before start or after end\n      //    NaN   : if one or more of the dates is illegal.\n      // NOTE: The code inside isFinite does an assignment (=).\n     return (\n          isFinite(d=this.convert(d).valueOf()) &&\n          isFinite(start=this.convert(start).valueOf()) &&\n          isFinite(end=this.convert(end).valueOf()) ?\n          start <= d && d <= end :\n          NaN\n      );\n  }\n}\n\nexport const dateFormat = (date) => {\n  return `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { lazy, forwardRef, useState, useEffect, useCallback } from 'react'\n\nimport useAxios from 'axios-hooks'\n\nimport { PUBLIC_API } from '../../config/index'\nimport { CButton, CSelect } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { dateFormat } from 'src/utils/dateUtils'\n\nconst DatePicker = lazy(() => import('react-datepicker'))\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst ReportsDropdown = lazy(() => import('../widgets/ReportsDropdown.js'))\n\n\nconst Dashboard = () => {\n  const [filterType, setFilterType] = useState('0');\n  const [dateRange, setDateRange] = useState([new Date(), null]);\n  const [startDate, endDate] = dateRange;\n\n  const [reportStats, setReportStats] = useState({})\n  const [dashboardStats, setDastboardStats] = useState({\n    items: 0,\n    packages: 0,\n    orders: 0,\n    patients: 0\n  })\n\n  const [_, fetchAllStatistics] = useAxios(\n    _,\n    {\n      manual: true\n    }\n  )\n\n  const [__, fetchReportStatistics] = useAxios(\n    _,\n    {\n      manual: true\n    }\n  )\n\n  const DatePickerCTA = forwardRef(({ value, onClick }, ref) => (\n    <CButton className=\"d-flex\" onClick={onClick} ref={ref} style={{ border: '1px solid #d8dbe0', background: '#fff', fontSize: '16px' }} >\n      <span>{value}</span>\n      <CIcon className=\"ml-3\" name=\"cil-calendar\"></CIcon>\n    </CButton>\n  ));\n\n  const populateData = useCallback(async () => {\n    try {\n      const { data } = await fetchAllStatistics(\n        {\n          url: PUBLIC_API + '/stats/entities/count',\n          method: 'GET',\n        }\n      )\n\n      setDastboardStats({\n        ...data\n      })\n    }\n    catch (err) {\n      console.error(err)\n    }\n  }, [])\n\n  const filterReport = useCallback(async (payload) => {\n    try {\n      const { data } = await fetchReportStatistics(\n        {\n          url: PUBLIC_API + '/stats/dashboard/report',\n          method: 'POST',\n          data: payload\n        }\n      )\n\n      setReportStats({\n        ...data\n      })\n\n      console.log(data)\n    }\n    catch (err) {\n      console.error(err)\n    }\n  }, [])\n\n  const next = () => {\n    switch (filterType) {\n    case '0':\n      setDateRange(dayRange => {\n        const [startDate] = dayRange\n\n        const date = new Date(startDate);\n        date.setDate(date.getDate() + 1);\n\n        return [date, null]\n      })\n      break\n    case '1':\n      setDateRange(dayRange => {\n        const [startDate] = dayRange\n\n        const date = new Date(startDate);\n        date.setMonth(date.getMonth() + 1);\n\n        return [date, null]\n      })\n      break\n    case '2':\n      setDateRange(dayRange => {\n        const [startDate, endDate] = dayRange\n\n        const date = new Date(startDate);\n        const date2 = new Date(endDate);\n\n        date.setDate(date.getDate() + 7);\n        date2.setDate(date2.getDate() + 7);\n\n        return [date, date2]\n      })\n      break\n    default:\n      console.log('Filter not recognized')\n    }\n  }\n\n  const previous = () => {\n    switch (filterType) {\n    case '0':\n      setDateRange(dayRange => {\n        const [startDate] = dayRange\n\n        const date = new Date(startDate);\n        date.setDate(date.getDate() - 1);\n\n        return [date, null]\n      })\n      break\n    case '1':\n      setDateRange(dayRange => {\n        const [startDate] = dayRange\n\n        const date = new Date(startDate);\n        date.setMonth(date.getMonth() - 1);\n\n        return [date, null]\n      })\n      break\n    case '2':\n      setDateRange(dayRange => {\n        const [startDate, endDate] = dayRange\n\n        const date = new Date(startDate);\n        const date2 = new Date(endDate);\n\n        date.setDate(date.getDate() - 7);\n        date2.setDate(date2.getDate() - 7);\n\n        return [date, date2]\n      })\n      break\n    default:\n      console.log('Filter not recognized')\n    }\n  }\n\n  const current = () => {\n    switch (filterType) {\n    case '2':\n      setDateRange(dayRange => {\n        const date = new Date();\n        const date2 = new Date();\n\n        date2.setDate(date2.getDate() + 7);\n\n        return [date, date2]\n      })\n      break\n    default:\n      setDateRange(dayRange => {\n        const date = new Date();\n\n        return [date, null]\n      })\n    }\n  }\n\n  useEffect(() => {\n    if (filterType === '2') {\n      setDateRange(dayRange => {\n        const [startDate] = dayRange\n\n        const date = new Date(startDate);\n        date.setDate(date.getDate() + 7);\n\n        return [startDate, date]\n      })\n    } else {\n      setDateRange(dayRange => {\n        return [dayRange[0], null]\n      })\n    }\n  }, [filterType])\n\n  useEffect(() => {\n    const [startDate, endDate] = dateRange;\n\n    const data = {\n      fromDate: dateFormat(startDate),\n      toDate: dateFormat(endDate ? endDate : startDate)\n    };\n\n    if (filterType == '1') {\n      const date = new Date(startDate)\n      const start = new Date(date.getFullYear(), date.getMonth(), 1, 0, 0, 0, 0)\n      const end = new Date(date.getFullYear(), date.getMonth() + 1, 0, 0, 0, 0)\n\n      data.fromDate = dateFormat(start)\n      data.toDate = dateFormat(end)\n    }\n\n    filterReport(data)\n  }, [dateRange, filterReport])\n\n  useEffect(() => {\n    populateData()\n  }, [populateData])\n\n\n  return (\n    <>\n      <div>\n        <div className=\"mb-2\" >\n          <span style={{ fontSize: '22px', fontWeight: '600', color: '#1d273e' }}>Stats</span>\n        </div>\n        <WidgetsDropdown data={dashboardStats} />\n      </div>\n      <div className=\"mt-5\">\n        <div className=\"mb-2\">\n          <span style={{ fontSize: '22px', fontWeight: '600', color: '#1d273e' }}>Report</span>\n        </div>\n        <div className=\"mb-3\">\n          <div className=\"d-flex justify-content-between\">\n            <div className=\"d-flex\">\n              <div className=\"mr-1\">\n                <CButton onClick={previous} style={{ border: '1px solid #d8dbe0', background: '#fff' }} >\n                  <CIcon name=\"cil-chevron-left\"></CIcon>\n                </CButton>\n                <CButton onClick={next} style={{ border: '1px solid #d8dbe0', background: '#fff' }} >\n                  <CIcon name=\"cil-chevron-right\"></CIcon>\n                </CButton>\n              </div>\n              <div className=\"mr-1\">\n                <CButton onClick={current} style={{ border: '1px solid #d8dbe0', background: '#fff', fontSize: '16px' }} >Current</CButton>\n              </div>\n              <div>\n                {\n                  filterType === '0' &&\n                  (\n                    <DatePicker\n                      selected={startDate}\n                      onChange={(date) => setDateRange([date, null])}\n                      customInput={<DatePickerCTA />}\n                    />\n                  )\n                }\n                {\n                  filterType === '1' &&\n                  (\n                    <DatePicker\n                      selected={startDate}\n                      onChange={(date) => setDateRange([date, null])}\n                      dateFormat=\"MM/yyyy\"\n                      showMonthYearPicker\n                      customInput={<DatePickerCTA />}\n                    />\n                  )\n                }\n                {\n                  filterType === '2' &&\n                  (\n                    <DatePicker\n                      selectsRange={true}\n                      startDate={startDate}\n                      endDate={endDate}\n                      onChange={(update) => setDateRange(update)}\n                      withPortal\n                      customInput={<DatePickerCTA />}\n                    />\n                  )\n                }\n              </div>\n            </div>\n            <div>\n              <CSelect onChange={(e) => setFilterType(e.target.value)} value={filterType} style={{ fontSize: '16px' }}>\n                <option value=\"0\">Daywise</option>\n                <option value=\"1\">Monthwise</option>\n                <option value=\"2\">Range</option>\n              </CSelect>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ReportsDropdown data={reportStats} />\n    </>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}