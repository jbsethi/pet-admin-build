{"version":3,"sources":["views/base/tableHeader/TableHeader.js","views/petTypes/AddPetRecord.js","views/petTypes/PetTypes.js"],"names":["TableHeader","keyword","changeKeyword","children","className","sm","type","name","placeholder","autoComplete","value","onChange","onKeyPress","AddPetRecord","show","setShow","refetch","petTypeId","setEditId","React","useState","description","active","petRecord","setPetRecord","useAxios","url","method","manual","loading","fetch","handleChange","e","oldState","target","checked","useEffect","then","resp","data","onClose","closeButton","row","md","htmlFor","xs","id","color","variant","shape","onClick","config","fields","key","label","PetTypes","setKeyword","totalPages","setTotalPages","currentPage","setActivePage","editId","params","pageNo","error","lg","items","rows","striped","itemsPerPage","overTableSlot","search","underTableSlot","activePage","pages","onActivePageChange","i","scopedSlots","item","size"],"mappings":"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","file":"static/js/12.4d07abb1.chunk.js","sourcesContent":["import React from 'react'\n\nimport {\n  CRow,\n  CCol,\n  CFormGroup,\n  CInput,\n} from '@coreui/react'\n\n\nconst TableHeader = ({ keyword = '', changeKeyword = null, children }) => {\n  return (\n    <CRow className=\"align-items-center justify-content-between\">\n      <CCol sm=\"4\">\n        <CFormGroup className=\"mb-0\">\n          <CInput\n            type=\"text\"\n            name=\"nf-text\"\n            placeholder=\"Search Here..\"\n            autoComplete=\"off\"\n            value={keyword}\n            onChange={changeKeyword}\n            onKeyPress={changeKeyword}\n          />\n        </CFormGroup>\n      </CCol>\n      <CCol sm=\"4\" className=\"d-flex justify-content-end\">\n        { children }\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default TableHeader\n","import React from 'react'\nimport useAxios from 'axios-hooks'\n\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n  CButton,\n  CFormGroup,\n  CCol,\n  CLabel,\n  CInput,\n  CTextarea,\n  CSwitch,\n  CRow,\n} from '@coreui/react'\n\nconst AddPetRecord = ({ show, setShow, refetch, petTypeId, setEditId }) => {\n  const [petRecord, setPetRecord] = React.useState({\n    name: '',\n    description: '',\n    active: true\n  })\n\n  const [\n    { loading },\n    fetch\n  ] = useAxios(\n    {\n      url: 'https://app.aloropivetcenter.com/api/pet-types',\n      method: 'POST'\n    },\n    { manual: true }\n  )\n\n  const resetAndCancel = () => {\n    setShow(false)\n    setPetRecord({\n      name: '',\n      description: '',\n      active: true\n    })\n\n    setEditId(null)\n  }\n\n  const confirmClose = () => {\n    setShow(false)\n    setPetRecord({\n      name: '',\n      description: '',\n      active: true\n    })\n    setEditId(null)\n    refetch()\n  }\n\n  const handleChange = (e) => {\n    setPetRecord((oldState) => {\n      if (e.target.name === 'active') {\n        return {\n          ...oldState,\n          [e.target.name]: e.target.checked\n        }\n      } else {\n        return {\n          ...oldState,\n          [e.target.name]: e.target.value\n        }\n      }\n    })\n  }\n\n  const storePetType = () => {\n    if (!loading) {\n      const config = {\n        data: {\n          ...petRecord\n        }\n      }\n\n      if (petTypeId) {\n        config.url = `https://app.aloropivetcenter.com/api/pet-types/${petTypeId}`\n        config.method = 'PUT'\n      }\n\n      fetch(config).then(resp => {\n        confirmClose()\n      })\n    }\n  }\n\n  React.useEffect(() => {\n    if (petTypeId && show) {\n      fetch({\n        url: `https://app.aloropivetcenter.com/api/pet-types/${petTypeId}`,\n        method: 'GET'\n      })\n        .then(resp => {\n          setPetRecord({\n            name: resp.data.name,\n            description: resp.data.description,\n            active: resp.data.active\n          })\n        })\n    }\n  }, [petTypeId, fetch, show])\n\n  return (\n    <>\n      <CModal\n        show={show}\n        onClose={() => setShow(false)}\n      >\n        <CModalHeader closeButton>Add Pet Type</CModalHeader>\n        <CModalBody>\n          {\n            loading?\n            <div className=\"py-5 text-center\">Loading Details ...</div> :\n            <CRow>\n              <CCol className=\"px-5 pt-4\">\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel className=\"pt-1\" htmlFor=\"text-name\">Name</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput id=\"text-name\" name=\"name\" value={petRecord.name} onChange={handleChange} placeholder=\"Enter Name for Pet type\" />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel className=\"pt-1\" htmlFor=\"text-description\">Description</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CTextarea id=\"text-description\" name=\"description\" value={petRecord.description} onChange={handleChange} placeholder=\"Enter Description ...\" ></CTextarea>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol xs=\"3\" md=\"3\">\n                    <CLabel htmlFor=\"text-description\">Active</CLabel>\n                  </CCol>\n                  <CCol xs=\"9\" md=\"9\">\n                    <CSwitch\n                      color=\"primary\"\n                      name=\"active\"\n                      checked={petRecord.active}\n                      onChange={handleChange}\n                      {\n                        ...({\n                          variant: 'opposite',\n                          shape:'pill'\n                        })\n                      }\n                    />\n                  </CCol>\n                </CFormGroup>\n              </CCol>\n            </CRow>\n          }\n        </CModalBody>\n        <CModalFooter>\n          <CButton\n            color=\"secondary\"\n            onClick={() => resetAndCancel()}\n          >\n            Cancel\n          </CButton>\n          <CButton onClick={storePetType} className=\"ml-1\" color=\"primary\">{ loading ? 'Loading' : 'Confirm' }</CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\n\nexport default AddPetRecord\n","import React from 'react'\nimport useAxios from 'axios-hooks'\nimport TableHeader from '../base/tableHeader/TableHeader'\nimport AddPetRecord from './AddPetRecord'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CPagination\n} from '@coreui/react'\n\nconst fields = [\n    'name',\n    {\n      key: 'createdAt',\n      label: 'Registered'\n    },\n    'description',\n    'actions'\n  ]\n\nconst PetTypes = () => {\n  const [show, setShow] = React.useState(false)\n\n  const [keyword, setKeyword] = React.useState('')\n\n  const [totalPages, setTotalPages] = React.useState(1)\n  const [currentPage, setActivePage] = React.useState(1)\n\n  const [editId, setEditId] = React.useState(null)\n\n  const [{ data, loading, error }, fetch] = useAxios(\n    {\n      url: 'https://app.aloropivetcenter.com/api/pet-types',\n      method: 'GET',\n      params: {\n        pageNo: currentPage\n      }\n    },\n    {\n      manual: true\n    }\n  )\n\n  const changeKeyword = (e) => {\n    if(e.key === 'Enter') {\n      fetch({\n        params: {\n          search: keyword\n        }\n      })\n    } else {\n      setKeyword(e.target.value)\n    }\n  }\n\n  const editModal = (id) => {\n    setEditId(id)\n    setShow(true)\n  }\n\n  const deleteItem = (id) => {\n    fetch({\n      url: `https://app.aloropivetcenter.com/api/pet-types/${id}`,\n      method: 'DELETE'\n    })\n  }\n\n  React.useEffect(() => {\n    fetch()\n      .then(resp => {\n        setTotalPages(resp.data.totalPages)\n      })\n  }, [fetch])\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              Pet Types\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={loading ? [] : (error ? [] : data?.rows || [])}\n              fields={fields}\n              striped\n              itemsPerPage={10}\n              loading={loading}\n              overTableSlot={\n                <TableHeader keyword={keyword} changeKeyword={changeKeyword}>\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                      className=\"m-2 pl-3 pr-4\"\n                      onClick={() => setShow(true)}\n                    >\n                      <span className=\"ml-1\">Add Pet Type</span>\n                    </CButton>\n                </TableHeader>\n              }\n              underTableSlot={\n                <CPagination\n                  activePage={currentPage}\n                  pages={totalPages}\n                  onActivePageChange={(i) => setActivePage(i)}\n                ></CPagination>\n              }\n              scopedSlots={{\n                'actions':\n                  (item) => (\n                    <td>\n                      <CButton onClick={() => editModal(item.id)} color=\"primary\" size=\"sm\" className=\"mr-1\">Edit</CButton>\n                      <CButton onClick={() => deleteItem(item.id)} color=\"danger\" size=\"sm\">Delete</CButton>\n                    </td>\n                  )\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <AddPetRecord show={show} setShow={setShow} refetch={fetch} petTypeId={editId} setEditId={setEditId}/>\n    </>\n  )\n}\n\nexport default PetTypes\n"],"sourceRoot":""}