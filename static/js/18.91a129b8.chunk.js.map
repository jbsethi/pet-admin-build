{"version":3,"sources":["views/addVisitor/NewVisitorsForm.js","views/addVisitor/ReceiptForm/AddReceiptForm.js","views/addVisitor/ReceiptForm/ReceiptForm.js","views/addVisitor/DoctorsForm/DoctorReceipt.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/addVisitor/DoctorsForm/AddNewPetForm.js","views/addVisitor/DoctorsForm/DoctorAppointmentForm.js","views/addVisitor/DoctorsForm/DoctorsForm.js","views/addVisitor/addVisitorReducer.js","views/addVisitor/addVisitorState.js","views/addVisitor/AddVisitor.js"],"names":["NewVisitorsForm","isVisitorRecordAdded","visitorRecord","dispatch","htmlFor","disabled","value","emiratesId","name","onChange","e","type","payload","id","placeholder","email","contact","AddReceiptForm","show","setShow","React","useState","categoryId","itemId","packageId","quantity","addReceiptRecord","setAddReceiptRecord","categories","setCategories","items","setItems","packages","setPackages","useAxios","url","method","manual","fetchRecord","handleChange","isSelect","oldState","valueFor","option","target","getCategories","useCallback","a","record","options","data","rows","map","category","label","displayName","console","log","getPackageItems","params","serviceId","item","price","record2","options2","useEffect","onClose","row","className","xs","color","onClick","receiptTableFields","ReceiptForm","receiptFormVisibility","showAddReceiptFormModal","receiptItems","showAddReceiptForm","status","shape","variant","checked","fields","footer","hover","overTableSlot","size","DoctorReceipt","doctorsReceipt","md","pet","appointmentDate","getDate","getMonth","getFullYear","isFollowUp","fee","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","AddNewPetForm","visitorId","setSelectedPet","age","petInfo","setPetInfo","handleChangePetInfo","patientId","then","resp","DoctorAppointmentForm","showAddAppointmentModal","setShowAddAppointmentModal","showNewPetModal","setShowNewPetModal","keyword","setKeyword","selectedPet","setFee","setIsFollowUp","length","search","o","onInputChange","input","Date","DoctorsForm","doctorFormVisibility","isDoctorVisitAdded","addVisitorReducer","state","visitorsId","qty","total","initialState","AddVisitor","history","useHistory","useReducer","reducer","sm","appointment","checkUpPrice","description","followUp","itemIds","filter","packageIds","push","storeNewOrder"],"mappings":"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","file":"static/js/18.91a129b8.chunk.js","sourcesContent":["import React from 'react'\n\nimport {\n  CFormGroup,\n  CInput,\n  CLabel,\n} from '@coreui/react'\n\nconst NewVisitorsForm = ({ isVisitorRecordAdded, visitorRecord, dispatch }) => {\n  return (\n    <>\n      <CFormGroup>\n        <CLabel htmlFor=\"emiratesId\">Visitors Emirates ID</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.emiratesId} name=\"emiratesId\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"emiratesId\" placeholder=\"Enter Visitor's emirates id\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"name\">Visitors Name</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.name} name=\"name\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"name\" placeholder=\"Enter Visitor's name\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"email\">Email</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.email} name=\"email\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"email\" placeholder=\"Enter Visitor's email\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"contact\">Phone No</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.contact} name=\"contact\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"contact\" placeholder=\"Enter Phone number\" />\n      </CFormGroup>\n    </>\n  )\n}\n\nexport default NewVisitorsForm\n","import React from 'react'\n\nimport RSelect from 'react-select';\n\nimport {\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalBody,\n  CButton,\n  CFormGroup,\n  CCol,\n  CLabel,\n  CInput\n} from '@coreui/react'\n\nimport useAxios from 'axios-hooks'\n\nconst AddReceiptForm = ({ show, setShow, dispatch }) => {\n  const [addReceiptRecord, setAddReceiptRecord] = React.useState({\n    categoryId: null,\n    itemId: null,\n    packageId: null,\n    quantity: 1\n  })\n\n  const [categories, setCategories] = React.useState([])\n  const [items, setItems] = React.useState([])\n  const [packages, setPackages] = React.useState([])\n\n  const [\n    ,\n    fetchRecord\n  ] = useAxios(\n    {\n      url: 'https://app.aloropivetcenter.com/api/services',\n      method: 'POST'\n    },\n    { manual: true }\n  )\n\n  const handleChange = (e) => {\n    if (e.isSelect) {\n      setAddReceiptRecord(oldState => {\n        return {\n          ...oldState,\n          [e.valueFor]: e.option\n        }\n      })\n    } else {\n      setAddReceiptRecord(oldState => {\n        return {\n          ...oldState,\n          [e.target.name]: e.target.value\n        }\n      })\n    }\n  }\n\n  const getCategories = React.useCallback(async () => {\n    try {\n      const record = await fetchRecord({\n        url: 'https://app.aloropivetcenter.com/api/services',\n        method: 'GET'\n      })\n\n      const options = (record?.data?.rows || []).map(category => {\n        return {\n          label: category.displayName,\n          value: category.id\n        }\n      })\n\n      setCategories(options)\n    } catch (err) {\n      console.log(err)\n    }\n  }, [fetchRecord])\n\n  const getPackageItems = React.useCallback(async () => {\n    try {\n      setAddReceiptRecord(oldState => {\n        return {\n          ...oldState,\n          itemId: null,\n          packageId: null,\n        }\n      })\n\n      const record = await fetchRecord({\n        url: 'https://app.aloropivetcenter.com/api/packages/records/all',\n        method: 'GET',\n        params: {\n          serviceId: addReceiptRecord.categoryId?.value || null\n        }\n      })\n\n      const options = (record?.data || []).map(item => {\n        return {\n          label: item.name,\n          value: item.id,\n          price: item.price\n        }\n      })\n\n      setPackages(options)\n\n      const record2 = await fetchRecord({\n        url: 'https://app.aloropivetcenter.com/api/items/records/all',\n        method: 'GET',\n        params: {\n          serviceId: addReceiptRecord.categoryId?.value || null\n        }\n      })\n\n      const options2 = (record2?.data || []).map(item => {\n        return {\n          label: item.name,\n          value: item.id,\n          price: item.price\n        }\n      })\n\n      setItems(options2)\n    } catch (err) {\n      console.log(err)\n    }\n  }, [fetchRecord, addReceiptRecord?.categoryId?.value])\n\n  const submitRecord = () => {\n    dispatch({ type: 'addItemInReceipt', payload: addReceiptRecord })\n    setAddReceiptRecord({\n      categoryId: null,\n      itemId: null,\n      packageId: null,\n      quantity: 1\n    })\n    setShow(false)\n  }\n\n  React.useEffect(() => {\n    if (show) {\n      getCategories()\n    }\n  }, [show, getCategories])\n\n  React.useEffect(() => {\n    if (show && addReceiptRecord.categoryId) {\n      setItems([])\n      setPackages([])\n      getPackageItems()\n    }\n  }, [show, getPackageItems, addReceiptRecord.categoryId])\n\n  return (\n    <CModal\n      show={show}\n      onClose={() => setShow(false)}\n    >\n      <CModalHeader>\n        Add Item\n      </CModalHeader>\n      <CModalBody>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-category\">Category</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <RSelect value={addReceiptRecord.categoryId} name=\"categoryId\" options={categories} onChange={(e) => handleChange({isSelect: true, valueFor: 'categoryId', option: e})}/>\n          </CCol>\n        </CFormGroup>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-package\">Package</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <RSelect value={addReceiptRecord.packageId} name=\"packageItem\" options={packages} onChange={(e) => handleChange({isSelect: true, valueFor: 'packageId', option: e})}/>\n          </CCol>\n        </CFormGroup>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-package-item\">Item</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <RSelect value={addReceiptRecord.itemId} name=\"packageItem\" options={items} onChange={(e) => handleChange({isSelect: true, valueFor: 'itemId', option: e})}/>\n          </CCol>\n        </CFormGroup>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-qty\">Quantity</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <CInput value={addReceiptRecord.quantity} id=\"text-qty\" name=\"quantity\" placeholder=\"Enter Quantity\" type=\"number\" onChange={handleChange} />\n          </CCol>\n        </CFormGroup>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"danger\" onClick={() => setShow(false)}>Cancel</CButton>\n        <CButton color=\"primary\" onClick={submitRecord}>Submit</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default AddReceiptForm\n","import React from 'react'\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CSwitch,\n  CDataTable\n} from '@coreui/react'\n\nimport AddReceiptForm from './AddReceiptForm.js'\n\nconst receiptTableFields = [\n  'name',\n  'category',\n  'price',\n  'qty',\n  'total'\n]\n\nconst ReceiptForm = ({ receiptFormVisibility, showAddReceiptFormModal, receiptItems, dispatch }) => {\n  const showAddReceiptForm = (status) => {\n    dispatch({ type: 'setShowAddReceiptForm', payload: status })\n  }\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <div>Receipt Form</div>\n          <CSwitch\n            className=\"mr-1\"\n            color=\"dark\"\n            shape=\"pill\"\n            variant=\"opposite\"\n            value={receiptFormVisibility}\n            onChange={e => dispatch({ type: 'setReceiptFormVisibility', payload: e.target.checked })}\n          />\n        </CCardHeader>\n        {\n          receiptFormVisibility &&\n          <CCardBody>\n            <CDataTable\n              fields={receiptTableFields}\n              items={receiptItems || []}\n              footer\n              hover\n              overTableSlot={\n                <div className=\"text-right\">\n                  <CButton\n                    size=\"sm\"\n                    color=\"primary\"\n                    variant=\"outline\"\n                    className=\"m-2 pl-3 pr-4\"\n                    onClick={() => showAddReceiptForm(true)}\n                  >\n                      <span className=\"ml-1\">Add Item</span>\n                  </CButton>\n                </div>\n              }\n            />\n          </CCardBody>\n        }\n      </CCard>\n\n      <AddReceiptForm show={showAddReceiptFormModal} setShow={showAddReceiptForm} dispatch={dispatch}/>\n    </>\n  )\n}\n\nexport default ReceiptForm\n","import React from 'react'\nimport {\n  CCol,\n  CRow,\n} from '@coreui/react'\n\nconst DoctorReceipt = ({ doctorsReceipt }) => {\n  return (\n    <div>\n      <p className=\"font-weight-bold font-lg\">Doctor receipt form</p>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Pet's Name</CCol>\n        <CCol>\n          {doctorsReceipt.pet.label}\n        </CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Appointment Date</CCol>\n        <CCol>\n          {\n            doctorsReceipt.appointmentDate.getDate() + '/' +\n            (+doctorsReceipt.appointmentDate.getMonth() + 1) + '/' +\n            doctorsReceipt.appointmentDate.getFullYear()\n          }\n        </CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Doctor's Name</CCol>\n        <CCol>--</CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Is Follow Up ?</CCol>\n        <CCol>{\n          doctorsReceipt.isFollowUp ? 'Yes' : 'No'  \n        }</CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Doctor's Fee</CCol>\n        <CCol>{ doctorsReceipt.fee } AED</CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default DoctorReceipt\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalBody,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CButton,\n} from '@coreui/react'\n\nimport useAxios from 'axios-hooks'\n\nconst AddNewPetForm = ({ show, setShow, visitorId, setItems, setSelectedPet }) => {\n  const [,\n    fetchRecord\n  ] = useAxios(\n    {\n      method: 'GET'\n    },\n    { manual: true }\n  )\n\n  const [petInfo, setPetInfo] = React.useState({\n    id: '',\n    name: '',\n    pet: '',\n    age: '',\n    color: ''\n  })\n\n  const handleChangePetInfo = (e) => {\n    setPetInfo(oldState => {\n      return {\n        ...oldState,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  const storePetInfo = () => {\n    const data = {...petInfo, patientId: visitorId}\n\n    delete data.id;\n\n    fetchRecord({\n      url: 'https://app.aloropivetcenter.com/api/pets',\n      method: 'POST',\n      data\n    }).then(resp => {\n      setPetInfo(oldState => {\n        return {\n          ...oldState,\n          id: resp.data.id\n        }\n      })\n\n      setItems(oldState => {\n        return [...oldState, resp.data]\n      })\n\n      setSelectedPet({\n        label: resp.data.name,\n        value: resp.data\n      })\n\n      setShow(false)\n    })\n  }\n\n  return (\n    <CModal\n      show={show}\n      onClose={() => setShow(false)}\n    >\n      <CModalHeader>\n        Add New Pet\n      </CModalHeader>\n      <CModalBody>\n        <CFormGroup>\n          <CLabel htmlFor=\"name\">Pet Name</CLabel>\n          <CInput value={petInfo.name} name=\"name\" onChange={handleChangePetInfo} id=\"name\" placeholder=\"Enter name\" />\n        </CFormGroup>\n        <CFormGroup>\n          <CLabel htmlFor=\"type\">Pet Type</CLabel>\n          <CInput value={petInfo.pet} name=\"pet\" onChange={handleChangePetInfo} id=\"type\" placeholder=\"Enter type\" />\n        </CFormGroup>\n        <CFormGroup>\n          <CLabel htmlFor=\"age\">Pet Age</CLabel>\n          <CInput value={petInfo.age} name=\"age\" onChange={handleChangePetInfo} id=\"age\" placeholder=\"Enter age\" />\n        </CFormGroup>\n        <CFormGroup>\n          <CLabel htmlFor=\"color\">Pet Color</CLabel>\n          <CInput value={petInfo.color} name=\"color\" onChange={handleChangePetInfo} id=\"color\" placeholder=\"Enter color\" />\n        </CFormGroup>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"danger\">Cancel</CButton>\n        <CButton onClick={storePetInfo} color=\"primary\">Submit</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default AddNewPetForm\n","import React from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalBody,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CCol,\n  CSwitch,\n  CButton,\n} from '@coreui/react'\n\nimport useAxios from 'axios-hooks'\n\nimport RSelect from 'react-select';\n\nimport AddNewPetForm from './AddNewPetForm.js'\n\nconst DoctorAppointmentForm = ({ visitorId, dispatch }) => {\n  const [,\n    fetchRecord\n  ] = useAxios(\n    {\n      method: 'GET'\n    },\n    { manual: true }\n  )\n\n  const [showAddAppointmentModal, setShowAddAppointmentModal] = React.useState(false)\n  const [showNewPetModal, setShowNewPetModal] = React.useState(false)\n\n  \n\n  const [keyword, setKeyword] = React.useState('')\n  const [items, setItems] = React.useState([])\n\n  const [selectedPet, setSelectedPet] = React.useState(null)\n  const [fee, setFee] = React.useState('')\n  const [isFollowUp, setIsFollowUp] = React.useState(false)\n\n  const handleChange = (option) => {\n    setSelectedPet(option)\n  }\n\n  const addDoctorReceipt = () => {\n    dispatch({ type: 'addDoctorReceipt', payload: {\n      pet: selectedPet,\n      fee,\n      appointmentDate: new Date(),\n      isFollowUp\n    } })\n  }\n\n  React.useEffect(() => {\n    if (keyword.length > 0) {\n      fetchRecord({\n        url: 'https://app.aloropivetcenter.com/api/pets',\n        method: 'GET',\n        params: {\n          search: keyword\n        }\n      }).then(resp => {\n        console.log(resp)\n      })\n    }\n  }, [keyword, fetchRecord])\n\n  React.useEffect(() => {\n    fetchRecord({\n      url: 'https://app.aloropivetcenter.com/api/pets',\n      method: 'GET'\n    }).then(resp => {\n      \n      setItems(resp?.data?.rows.map(o => {\n        return {\n          label: o.name,\n          value: o\n        }\n      }) || [])\n    })\n  }, [fetchRecord])\n\n\n  return (\n    <div>\n      <p onClick={() => setShowAddAppointmentModal(true)} className=\"my-5 text-center\">Add Doctors appointment</p>\n\n      <CModal\n        show={showAddAppointmentModal}\n        onClose={() => setShowAddAppointmentModal(false)}\n      >\n        <CModalHeader>\n          Create Appointment\n        </CModalHeader>\n        <CModalBody>\n          <CFormGroup row>\n            <CCol xs=\"12\">\n              <CLabel className=\"pt-1\" htmlFor=\"search\">Select Pet</CLabel>\n            </CCol>\n            <CCol xs=\"12\">\n              <RSelect name=\"search\" value={selectedPet} options={items} onInputChange={(input) => setKeyword(input)} onChange={handleChange}></RSelect>\n            </CCol>\n          </CFormGroup>\n          <div className=\"text-right\">\n            <CButton onClick={() => setShowNewPetModal(true)} size=\"sm\">Add New Pet</CButton>\n          </div>\n          <CFormGroup>\n            <CLabel htmlFor=\"fee\">Fee</CLabel>\n            <CInput value={fee} onChange={(e) => setFee(e.target.value)} name=\"fee\" id=\"fee\" placeholder=\"Enter fees\" />\n          </CFormGroup>\n          <CFormGroup row className=\"align-items-center pt-3\">\n            <CCol xs=\"3\" md=\"3\">\n              <CLabel htmlFor=\"text-description\" className=\"pl-1\">Follow Up ?</CLabel>\n            </CCol>\n            <CCol xs=\"9\" md=\"9\">\n              <CSwitch\n                color=\"primary\"\n                name=\"active\"\n                value={isFollowUp}\n                onChange={(e) => setIsFollowUp(e.target.checked)}\n                {\n                  ...({\n                    variant: 'opposite',\n                    shape:'pill'\n                  })\n                }\n              />\n            </CCol>\n          </CFormGroup>\n\n          <AddNewPetForm\n            show={showNewPetModal}\n            visitorId={visitorId}\n            setShow={setShowNewPetModal}\n            setItems={setItems}\n            setSelectedPet={setSelectedPet}\n          />\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"danger\" onClick={() => setShowAddAppointmentModal(false)}>Cancel</CButton>\n          <CButton color=\"primary\" onClick={addDoctorReceipt}>Submit</CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default DoctorAppointmentForm\n","import React from 'react'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CSwitch,\n} from '@coreui/react'\n\nimport DoctorReceipt from './DoctorReceipt.js'\nimport DoctorAppointmentForm from './DoctorAppointmentForm.js'\n\nconst DoctorsForm = ({ visitorId, doctorFormVisibility, isDoctorVisitAdded, doctorsReceipt, dispatch }) => {\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <div>Doctor's Visit</div>\n          <CSwitch\n            className=\"mr-1\"\n            color=\"dark\"\n            shape=\"pill\"\n            variant=\"opposite\"\n            value={doctorFormVisibility}\n            onChange={(e) => dispatch({ type: 'setDoctorFormVisibility', payload: e.target.checked })}\n          />\n        </CCardHeader>\n        {\n          doctorFormVisibility &&\n          <CCardBody>\n            {\n              isDoctorVisitAdded ?\n              <DoctorReceipt doctorsReceipt={doctorsReceipt} /> :\n              <DoctorAppointmentForm visitorId={visitorId} dispatch={dispatch} />\n            }\n          </CCardBody> \n        }\n      </CCard>\n    </>\n  )\n}\n\nexport default DoctorsForm\n","const addVisitorReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'setKeyword':\n      return {\n        ...state,\n        keyword: payload\n      }\n    case 'setItems': \n      return {\n        ...state,\n        items: payload\n      }\n    case 'setIsVisitorRecordAdded':\n      return {\n        ...state,\n        isVisitorRecordAdded: payload\n      }\n    case 'setVisitorsId':\n      return {\n        ...state,\n        visitorsId: payload\n      }\n    case 'setVisitorsRecord':\n      return {\n        ...state,\n        visitorRecord: { ...payload }\n      }\n    case 'handleChangeVisitorRecord':\n      return {\n        ...state,\n        visitorRecord: {\n          ...state.visitorRecord,\n          [payload.target.name]: payload.target.value \n        }\n      }\n    case 'setReceiptFormVisibility':\n      return {\n        ...state,\n        receiptFormVisibility: payload\n      }\n    case 'setShowAddReceiptForm':\n      return {\n        ...state,\n        showAddReceiptForm: payload\n      }\n    case 'setDoctorFormVisibility':\n      return {\n        ...state,\n        doctorFormVisibility: payload\n      }\n    case 'setIsDoctorVisitAdded':\n      return {\n        ...state,\n        isDoctorVisitAdded: payload\n      }\n    case 'addItemInReceipt':\n      const item = {\n        id: payload.itemId?.value || null,\n        packageId: payload.packageId?.value || null,\n        name: payload.itemId?.label || payload.packageId?.label,\n        category: payload.categoryId.label,\n        price: payload.itemId?.price || payload.packageId?.price,\n        qty: payload.quantity,\n        total: payload.quantity * (payload.itemId?.price || payload.packageId?.price)\n      }\n      return {\n        ...state,\n        receiptItems: [...state.receiptItems, item]\n      }\n    case 'addDoctorReceipt':\n      const doctorsReceipt = {\n        pet: payload.pet,\n        fee: payload.fee,\n        appointmentDate: payload.appointmentDate,\n        isFollowUp: payload.isFollowUp\n      }\n\n      return {\n        ...state,\n        isDoctorVisitAdded: true,\n        doctorsReceipt: doctorsReceipt\n      }\n    case 'resetForm':\n      return {\n        ...state,\n        keyword: '',\n        items: [],\n        isVisitorRecordAdded: false,\n        visitorsId: null,\n        visitorRecord: {\n          emiratesId: '',\n          name: '',\n          email: '',\n          contact: ''\n        },\n\n        receiptFormVisibility: false,\n        showAddReceiptForm: false,\n\n        doctorFormVisibility: false,\n        isDoctorVisitAdded: false,\n\n        receiptItems: [],\n        doctorsReceipt: {\n          pet: null,\n          fee: '',\n          appointmentDate: null,\n          isFollowUp: false\n        }\n      }\n    default: \n      return state\n  }\n}\n\nexport default addVisitorReducer","const initialState = {\n  keyword: '',\n  items: [],\n  isVisitorRecordAdded: false,\n  visitorsId: null,\n  visitorRecord: {\n    emiratesId: '',\n    name: '',\n    email: '',\n    contact: ''\n  },\n\n  receiptFormVisibility: false,\n  showAddReceiptForm: false,\n\n  doctorFormVisibility: false,\n  isDoctorVisitAdded: false,\n\n  receiptItems: [],\n  doctorsReceipt: {\n    pet: null,\n    fee: '',\n    appointmentDate: null,\n    isFollowUp: false\n  }\n}\n\nexport default initialState","import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CFormGroup,\n  CLabel,\n  CRow,\n} from '@coreui/react'\n\nimport { useHistory } from 'react-router-dom'\n\nimport RSelect from 'react-select';\n\nimport useAxios from 'axios-hooks'\n\nimport NewVisitorsForm from './NewVisitorsForm.js'\nimport ReceiptForm from './ReceiptForm/ReceiptForm.js'\nimport DoctorsForm from './DoctorsForm/DoctorsForm.js'\n\nimport reducer from './addVisitorReducer'\nimport initialState from './addVisitorState'\n\nconst AddVisitor = () => {\n  const history = useHistory()\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const [,\n    fetchRecord\n  ] = useAxios(\n    {\n      method: 'GET'\n    },\n    { manual: true }\n  )\n\n  const createNewVisitor = () => {\n    fetchRecord({\n      url: 'https://app.aloropivetcenter.com/api/patients',\n      method: 'POST',\n      data: {\n        ...state.visitorRecord\n      }\n    }).then(resp => {\n      dispatch({ type: 'setVisitorsId', payload: resp.data.id })\n      dispatch({ type: 'setIsVisitorRecordAdded', payload: true })\n    })\n  }\n\n  const storeNewOrder = () => {\n    const data = {\n      patientId: state.visitorsId,\n      appointment: state.isDoctorVisitAdded,\n      checkUpPrice: state.doctorsReceipt.fee,\n      description: 'Order Receipt',\n      followUp: state.doctorsReceipt.isFollowUp,\n      itemIds: state.receiptItems.filter(item => item.id !== null).map(item => item.id),\n      packageIds: state.receiptItems.filter(item => item.packageId !== null).map(item => item.packageId)\n    }\n\n    fetchRecord({\n      url: 'https://app.aloropivetcenter.com/api/orders',\n      method: 'POST',\n      data\n    }).then(resp => {\n      dispatch({ type: 'resetForm', payload: null })\n      history.push('/visitors')\n    })\n  }\n\n  const handleSubmit = () => {\n    if (!state.isVisitorRecordAdded) {\n      createNewVisitor()\n    } else {\n      storeNewOrder()\n    }\n  }\n\n  const handleUserChange = ({ value }) => {\n    dispatch({ type: 'setVisitorsRecord', payload: {\n      emiratesId: value.emiratesId,\n      name: value.name,\n      email: value.email,\n      contact: value.contact\n    }})\n    dispatch({ type: 'setVisitorsId', payload: value.id })\n    dispatch({ type: 'setIsVisitorRecordAdded', payload: true })\n  }\n\n  React.useEffect(() => {\n    if (state.keyword.length > 0) {\n      fetchRecord({\n        url: 'https://app.aloropivetcenter.com/api/patients',\n        params: {\n          search: state.keyword\n        }\n      }).then(resp => {\n        dispatch({ type: 'setItems', payload: (resp?.data?.rows || []).map(item => {\n          return {\n            label: item.name,\n            value: item,\n          }\n        })})\n      })\n    }\n  }, [state.keyword, fetchRecord])\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" sm=\"12\">\n          <CCard>\n            <CCardHeader>\n              Visitor\n              <small> Form</small>\n            </CCardHeader>\n            <CCardBody>\n              <CFormGroup row>\n                <CCol xs=\"12\">\n                  <CLabel className=\"pt-1\" htmlFor=\"search\">Search</CLabel>\n                </CCol>\n                <CCol xs=\"12\">\n                  <RSelect name=\"search\" options={state.items} onInputChange={(input) => dispatch({ type: 'setKeyword', payload: input })} onChange={handleUserChange}></RSelect>\n                </CCol>\n              </CFormGroup>\n              <CCard>\n                <CCardBody>\n                  <NewVisitorsForm \n                    isVisitorRecordAdded={state.isVisitorRecordAdded}\n                    visitorRecord={state.visitorRecord}\n                    dispatch={dispatch}\n                  />\n                </CCardBody>\n              </CCard>\n\n              {\n                state.isVisitorRecordAdded &&\n                <CRow>\n                  <CCol sm=\"6\">\n                    <ReceiptForm\n                      receiptFormVisibility={state.receiptFormVisibility}\n                      showAddReceiptFormModal={state.showAddReceiptForm}\n                      receiptItems={state.receiptItems}\n                      dispatch={dispatch}\n                    />\n                  </CCol>\n                  <CCol sm=\"6\">\n                    <DoctorsForm\n                      visitorId={state.visitorsId}\n                      doctorFormVisibility={state.doctorFormVisibility}\n                      isDoctorVisitAdded={state.isDoctorVisitAdded}\n                      doctorsReceipt={state.doctorsReceipt}\n                      dispatch={dispatch}\n                    />\n                  </CCol>\n                </CRow>\n              }\n            </CCardBody>\n            <CCardFooter>\n              <div className=\"d-flex\">\n                <div className=\"w-50 ml-auto text-right\">\n                  <CButton className=\"w-25 mr-1\" color=\"danger\">Clear</CButton>\n                  <CButton onClick={handleSubmit} className=\"w-25\" color=\"primary\">Submit</CButton>\n                </div>\n              </div>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default AddVisitor\n"],"sourceRoot":""}