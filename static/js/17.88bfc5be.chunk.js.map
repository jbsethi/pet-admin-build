{"version":3,"sources":["views/base/tableHeader/TableHeader.js","views/users/Users.js"],"names":["TableHeader","keyword","changeKeyword","children","className","sm","type","name","placeholder","autoComplete","value","onChange","onKeyPress","fields","key","_classes","label","Users","addToast","useContext","AppContext","history","useHistory","React","useState","totalPages","setTotalPages","currentPage","setActivePage","useAxios","url","method","params","pageNo","manual","data","loading","error","refetch","useEffect","catch","err","message","response","xl","items","rows","striped","itemsPerPage","clickableRows","onRowClick","item","push","id","overTableSlot","color","variant","onClick","underTableSlot","activePage","pages","onActivePageChange","i","scopedSlots","status","active"],"mappings":"6KAAA,yBAiCeA,IAvBK,SAAC,GAAsD,IAAD,IAAnDC,eAAmD,MAAzC,GAAyC,MAArCC,qBAAqC,MAArB,KAAqB,EAAfC,EAAe,EAAfA,SACzD,OACE,eAAC,IAAD,CAAMC,UAAU,6CAAhB,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAYD,UAAU,OAAtB,SACE,cAAC,IAAD,CACEE,KAAK,OACLC,KAAK,UACLC,YAAY,gBACZC,aAAa,MACbC,MAAOT,EACPU,SAAUT,EACVU,WAAYV,QAIlB,cAAC,IAAD,CAAMG,GAAG,IAAID,UAAU,6BAAvB,SACID,S,uHCRJU,EAAS,CACb,CAAEC,IAAK,OAAQC,SAAU,oBACzB,QACA,WACA,OACA,CACED,IAAK,YACLE,MAAO,cAET,UAiGaC,UAtFD,WAAO,IACXC,EAAaC,qBAAWC,KAAxBF,SACFG,EAAUC,cAFE,EAGkBC,IAAMC,SAAS,GAHjC,mBAGXC,EAHW,KAGCC,EAHD,OAImBH,IAAMC,SAAS,GAJlC,mBAIXG,EAJW,KAIEC,EAJF,OAM0BC,YAC1C,CACEC,IAAK,6CACLC,OAAQ,MACRC,OAAQ,CACNC,OAAQN,IAGZ,CACEO,QAAQ,IAfM,0BAMTC,EANS,EAMTA,KAAMC,EANG,EAMHA,QAASC,EANN,EAMMA,MAASC,EANf,KAiClB,OAdAf,IAAMgB,WAAU,YACd,OAAIJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAMV,aACRC,EAAcS,EAAKV,cAEpB,CAACU,IAEJZ,IAAMgB,WAAU,WACdD,IAAUE,OAAM,SAAAC,GACdvB,EAAS,CACPwB,QAASD,EAAIE,SAASR,KAAKO,eAG9B,CAACJ,IAGF,cAAC,IAAD,UACE,cAAC,IAAD,CAAMM,GAAI,GAAV,SACE,eAAC,IAAD,WACE,cAAC,IAAD,oBAGA,cAAC,IAAD,UACA,cAAC,IAAD,CACEC,MAAOT,GAAgBC,EAAN,IAAuB,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMW,OAAQ,GAClDjC,OAAQA,EACRkC,SAAO,EACPC,aAAc,GACdZ,QAASA,EACTa,eAAa,EACbC,WAAY,SAACC,GAAD,OAAU9B,EAAQ+B,KAAR,iBAAuBD,EAAKE,MAClDC,cACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,MAAM,UACNC,QAAQ,UACNpD,UAAU,gBACVqD,QAAS,kBAAMpC,EAAQ+B,KAAK,eAJhC,SAMI,sBAAMhD,UAAU,OAAhB,8BAIRsD,eACE,cAAC,IAAD,CACEC,WAAYhC,EACZiC,MAAOnC,EACPoC,mBAAoB,SAACC,GAAD,OAAOlC,EAAckC,MAG7CC,YAAe,CACb,OACE,SAACZ,GAAD,OACE,6BACE,cAAC,IAAD,CAAQI,OAhFXS,EAgF2Bb,EAAKc,OA/E3CD,EACK,UAEA,UA4ES,SACGb,EAAKc,OAAU,SAAW,eAjFhC,IAAAD","file":"static/js/17.88bfc5be.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CInput,\r\n} from '@coreui/react'\r\n\r\n\r\nconst TableHeader = ({ keyword = '', changeKeyword = null, children }) => {\r\n  return (\r\n    <CRow className=\"align-items-center justify-content-between\">\r\n      <CCol sm=\"4\">\r\n        <CFormGroup className=\"mb-0\">\r\n          <CInput\r\n            type=\"text\"\r\n            name=\"nf-text\"\r\n            placeholder=\"Search Here..\"\r\n            autoComplete=\"off\"\r\n            value={keyword}\r\n            onChange={changeKeyword}\r\n            onKeyPress={changeKeyword}\r\n          />\r\n        </CFormGroup>\r\n      </CCol>\r\n      <CCol sm=\"4\" className=\"d-flex justify-content-end\">\r\n        { children }\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default TableHeader\r\n","import React, { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport useAxios from 'axios-hooks'\nimport TableHeader from '../base/tableHeader/TableHeader'\n\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CButton\n} from '@coreui/react'\n\nimport { AppContext } from '../../App.js'\n\nconst fields = [\n  { key: 'name', _classes: 'font-weight-bold' },\n  'email',\n  'username',\n  'role',\n  {\n    key: 'createdAt',\n    label: 'Registered'\n  },\n  'active'\n]\n\nconst getBadge = status => {\n  if (status) {\n    return 'success'\n  } else {\n    return 'danger'\n  }\n}\n\nconst Users = () => {\n  const { addToast } = useContext(AppContext)\n  const history = useHistory()\n  const [totalPages, setTotalPages] = React.useState(1)\n  const [currentPage, setActivePage] = React.useState(1)\n\n  const [{ data, loading, error }, refetch] = useAxios(\n    {\n      url: 'https://app.aloropivetcenter.com/api/users',\n      method: 'GET',\n      params: {\n        pageNo: currentPage\n      }\n    },\n    {\n      manual: true\n    }\n  )\n\n  React.useEffect(() => {\n    if (data?.totalPages) {\n      setTotalPages(data.totalPages)\n    }\n  }, [data])\n\n  React.useEffect(() => {\n    refetch().catch(err => {\n      addToast({\n        message: err.response.data.message\n      })\n    })\n  }, [refetch])\n\n  return (\n    <CRow>\n      <CCol xl={12}>\n        <CCard>\n          <CCardHeader>\n            Users\n          </CCardHeader>\n          <CCardBody>\n          <CDataTable\n            items={loading ? [] : (error ? [] : data?.rows || [])}\n            fields={fields}\n            striped\n            itemsPerPage={10}\n            loading={loading}\n            clickableRows\n            onRowClick={(item) => history.push(`/users/${item.id}`)}\n            overTableSlot={\n              <TableHeader>\n                <CButton\n                  color=\"primary\"\n                  variant=\"outline\"\n                    className=\"m-2 pl-3 pr-4\"\n                    onClick={() => history.push('/users/add')}\n                  >\n                    <span className=\"ml-1\">Add New User</span>\n                  </CButton>\n              </TableHeader>\n            }\n            underTableSlot={\n              <CPagination\n                activePage={currentPage}\n                pages={totalPages}\n                onActivePageChange={(i) => setActivePage(i)}\n              ></CPagination>\n            }\n            scopedSlots = {{\n              'active':\n                (item)=>(\n                  <td>\n                    <CBadge color={getBadge(item.active)}>\n                      {item.active  ? 'Active' : 'Inactive'}\n                    </CBadge>\n                  </td>\n                )\n            }}\n          />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Users\n"],"sourceRoot":""}