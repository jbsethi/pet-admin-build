{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","views/visitorDetails/NewPrescription.js","views/visitorDetails/PetHistory.js","views/visitorDetails/PetTab.js","views/visitorDetails/PetTabs.js","views/visitorDetails/Treatments.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","withRouter","match","show","setShow","details","history","refetch","useHistory","useContext","AppContext","role","addToast","React","useState","loadingDetails","setLoadingDetails","orderData","setOrderData","selectedRecomendation","setSelectedRecomendation","treatments","setTreatments","useAxios","url","method","manual","fetch","statement","prescription","description","followUp","treatmentRecord","setTreatmentRecord","handleChange","e","oldState","target","name","loadInitialData","useCallback","a","orderId","resp","data","Recomendations","map","o","i","isAdded","Items","find","item","itemId","idx","label","Item","length","r","id","useEffect","recommendationElem","className","md","disabled","options","onChange","option","handleSelectChange","color","size","onClick","service","patientId","appointment","checkUpPrice","items","quantity","concat","packages","Packages","catch","message","response","addServiceToReceipt","onClose","htmlFor","placeholder","type","replace","pathname","params","state","PetHistory","setDetails","setItems","loading","petId","rows","fields","onRowClick","viewDetails","striped","status","pet","to","createdAt","PetTabs","pets","Treatment","path","exact","render","component"],"mappings":"4KAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,OA/BZ,mC,kMCoOeC,eA1NS,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QACzCC,GADgE,EAAdC,QACxCC,eADsD,EAE3CC,qBAAWC,KAA9BC,EAF8D,EAE9DA,KAAMC,EAFwD,EAExDA,SAFwD,EAG1BC,IAAMC,UAAS,GAHW,mBAG/DC,EAH+D,KAG/CC,EAH+C,OAIpCH,IAAMC,SAAS,MAJqB,mBAI/DG,EAJ+D,KAIpDC,EAJoD,OAKZL,IAAMC,SAAS,IALH,mBAK/DK,EAL+D,KAKxCC,EALwC,OAMlCP,IAAMC,SAAS,IANmB,mBAM/DO,EAN+D,KAMnDC,EANmD,OAQpDC,YAChB,CACEC,IAAK,kDACLC,OAAQ,QAEV,CACEC,QAAQ,IANHC,EAR6D,sBAkBxBd,IAAMC,SAAS,CAC3Dc,UAAW,GACXC,aAAc,GACdC,YAAa,GACbC,SAAU,KAtB0D,mBAkB/DC,EAlB+D,KAkB9CC,EAlB8C,KAyBhEC,EAAe,SAACC,GACpBF,GAAmB,SAAAG,GACjB,OAAO,2BACFA,GADL,kBAEGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOlD,YAgD1BoD,EAAkB1B,IAAM2B,YAAN,sBAAkB,8BAAAC,EAAA,yDACxCzB,GAAkB,IACdb,IAAQE,EAF4B,gCAInBsB,EAAM,CACvBH,IAAI,+CAAD,OAAiDnB,EAAQqC,SAC5DjB,OAAQ,QAN4B,OAIhCkB,EAJgC,OAStCzB,EAAayB,EAAKC,MAElBX,EAAmB,CACjBL,UAAWvB,EAAQuB,UACnBC,aAAcxB,EAAQwB,aACtBC,YAAazB,EAAQyB,YACrBC,SAAU,KAGZX,GAAyB,WACvB,OAAOf,EAAQwC,eAAeC,KAAI,SAACC,EAAGC,GAAO,IAAD,EACpCC,MAAe,OAAJN,QAAI,IAAJA,GAAA,UAAAA,EAAMC,YAAN,eAAYM,QAAS,IAAIC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,SAAWN,EAAEM,UACzE,MAAO,CACLC,IAAKN,EACL7D,MAAO4D,EAAEM,OACTE,MAAOR,EAAES,KAAKlB,KACdW,iBAzBgC,WA+BpC9C,GAA8B,IAAtBkB,EAAWoC,OA/BiB,kCAgCnB9B,EAAM,CACvBH,IAAK,qEACLC,OAAQ,QAlC4B,QAgChCkB,EAhCgC,OAqCtCrB,EAAcqB,EAAKC,KAAKE,KAAI,SAAAY,GAC1B,MAAO,CACLH,MAAOG,EAAEpB,KACTnD,MAAOuE,EAAEC,QAxCyB,QA4CxC3C,GAAkB,GA5CsB,4CA6CvC,CAACK,EAAYlB,EAAME,IAEtBQ,IAAM+C,WAAU,WAId,OAFArB,IAEO,WACLrB,EAAa,MACbE,EAAyB,OAE1B,CAACmB,IAEJ,IAAMsB,EAAqB1C,EAAsB2B,KAAI,SAACY,EAAGV,GACvD,OACE,eAAC,IAAD,CAAcc,UAAU,+BAAxB,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SAAcf,EAAE,IAChB,cAAC,IAAD,UACE,cAAC,IAAD,CAASgB,SAAU3D,EAAS4D,QAAS5C,EAAYlC,MAAOgC,EAAsB6B,GAAIkB,SAAU,SAACC,GAAD,OAzGzE,SAACA,EAAQnB,GAClC5B,GAA0B,SAAAgB,GACxB,MAAM,GAAN,mBAAWA,GAAX,cAAuBkB,IAAKN,GAAMmB,QAuG0EC,CAAmBD,EAAQnB,QAErI,cAAC,IAAD,CAAMe,GAAG,IAAT,SAEI1D,IAAYc,EAAsB6B,GAAGC,SAAoB,WAATtC,GAChD,cAAC,IAAD,CAAS0D,MAAM,UAAUC,KAAK,KAAKC,QAAS,kBAxG1B,SAACC,GAC3B,IAAM5B,EAAO,CACX6B,UAAWxD,EAAUwD,UACrBC,YAAuC,MAA1BzD,EAAUyD,YACvBC,aAAc1D,EAAU0D,aACxB7C,YAAab,EAAUa,YACvB8C,MAAO3D,EAAUiC,MAAMJ,KAAI,SAAAE,GACzB,MAAO,CACLK,OAAQL,EAAEK,OACVwB,SAAU7B,EAAE6B,aAEbC,OAAO,CAAC,CACTzB,OAAQmB,EAAQrF,MAChB0F,SAAU,KAEZE,SAAU9D,EAAU+D,SAASlC,KAAI,SAAAE,GAC/B,MAAO,CACLW,GAAIX,EAAEW,GACNkB,SAAU7B,EAAE6B,aAGhB9C,SAAUd,EAAUc,UAGtBJ,EAAM,CACJH,IAAI,+CAAD,OAAiDnB,EAAQqC,SAC5DjB,OAAQ,MACRmB,KAAMA,IACLrD,MAAK,SAAAoD,GACNJ,OACC0C,OAAM,SAAAlF,GACPa,EAAS,CACPsE,QAASnF,EAAIoF,SAASvC,KAAKsC,aAwE2BE,CAAoBjE,EAAsB6B,KAA5F,qBARKA,MAef,OACE,eAAC,IAAD,CAAQ7C,KAAMA,EAAMkF,QAAS,kBAAMjF,GAAQ,IAA3C,UACE,cAAC,IAAD,UAEIC,EACA,oBACA,qBAGJ,cAAC,IAAD,UAEEU,EACA,mBAAG+C,UAAU,mBAAb,mCACA,qCACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQwB,QAAQ,YAAhB,uBACA,cAAC,IAAD,CAAQtB,SAAU3D,EAASlB,MAAO6C,EAAgBJ,UAAWU,KAAK,YAAY4B,SAAUhC,EAAcyB,GAAG,YAAY4B,YAAY,uBAEnI,eAAC,IAAD,WACE,cAAC,IAAD,CAAQD,QAAQ,eAAhB,0BACA,cAAC,IAAD,CAAQtB,SAAU3D,EAASlB,MAAO6C,EAAgBH,aAAcS,KAAK,eAAe4B,SAAUhC,EAAcyB,GAAG,eAAe4B,YAAY,0BAG5I,eAAC,IAAD,CAAYzB,UAAU,WAAtB,UACE,cAAC,IAAD,CAAMA,UAAU,kDAAhB,SACE,cAAC,IAAD,CAAQwB,QAAQ,gBAAhB,6BAGAzB,EAAmBJ,OAAS,GAC5B,yBAASK,UAAU,OAAnB,SACGD,OAKP,eAAC,IAAD,WACE,cAAC,IAAD,CAAQyB,QAAQ,cAAhB,yBACA,cAAC,KAAD,CACEtB,SAAU3D,EACVlB,MAAO6C,EAAgBF,YACvBoC,SAAUhC,EACVI,KAAK,cACLqB,GAAG,cACH4B,YAAY,yBAGhB,eAAC,IAAD,WACE,cAAC,IAAD,CAAQD,QAAQ,WAAhB,yBACA,cAAC,IAAD,CAAQtB,SAAU3D,EAASmF,KAAK,SAASrG,MAAO6C,EAAgBD,SAAUO,KAAK,WAAW4B,SAAUhC,EAAcyB,GAAG,WAAW4B,YAAY,gCAMhJ,eAAC,IAAD,WACE,cAAC,IAAD,CAASlB,MAAM,SAASE,QAAS,kBAAMnE,GAAQ,IAA/C,oBACA,cAAC,IAAD,CAASiE,MAAM,UAAUE,QAAS,kBAAMjE,EAAQmF,QAAQ,CACtDC,SAAS,aAAD,OAAexF,EAAMyF,OAAOhC,GAA5B,WACRiC,MAAO,CACLlD,QAASrC,EAAQqC,YAHrB,mCCvJOmD,EA3DI,SAAC,GAAe,IAAb3F,EAAY,EAAZA,MAAY,EACFW,IAAMC,SAAS,MADb,mBACzBT,EADyB,KAChByF,EADgB,OAERjF,IAAMC,UAAS,GAFP,mBAEzBX,EAFyB,KAEnBC,EAFmB,OAGNS,IAAMC,SAAS,IAHT,mBAGzB8D,EAHyB,KAGlBmB,EAHkB,OAKHxE,YAC3B,CACEC,IAAK,2DACLC,OAAQ,QAEV,CACEC,QAAQ,IAXoB,mBAKvBsE,EALuB,KAKvBA,QAAWrE,EALY,KAqChC,OAVAd,IAAM+C,WAAU,WACdjC,EAAM,CACJiB,KAAM,CACJqD,MAAO/F,EAAMyF,OAAOM,SAErB1G,MAAK,SAAAoD,GAAS,IAAD,EACdoD,GAAa,OAAJpD,QAAI,IAAJA,GAAA,UAAAA,EAAMC,YAAN,eAAYsD,OAAQ,SAE9B,CAACvE,EAAOzB,EAAMyF,OAAOM,QAGtB,eAAC,IAAD,WACE,cAAC,IAAD,UACE,qBAAKnC,UAAU,oDAAf,SACE,qBAAKA,UAAU,UAAf,sCAGJ,cAAC,IAAD,CAAWA,UAAU,MAArB,SACE,cAAC,IAAD,CACEkC,QAASA,EACTG,OAAQ,CAAC,YAAa,cAAe,aACrCvB,MAAOA,EACPwB,WAAY,SAAChD,GAAD,OAlCA,SAACA,GACnB0C,EAAW1C,GACXhD,GAAQ,GAgCoBiG,CAAYjD,IAClCkD,SAAO,MAIX,cAAC,EAAD,CAAkBnG,KAAMA,EAAMC,QAlCd,SAACmG,GACnBnG,EAAQmG,GACHA,GACHT,EAAW,OA+ByCzF,QAASA,Q,QCjCpDJ,G,OAAAA,aAnBA,SAAC,GAAmB,EAAjBC,MAAkB,IAAXsG,EAAU,EAAVA,IACvB,OACE,qBAAK1C,UAAU,SAAf,SACE,cAAC,IAAD,CAAS2C,GAAI,CACXf,SAAS,aAAD,OAAec,EAAI/B,UAAnB,uBAA2C+B,EAAI7C,KADzD,SAGE,cAAC,IAAD,CAAOG,UAAU,MAAjB,SACE,cAAC,IAAD,CAAWA,UAAU,MAArB,SACE,sBAAKA,UAAU,oDAAf,UACE,mBAAGA,UAAU,MAAb,SAAoB0C,EAAIlE,OACxB,mBAAGwB,UAAU,MAAb,SAAoB0C,EAAIE,2BCVvBC,EANC,SAAC,GACf,OAD4B,EAAXC,KACL9D,KAAI,SAAA0D,GAAG,OACjB,cAAC,EAAD,CAAqBA,IAAKA,GAAbA,EAAI7C,QCyENkD,UApEG,SAAC,GAAe,IAAb3G,EAAY,EAAZA,MACXU,EAAaC,IAAMJ,WAAWC,KAA9BE,SACFN,EAAUE,cAFe,EAGLK,IAAMC,SAAS,IAHV,mBAGxB8D,EAHwB,KAGjBmB,EAHiB,OAIFxE,YAC3B,CACEC,IAAK,yDACLC,OAAQ,QAEV,CACEC,QAAQ,IAVmB,mBAItBsE,EAJsB,KAItBA,QAAWrE,EAJW,KAwC/B,OA1BAd,IAAM+C,WAAU,WACdjC,EAAM,CACJiB,KAAM,CACJ6B,UAAWvE,EAAMyF,OAAOhC,MAEzBpE,MAAK,SAACoD,GAAU,IAAD,QAChBoD,EAAQ,OAACpD,QAAD,IAACA,GAAD,UAACA,EAAMC,YAAP,aAAC,EAAYsD,KAAKpD,KAAI,SAAAM,GAC5B,MAAO,CACLO,GAAIP,EAAKO,GACTc,UAAWvE,EAAMyF,OAAOhC,GACxBrB,KAAMc,EAAKd,KACXoE,UAAWtD,EAAKsD,gBAIZ,OAAJ/D,QAAI,IAAJA,GAAA,UAAAA,EAAMC,YAAN,mBAAYsD,YAAZ,eAAkBzC,QAAU,GAC9BnD,EAAQmF,QAAR,oBAA6BvF,EAAMyF,OAAOhC,GAA1C,8BAA2DhB,QAA3D,IAA2DA,GAA3D,UAA2DA,EAAMC,YAAjE,aAA2D,EAAYsD,KAAK,GAAGvC,QAChFsB,OAAM,SAAAlF,GACPa,EAAS,CACPsE,QAASnF,EAAIoF,SAASvC,KAAKsC,eAI9B,CAACvD,EAAOzB,EAAMyF,OAAOhC,GAAIrD,IAI1B,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMyD,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,mBAAGD,UAAU,cAAb,oBAEF,cAAC,IAAD,CAAWA,UAAU,MAArB,SAEIkC,EACA,mBAAGlC,UAAU,mBAAb,yBACA,cAAC,EAAD,CAAS8C,KAAMhC,WAKvB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkC,KAAK,2BAA2BC,OAAK,EAACC,OAAQ,kBACnD,mBAAGlD,UAAU,kBAAb,mDAEF,cAAC,IAAD,CAAOgD,KAAK,kCAAkCG,UAAWpB","file":"static/js/7.87cc209d.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { CModal, CModalBody, CModalFooter, CModalHeader, CFormGroup, CLabel, CInput, CButton, CTextarea, CRow, CCol } from '@coreui/react'\nimport React, {useContext} from 'react'\n\nimport RSelect from 'react-select';\n\nimport { withRouter, useHistory } from 'react-router-dom'\n\nimport useAxios from 'axios-hooks'\nimport { AppContext } from '../../App.js'\n\nconst NewPrescription = ({ match, show, setShow, details, refetch }) => {\n  const history = useHistory()\n  const { role, addToast } = useContext(AppContext)\n  const [loadingDetails, setLoadingDetails] = React.useState(false)\n  const [orderData, setOrderData] = React.useState(null)\n  const [selectedRecomendation, setSelectedRecomendation] = React.useState([])\n  const [treatments, setTreatments] = React.useState([])\n\n  const [, fetch] = useAxios(\n    {\n      url: 'https://app.aloropivetcenter.com/api/treatments',\n      method: 'POST',\n    },\n    {\n      manual: true\n    }\n  )\n\n  const [treatmentRecord, setTreatmentRecord] = React.useState({\n    statement: '',\n    prescription: '',\n    description: '',\n    followUp: ''\n  })\n\n  const handleChange = (e) => {\n    setTreatmentRecord(oldState => {\n      return {\n        ...oldState,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  const handleSelectChange = (option, i) => {\n    setSelectedRecomendation((oldState => {\n      return [...oldState, { idx: i, ...option }]\n    }))\n  }\n\n  const addServiceToReceipt = (service) => {\n    const data = {\n      patientId: orderData.patientId,\n      appointment: orderData.appointment === '1' ? true : false,\n      checkUpPrice: orderData.checkUpPrice,\n      description: orderData.description,\n      items: orderData.Items.map(i => {\n        return {\n          itemId: i.itemId,\n          quantity: i.quantity\n        }\n      }).concat([{\n        itemId: service.value,\n        quantity: 1\n      }]),\n      packages: orderData.Packages.map(i => {\n        return {\n          id: i.id,\n          quantity: i.quantity\n        }\n      }),\n      followUp: orderData.followUp\n    }\n\n    fetch({\n      url: `https://app.aloropivetcenter.com/api/orders/${details.orderId}`,\n      method: 'PUT',\n      data: data\n    }).then(resp => {\n      loadInitialData()\n    }).catch(err => {\n      addToast({\n        message: err.response.data.message\n      })\n    })\n  }\n\n  const loadInitialData = React.useCallback(async () => {\n    setLoadingDetails(true)\n    if (show && details) {\n      \n      const resp = await fetch({\n        url: `https://app.aloropivetcenter.com/api/orders/${details.orderId}`,\n        method: 'GET'\n      })\n\n      setOrderData(resp.data)\n\n      setTreatmentRecord({\n        statement: details.statement,\n        prescription: details.prescription,\n        description: details.description,\n        followUp: ''\n      })\n\n      setSelectedRecomendation(() => {\n        return details.Recomendations.map((o, i) => {\n          const isAdded = (resp?.data?.Items || []).find(item => item.itemId === o.itemId) ? true : false\n          return {\n            idx: i,\n            value: o.itemId,\n            label: o.Item.name,\n            isAdded\n          }\n        })\n      })\n    }\n\n    if (show && treatments.length === 0) {\n      const resp = await fetch({\n        url: 'https://app.aloropivetcenter.com/api/items/records/all?serviceId=3',\n        method: 'GET'\n      })\n\n      setTreatments(resp.data.map(r => {\n        return {\n          label: r.name,\n          value: r.id\n        }\n      }))\n    }\n    setLoadingDetails(false)\n  }, [treatments, show, details])\n\n  React.useEffect(() => {\n    \n    loadInitialData()\n\n    return () => {\n      setOrderData(null)\n      setSelectedRecomendation([])\n    }\n  }, [loadInitialData])\n\n  const recommendationElem = selectedRecomendation.map((r, i) => {\n    return (\n      <CRow key={i} className=\"align-items-center px-3 py-2\">\n        <CCol md=\"1\">{i+1}</CCol>\n        <CCol>\n          <RSelect disabled={details} options={treatments} value={selectedRecomendation[i]} onChange={(option) => handleSelectChange(option, i)}></RSelect>\n        </CCol>\n        <CCol md=\"2\">\n          {\n            details && !selectedRecomendation[i].isAdded && role !== 'doctor' &&\n            <CButton color=\"primary\" size=\"sm\" onClick={() => addServiceToReceipt(selectedRecomendation[i])}>Add</CButton>\n          }\n        </CCol>\n      </CRow>\n    )\n  })\n\n  return (\n    <CModal show={show} onClose={() => setShow(false)}>\n      <CModalHeader>\n        {\n          details ?\n          'Treatment Details' :\n          'New Prescription'\n        }\n      </CModalHeader>\n      <CModalBody>\n      {\n        loadingDetails ?\n        <p className=\"pt-3 text-center\">Loading Please wait !</p> : (\n        <>\n        <CFormGroup>\n          <CLabel htmlFor=\"Statement\">Statement</CLabel>\n          <CInput disabled={details} value={treatmentRecord.statement} name=\"statement\" onChange={handleChange} id=\"statement\" placeholder=\"Enter Statement\" />\n        </CFormGroup>\n        <CFormGroup>\n          <CLabel htmlFor=\"prescription\">Prescription</CLabel>\n          <CInput disabled={details} value={treatmentRecord.prescription} name=\"prescription\" onChange={handleChange} id=\"prescription\" placeholder=\"Enter Prescription\" />\n        </CFormGroup>\n        \n        <CFormGroup className=\"py-3 m-0\">\n          <CRow className=\"px-3 justify-content-between align-items-center\">\n            <CLabel htmlFor=\"recomendation\">Recomendation</CLabel>\n          </CRow>\n          {\n            recommendationElem.length > 0 &&\n            <section className=\"py-2\">\n              {recommendationElem}\n            </section>\n          }\n        </CFormGroup>\n\n        <CFormGroup>\n          <CLabel htmlFor=\"description\">Description</CLabel>\n          <CTextarea \n            disabled={details}\n            value={treatmentRecord.description}\n            onChange={handleChange}\n            name=\"description\"\n            id=\"description\" \n            placeholder=\"Enter Description\"\n          />\n        </CFormGroup>\n        <CFormGroup>\n          <CLabel htmlFor=\"followUp\">Follow up ?</CLabel>\n          <CInput disabled={details} type=\"number\" value={treatmentRecord.followUp} name=\"followUp\" onChange={handleChange} id=\"followUp\" placeholder=\"Enter follow Up day\" />\n        </CFormGroup>\n        </>\n        )\n      }\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"danger\" onClick={() => setShow(false)}>Cancel</CButton>\n        <CButton color=\"primary\" onClick={() => history.replace({\n          pathname: `/visitors/${match.params.id}/orders`,\n          state: {\n            orderId: details.orderId\n          }\n        })}>View Invoice</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default withRouter(NewPrescription)\n","import { CCard, CCardBody, CCardHeader, CDataTable } from '@coreui/react'\nimport React from 'react'\n\nimport useAxios from 'axios-hooks'\n\nimport NewPrescription from './NewPrescription'\n\nconst PetHistory = ({ match }) => {\n  const [details, setDetails] = React.useState(null)\n  const [show, setShow] = React.useState(false)\n  const [items, setItems] = React.useState([])\n\n  const [{ loading }, fetch] = useAxios(\n    {\n      url: 'https://app.aloropivetcenter.com/api/treatments/all/pets',\n      method: 'POST',\n    },\n    {\n      manual: true\n    }\n  )\n\n  const viewDetails = (item) => {\n    setDetails(item)\n    setShow(true)\n  }\n\n  const toggleModal = (status) => {\n    setShow(status)\n    if (!status) {\n      setDetails(null)\n    }\n  }\n  \n  React.useEffect(() => {\n    fetch({\n      data: {\n        petId: match.params.petId\n      }\n    }).then(resp => {\n      setItems(resp?.data?.rows || [])\n    })\n  }, [fetch, match.params.petId])\n\n  return (\n    <CCard>\n      <CCardHeader>\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <div className=\"font-lg\">Pet Previous History</div>\n        </div>\n      </CCardHeader>\n      <CCardBody className=\"p-0\">\n        <CDataTable\n          loading={loading}\n          fields={['statement', 'description', 'createdAt']}\n          items={items}\n          onRowClick={(item) => viewDetails(item)}\n          striped\n        ></CDataTable>\n      </CCardBody>\n\n      <NewPrescription  show={show} setShow={toggleModal} details={details}/>\n    </CCard>\n  )\n}\n\nexport default PetHistory\n","import { CCard, CCardBody } from '@coreui/react'\nimport React from 'react'\n\nimport { NavLink } from 'react-router-dom'\n\nimport { withRouter } from 'react-router-dom'\n\nimport './PetTab.css'\n\nconst PetTab = ({ match, pet }) => {\n  return (\n    <div className=\"petTab\">\n      <NavLink to={{\n        pathname: `/visitors/${pet.patientId}/treatments/${pet.id}`\n      }}>\n        <CCard className=\"m-0\">\n          <CCardBody className=\"p-3\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <p className=\"m-0\">{pet.name}</p>\n              <p className=\"m-0\">{pet.createdAt}</p>\n            </div>\n          </CCardBody>\n        </CCard>\n      </NavLink>\n    </div>\n  )\n}\n\nexport default withRouter(PetTab)\n","import React from 'react'\nimport PetTab from './PetTab'\n\nconst PetTabs = ({ pets }) => {\n  return pets.map(pet => (\n    <PetTab key={pet.id} pet={pet}></PetTab>\n  ))\n}\n\nexport default PetTabs\n","import {  CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\nimport React from 'react'\nimport { Route, useHistory } from 'react-router-dom'\nimport PetHistory from './PetHistory'\nimport PetTabs from './PetTabs'\n\nimport useAxios from 'axios-hooks'\n\nimport { AppContext } from '../../App.js'\n\nconst Treatment = ({ match }) => {\n  const { addToast } = React.useContext(AppContext)\n  const history = useHistory()\n  const [items, setItems] = React.useState([])\n  const [{ loading }, fetch] = useAxios(\n    {\n      url: 'https://app.aloropivetcenter.com/api/pets/all/patients',\n      method: 'POST',\n    },\n    {\n      manual: true\n    }\n  )\n\n  React.useEffect(() => {\n    fetch({\n      data: {\n        patientId: match.params.id\n      }\n    }).then((resp) => {\n      setItems(resp?.data?.rows.map(item => {\n        return {\n          id: item.id,\n          patientId: match.params.id,\n          name: item.name,\n          createdAt: item.createdAt\n        }\n      }))\n\n      if (resp?.data?.rows?.length  > 0)\n        history.replace(`/visitors/${match.params.id}/treatments/${resp?.data?.rows[0].id}`)\n    }).catch(err => {\n      addToast({\n        message: err.response.data.message\n      })\n    })\n\n  }, [fetch, match.params.id, history])\n\n\n  return (\n    <>\n      <CRow>\n        <CCol md=\"4\">\n          <CCard>\n            <CCardHeader>\n              <p className=\"font-lg m-0\">Pets</p>\n            </CCardHeader>\n            <CCardBody className=\"p-0\">\n              {\n                loading ?\n                <p className=\"pt-3 text-center\">Loading ...</p> :\n                <PetTabs pets={items} ></PetTabs>\n              }\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol>\n          <Route path=\"/visitors/:id/treatments\" exact render={() => (\n            <p className=\"p-5 text-center\">Please select Pet to view details.</p>\n          )} />\n          <Route path=\"/visitors/:id/treatments/:petId\" component={PetHistory} />\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Treatment\n"],"sourceRoot":""}