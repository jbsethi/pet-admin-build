{"version":3,"sources":["config/index.js","views/users/ForgotPassword.js","views/users/User.js"],"names":["PUBLIC_API","PUBLIC_PATH","ForgotPassword","id","show","setShow","React","useState","password","confirmPassword","userData","setUserData","useAxios","url","method","manual","data","loading","executePost","toggle","confirmClose","useCallback","handleChange","e","oldState","target","name","value","useEffect","onClose","closeButton","className","row","sm","col","htmlFor","onChange","placeholder","type","color","onClick","User","match","history","useHistory","params","error","emiratesId","role","email","contact","username","confirm_password","image","active","userRecord","setUserRecord","push","xl","action","lg","readOnly","disabled","custom","checked","variant","shape","src","alt","width"],"mappings":"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","file":"static/js/12.f19edc9a.chunk.js","sourcesContent":["export const PUBLIC_API = \"https://app.aloropivetcenter.com/api\"\nexport const PUBLIC_PATH = \"https://app.aloropivetcenter.com/public/\"","import React from 'react'\nimport useAxios from 'axios-hooks'\n\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n  CButton,\n  CFormGroup,\n  CCol,\n  CLabel,\n  CInput,\n  CRow,\n} from '@coreui/react'\n\nconst ForgotPassword = ({ id, show, setShow }) => {\n  const [userData, setUserData] = React.useState({\n    password: '',\n    confirmPassword: ''\n  })\n\n  const [\n    { data, loading },\n    executePost\n  ] = useAxios(\n    {\n      url: `https://app.aloropivetcenter.com/api/users/password-reset/${id}`,\n      method: 'POST'\n    },\n    { manual: true }\n  )\n\n  const toggle = () => {\n    setShow(!show)\n  }\n\n  const confirmClose = React.useCallback(() => {\n    setShow(false)\n    setUserData({\n      password: '',\n      confirmPassword: ''\n    })\n  }, [setShow])\n\n  const handleChange = (e) => {\n    setUserData((oldState) => {\n      return {\n        ...oldState,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  const storeUserPassword = () => {\n    if (!loading) {\n      executePost({\n        data: {\n          ...userData\n        }\n      })\n    }\n  }\n\n  React.useEffect(() => {\n    if (data) {\n      confirmClose()\n    }\n  }, [data, confirmClose])\n\n  return (\n    <>\n      <CModal\n        show={show}\n        onClose={toggle}\n      >\n        <CModalHeader closeButton>Change Password</CModalHeader>\n        <CModalBody>\n          <CRow>\n            <CCol className=\"px-5 pt-4\">\n              <CFormGroup row className=\"justify-content-center\">\n                <CLabel className=\"text-right\" sm=\"5\" col htmlFor=\"input-password\">Password</CLabel>\n                <CCol sm=\"7\">\n                  <CInput value={userData.password} onChange={handleChange} id=\"input-password\" name=\"password\" placeholder=\"Password\" type=\"password\" />\n                </CCol>\n              </CFormGroup>\n              <CFormGroup row className=\"justify-content-center\">\n                <CLabel className=\"text-right\" sm=\"5\" col htmlFor=\"input-confirm-password\">Confirm Password</CLabel>\n                <CCol sm=\"7\">\n                  <CInput value={userData.confirmPassword} onChange={handleChange} id=\"input-confirm-password\" name=\"confirmPassword\" placeholder=\"Password\" type=\"password\" />\n                </CCol>\n              </CFormGroup>\n            </CCol>\n          </CRow>\n        </CModalBody>\n        <CModalFooter>\n          <CButton\n            color=\"secondary\"\n            onClick={toggle}\n          >\n            Cancel\n          </CButton>\n          <CButton onClick={storeUserPassword} className=\"ml-1\" color=\"primary\">{ loading ? 'Loading' : 'Confirm' }</CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\n\nexport default ForgotPassword\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport useAxios from 'axios-hooks'\n\nimport { PUBLIC_API, PUBLIC_PATH } from '../../config/index'\n\nimport ForgotPassword from './ForgotPassword'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CSelect,\n  CSwitch,\n  CMedia,\n  CCardFooter,\n  CButton\n} from '@coreui/react'\n\nconst defaultImageUrl = \"https://www.kindpng.com/picc/m/72-723761_student-png-sammilani-mahavidyalaya-undergraduate-and-dummy-user.png\"\n\nconst User = ({ match }) => {\n  const history = useHistory()\n  const [show, setShow] = React.useState(false)\n\n  const [\n    { data, loading, error }\n  ] = useAxios({\n    url: `${PUBLIC_API}/users/${match.params.id}`,\n    method: 'GET'\n  })\n  \n  const [userRecord, setUserRecord] = React.useState({\n    emiratesId: '',\n    role: 1,\n    name: '',\n    email: '',\n    contact: '',\n    username: '',\n    password: '',\n    confirm_password: '',\n    image: '',\n    active: true\n  })\n\n  React.useEffect(() => {\n    if (data) {\n      setUserRecord({...data})\n    }\n  }, [data])\n\n\n  React.useEffect(() => {\n    if (error) {\n      history.push('/users')\n    }\n  }, [error, history])\n\n  return (\n    <>\n    <CRow>\n      <CCol xl={12}>\n        <CCard>\n          <CCardHeader>\n            Users Details\n          </CCardHeader>\n          <CCardBody>\n            {\n              loading ?\n              <div className=\"p-5 text-center\">Loading Please Wait</div> :\n              <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\n                <CRow>\n                  <CCol lg=\"7\">\n                    <CFormGroup row className=\"justify-content-center\">\n                      <CLabel className=\"text-right\" sm=\"3\" col htmlFor=\"input-emirates-id\">Emirates ID</CLabel>\n                      <CCol sm=\"6\">\n                        <CInput value={userRecord.emiratesId} readOnly  id=\"input-emirates-id\" name=\"emiratesId\" placeholder=\"Emirates ID\" />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row className=\"justify-content-center\">\n                      <CLabel className=\"text-right\" sm=\"3\" col htmlFor=\"input-role\">Roles</CLabel>\n                      <CCol sm=\"6\">\n                        <CSelect value={userRecord.role} disabled custom name=\"role\" id=\"input-role\">\n                          <option value=\"1\">Administrator</option>\n                          <option value=\"2\">Receiptionist</option>\n                          <option value=\"3\">Doctor</option>\n                        </CSelect>\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row className=\"justify-content-center\">\n                      <CLabel className=\"text-right\" sm=\"3\" col htmlFor=\"input-name\">Name</CLabel>\n                      <CCol sm=\"6\">\n                        <CInput value={userRecord.name} readOnly id=\"input-name\" name=\"name\" placeholder=\"Name\" />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row className=\"justify-content-center\">\n                      <CLabel className=\"text-right\" sm=\"3\" col htmlFor=\"input-email\">Email</CLabel>\n                      <CCol sm=\"6\">\n                        <CInput value={userRecord.email} readOnly id=\"input-email\" name=\"email\" placeholder=\"Email\" />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row className=\"justify-content-center\">\n                      <CLabel className=\"text-right\" sm=\"3\" col htmlFor=\"input-contact\">Phone No</CLabel>\n                      <CCol sm=\"6\">\n                        <CInput value={userRecord.contact} readOnly id=\"input-contact\" name=\"contact\" placeholder=\"Phone no\" />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row className=\"justify-content-center\">\n                      <CLabel className=\"text-right\" sm=\"3\" col htmlFor=\"input-username\">Username</CLabel>\n                      <CCol sm=\"6\">\n                        <CInput value={userRecord.username} readOnly id=\"input-username\" name=\"username\" placeholder=\"Username\" />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row className=\"justify-content-center\">\n                      <CLabel className=\"text-right\" sm=\"3\" col htmlFor=\"input-active\">Active</CLabel>\n                      <CCol sm=\"6\">\n                        <CSwitch\n                          className=\"pt-1\"\n                          color=\"primary\"\n                          name=\"active\"\n                          checked={userRecord.active}\n                          readOnly\n                          {\n                            ...({\n                              variant: 'opposite',\n                              shape:'pill'\n                            })\n                          }\n                        />\n                      </CCol>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol lg=\"4\">\n                    <CMedia className=\"flex-column\">\n                      <img src={userRecord.image ? `${PUBLIC_PATH}${userRecord.image}` : defaultImageUrl} alt=\"preview\" width=\"100%\"/>\n                    </CMedia>\n                  </CCol>\n                </CRow>\n              </CForm>\n            }\n          </CCardBody>\n          {\n            !loading &&\n            <CCardFooter >\n              <section className=\"text-right w-50 ml-auto\">\n                <CButton onClick={() => setShow(true)} color=\"danger\" className=\"mr-1 w-25\">\n                  Change Password\n                </CButton>\n                <CButton onClick={() => history.push(`/users/${userRecord.id}/edit`)} color=\"primary\" className=\"w-25\">\n                  Edit Details\n                </CButton>\n              </section>\n            </CCardFooter>\n          }\n        </CCard>\n      </CCol>\n    </CRow>\n    <ForgotPassword show={show} setShow={setShow} id={userRecord.id}/>\n    </>\n  )\n}\n\nexport default User\n"],"sourceRoot":""}