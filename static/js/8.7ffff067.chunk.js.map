{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","views/addVisitor/ReceiptForm/AddReceiptForm.js","views/addVisitor/NewVisitorsForm.js","views/addVisitor/ReceiptForm/ReceiptForm.js","views/addVisitor/DoctorsForm/DoctorReceipt.js","views/addVisitor/DoctorsForm/AddNewPetForm.js","views/addVisitor/DoctorsForm/DoctorAppointmentForm.js","views/addVisitor/DoctorsForm/DoctorsForm.js","views/addVisitor/addVisitorReducer.js","views/addVisitor/addVisitorState.js","views/addVisitor/AddVisitor.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","AddReceiptForm","show","setShow","dispatch","addToast","React","useContext","AppContext","useState","categoryId","itemId","packageId","quantity","addReceiptRecord","setAddReceiptRecord","categories","setCategories","items","setItems","packages","setPackages","useAxios","url","method","manual","fetchRecord","handleChange","e","isSelect","oldState","valueFor","option","target","name","getCategories","useCallback","a","record","options","data","rows","map","category","label","displayName","id","message","response","getPackageItems","params","serviceId","item","price","record2","options2","useEffect","onClose","row","className","htmlFor","xs","onChange","placeholder","type","color","onClick","payload","NewVisitorsForm","isVisitorRecordAdded","visitorRecord","disabled","emiratesId","email","contact","receiptTableFields","ReceiptForm","receiptFormVisibility","showAddReceiptFormModal","receiptItems","showAddReceiptForm","status","shape","variant","checked","fields","footer","hover","overTableSlot","size","DoctorReceipt","doctorsReceipt","md","pet","appointmentDate","getDate","getMonth","getFullYear","isFollowUp","fee","AddNewPetForm","visitorId","setSelectedPet","breed","age","specie","gender","microchip","petInfo","setPetInfo","handleChangePetInfo","custom","patientId","resp","catch","DoctorAppointmentForm","showAddAppointmentModal","setShowAddAppointmentModal","showNewPetModal","setShowNewPetModal","keyword","setKeyword","selectedPet","setFee","setIsFollowUp","length","search","o","onInputChange","input","Date","console","log","DoctorsForm","doctorFormVisibility","isDoctorVisitAdded","addVisitorReducer","state","visitorsId","qty","total","initialState","AddVisitor","history","useHistory","useReducer","reducer","sm","appointment","checkUpPrice","description","followUp","filter","push","storeNewOrder"],"mappings":"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","file":"static/js/8.7ffff067.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react'\n\nimport RSelect from 'react-select';\n\nimport {\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalBody,\n  CButton,\n  CFormGroup,\n  CCol,\n  CLabel,\n  CInput\n} from '@coreui/react'\n\nimport useAxios from 'axios-hooks'\n\nimport { AppContext } from '../../../App.js'\n\nconst AddReceiptForm = ({ show, setShow, dispatch }) => {\n  const { addToast } = React.useContext(AppContext)\n  const [addReceiptRecord, setAddReceiptRecord] = React.useState({\n    categoryId: null,\n    itemId: null,\n    packageId: null,\n    quantity: 1\n  })\n\n  const [categories, setCategories] = React.useState([])\n  const [items, setItems] = React.useState([])\n  const [packages, setPackages] = React.useState([])\n\n  const [\n    ,\n    fetchRecord\n  ] = useAxios(\n    {\n      url: 'https://app.aloropivetcenter.com/api/services',\n      method: 'POST'\n    },\n    { manual: true }\n  )\n\n  const handleChange = (e) => {\n    if (e.isSelect) {\n      setAddReceiptRecord(oldState => {\n        return {\n          ...oldState,\n          [e.valueFor]: e.option\n        }\n      })\n    } else {\n      setAddReceiptRecord(oldState => {\n        return {\n          ...oldState,\n          [e.target.name]: e.target.value\n        }\n      })\n    }\n  }\n\n  const getCategories = React.useCallback(async () => {\n    try {\n      const record = await fetchRecord({\n        url: 'https://app.aloropivetcenter.com/api/services',\n        method: 'GET'\n      })\n\n      const options = (record?.data?.rows || []).map(category => {\n        return {\n          label: category.displayName,\n          value: category.id\n        }\n      })\n\n      setCategories(options)\n    } catch (err) {\n      addToast({\n        message: err.response.data.message\n      })\n    }\n  }, [fetchRecord])\n\n  const getPackageItems = React.useCallback(async () => {\n    try {\n      setAddReceiptRecord(oldState => {\n        return {\n          ...oldState,\n          itemId: null,\n          packageId: null,\n        }\n      })\n\n      const record = await fetchRecord({\n        url: 'https://app.aloropivetcenter.com/api/packages/records/all',\n        method: 'GET',\n        params: {\n          serviceId: addReceiptRecord.categoryId?.value || null\n        }\n      })\n\n      const options = (record?.data || []).map(item => {\n        return {\n          label: item.name,\n          value: item.id,\n          price: item.price\n        }\n      })\n\n      setPackages(options)\n\n      const record2 = await fetchRecord({\n        url: 'https://app.aloropivetcenter.com/api/items/records/all',\n        method: 'GET',\n        params: {\n          serviceId: addReceiptRecord.categoryId?.value || null\n        }\n      })\n\n      const options2 = (record2?.data || []).map(item => {\n        return {\n          label: item.name,\n          value: item.id,\n          price: item.price\n        }\n      })\n\n      setItems(options2)\n    } catch (err) {\n      addToast({\n        message: err.response.data.message\n      })\n    }\n  }, [fetchRecord, addReceiptRecord?.categoryId?.value])\n\n  const submitRecord = () => {\n    dispatch({ type: 'addItemInReceipt', payload: addReceiptRecord })\n    setAddReceiptRecord({\n      categoryId: null,\n      itemId: null,\n      packageId: null,\n      quantity: 1\n    })\n    setShow(false)\n  }\n\n  React.useEffect(() => {\n    if (show) {\n      getCategories()\n    }\n  }, [show, getCategories])\n\n  React.useEffect(() => {\n    if (show && addReceiptRecord.categoryId) {\n      setItems([])\n      setPackages([])\n      getPackageItems()\n    }\n  }, [show, getPackageItems, addReceiptRecord.categoryId])\n\n  return (\n    <CModal\n      show={show}\n      onClose={() => setShow(false)}\n    >\n      <CModalHeader>\n        Add Item\n      </CModalHeader>\n      <CModalBody>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-category\">Category</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <RSelect value={addReceiptRecord.categoryId} name=\"categoryId\" options={categories} onChange={(e) => handleChange({isSelect: true, valueFor: 'categoryId', option: e})}/>\n          </CCol>\n        </CFormGroup>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-package\">Package</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <RSelect value={addReceiptRecord.packageId} name=\"packageItem\" options={packages} onChange={(e) => handleChange({isSelect: true, valueFor: 'packageId', option: e})}/>\n          </CCol>\n        </CFormGroup>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-package-item\">Item</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <RSelect value={addReceiptRecord.itemId} name=\"packageItem\" options={items} onChange={(e) => handleChange({isSelect: true, valueFor: 'itemId', option: e})}/>\n          </CCol>\n        </CFormGroup>\n        <CFormGroup row>\n          <CCol>\n            <CLabel className=\"pt-2\" htmlFor=\"text-qty\">Quantity</CLabel>\n          </CCol>\n          <CCol xs=\"12\">\n            <CInput value={addReceiptRecord.quantity} id=\"text-qty\" name=\"quantity\" placeholder=\"Enter Quantity\" type=\"number\" onChange={handleChange} />\n          </CCol>\n        </CFormGroup>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"danger\" onClick={() => setShow(false)}>Cancel</CButton>\n        <CButton color=\"primary\" onClick={submitRecord}>Submit</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default AddReceiptForm\n","import React from 'react'\n\nimport {\n  CFormGroup,\n  CInput,\n  CLabel,\n} from '@coreui/react'\n\nconst NewVisitorsForm = ({ isVisitorRecordAdded, visitorRecord, dispatch }) => {\n  return (\n    <>\n      <CFormGroup>\n        <CLabel htmlFor=\"emiratesId\">Visitors Emirates ID</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.emiratesId} name=\"emiratesId\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"emiratesId\" placeholder=\"Enter Visitor's emirates id\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"name\">Visitors Name</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.name} name=\"name\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"name\" placeholder=\"Enter Visitor's name\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"email\">Email</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.email} name=\"email\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"email\" placeholder=\"Enter Visitor's email\" />\n      </CFormGroup>\n      <CFormGroup>\n        <CLabel htmlFor=\"contact\">Phone No</CLabel>\n        <CInput disabled={isVisitorRecordAdded} value={visitorRecord.contact} name=\"contact\" onChange={(e) => dispatch({ type: 'handleChangeVisitorRecord', payload: e })} id=\"contact\" placeholder=\"Enter Phone number\" />\n      </CFormGroup>\n    </>\n  )\n}\n\nexport default NewVisitorsForm\n","import React from 'react'\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CSwitch,\n  CDataTable\n} from '@coreui/react'\n\nimport AddReceiptForm from './AddReceiptForm.js'\n\nconst receiptTableFields = [\n  'name',\n  'category',\n  'price',\n  'qty',\n  'total'\n]\n\nconst ReceiptForm = ({ receiptFormVisibility, showAddReceiptFormModal, receiptItems, dispatch }) => {\n  const showAddReceiptForm = (status) => {\n    dispatch({ type: 'setShowAddReceiptForm', payload: status })\n  }\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <div><strong>Shopping, Grooming and Others</strong></div>\n          <CSwitch\n            className=\"mr-1\"\n            color=\"dark\"\n            shape=\"pill\"\n            variant=\"opposite\"\n            value={receiptFormVisibility}\n            onChange={e => dispatch({ type: 'setReceiptFormVisibility', payload: e.target.checked })}\n          />\n        </CCardHeader>\n        {\n          receiptFormVisibility &&\n          <CCardBody>\n            <CDataTable\n              fields={receiptTableFields}\n              items={receiptItems || []}\n              footer\n              hover\n              overTableSlot={\n                <div className=\"text-right\">\n                  <CButton\n                    size=\"sm\"\n                    color=\"primary\"\n                    variant=\"outline\"\n                    className=\"m-2 pl-3 pr-4\"\n                    onClick={() => showAddReceiptForm(true)}\n                  >\n                      <span className=\"ml-1\">Add Item</span>\n                  </CButton>\n                </div>\n              }\n            />\n          </CCardBody>\n        }\n      </CCard>\n\n      <AddReceiptForm show={showAddReceiptFormModal} setShow={showAddReceiptForm} dispatch={dispatch}/>\n    </>\n  )\n}\n\nexport default ReceiptForm\n","import React from 'react'\nimport {\n  CCol,\n  CRow,\n} from '@coreui/react'\n\nconst DoctorReceipt = ({ doctorsReceipt }) => {\n  return (\n    <div>\n      <p className=\"font-weight-bold font-lg\">Doctor receipt form</p>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Pet's Name</CCol>\n        <CCol>\n          {doctorsReceipt.pet.label}\n        </CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Check up Date</CCol>\n        <CCol>\n          {\n            doctorsReceipt.appointmentDate.getDate() + '/' +\n            (+doctorsReceipt.appointmentDate.getMonth() + 1) + '/' +\n            doctorsReceipt.appointmentDate.getFullYear()\n          }\n        </CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Doctor's Name</CCol>\n        <CCol>--</CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Is Follow Up ?</CCol>\n        <CCol>{\n          doctorsReceipt.isFollowUp ? 'Yes' : 'No'  \n        }</CCol>\n      </CRow>\n      <CRow className=\"my-2\">\n        <CCol md=\"4\" className=\"font-weight-bold\">Doctor's Fee</CCol>\n        <CCol>{ doctorsReceipt.fee } AED</CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default DoctorReceipt\n","import React from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalBody,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CButton,\n  CCol,\n  CSwitch,\n  CSelect\n} from '@coreui/react'\n\nimport useAxios from 'axios-hooks'\n\nimport { AppContext } from '../../../App.js'\n\nconst AddNewPetForm = ({ show, setShow, visitorId, setItems, setSelectedPet }) => {\n  const { addToast } = React.useContext(AppContext)\n  const [,\n    fetchRecord\n  ] = useAxios(\n    {\n      method: 'GET'\n    },\n    { manual: true }\n  )\n\n  const [petInfo, setPetInfo] = React.useState({\n    id: '',\n    name: '',\n    breed: '',\n    age: '',\n    color: '',\n    specie: '',\n    gender: '',\n    microchip: false\n  })\n\n  const handleChangePetInfo = (e) => {\n    setPetInfo(oldState => {\n      return {\n        ...oldState,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  const setIsMicroChip = (status) => {\n    setPetInfo(oldState => {\n      return {\n        ...oldState,\n        microchip: status\n      }\n    })\n  }\n\n  const storePetInfo = () => {\n    const data = {...petInfo, patientId: visitorId}\n\n    delete data.id;\n\n    fetchRecord({\n      url: 'https://app.aloropivetcenter.com/api/pets',\n      method: 'POST',\n      data\n    }).then(resp => {\n      setPetInfo(oldState => {\n        return {\n          ...oldState,\n          id: resp.data.id\n        }\n      })\n    \n\n      setItems(oldState => {\n        return [...oldState, resp.data]\n      })\n\n      setSelectedPet({\n        label: resp.data.name,\n        value: resp.data\n      })\n\n      setShow(false)\n    }).catch(err => {\n      addToast({\n        message: err.response.data.message\n      })\n    })\n  }\n\n  return (\n    <CModal\n      show={show}\n      onClose={() => setShow(false)}\n    >\n      <CModalHeader>\n        Add New Pet\n      </CModalHeader>\n      <CModalBody>\n        <CFormGroup>\n          <CLabel htmlFor=\"name\">Pet Name</CLabel>\n          <CInput value={petInfo.name} name=\"name\" onChange={handleChangePetInfo} id=\"name\" placeholder=\"Enter name\" />\n        </CFormGroup>\n        <CFormGroup>\n          <CLabel htmlFor=\"type\">Breed</CLabel>\n          <CInput value={petInfo.breed} name=\"breed\" onChange={handleChangePetInfo} id=\"type\" placeholder=\"Enter breed\" />\n        </CFormGroup>\n        <CFormGroup>\n          <CLabel htmlFor=\"age\">Pet Age</CLabel>\n          <CInput value={petInfo.age} name=\"age\" onChange={handleChangePetInfo} id=\"age\" placeholder=\"Enter age\" />\n        </CFormGroup>\n        <CFormGroup>\n          <CLabel htmlFor=\"color\">Pet Color</CLabel>\n          <CInput value={petInfo.color} name=\"color\" onChange={handleChangePetInfo} id=\"color\" placeholder=\"Enter color\" />\n        </CFormGroup>\n        <CFormGroup>\n          <CLabel htmlFor=\"specie\">Specie</CLabel>\n          <CInput value={petInfo.specie} name=\"specie\" onChange={handleChangePetInfo} id=\"specie\" placeholder=\"Enter specie\" />\n        </CFormGroup>\n        <CFormGroup>\n          <CLabel htmlFor=\"gender\">Sex</CLabel>\n          <CSelect \n            custom \n            name=\"gender\" \n            id=\"text-pet-type\"\n            value={petInfo.gender}\n            onChange={handleChangePetInfo}\n          >\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n            <option value=\"Neutered\">Neutered</option>\n            <option value=\"Spayed\">Spayed</option>\n          </CSelect>\n        </CFormGroup>\n      </CModalBody>\n      <CFormGroup row className=\"align-items-center px-3\">\n        <CCol xs=\"3\" md=\"3\">\n          <CLabel htmlFor=\"text-microchip\" className=\"pl-1\">Microchip ?</CLabel>\n        </CCol>\n        <CCol xs=\"9\" md=\"9\">\n          <CSwitch\n            color=\"primary\"\n            name=\"microchip\"\n            value={petInfo.microchip}\n            onChange={(e) => setIsMicroChip(e.target.checked)}\n            {\n              ...({\n                variant: 'opposite',\n                shape:'pill'\n              })\n            }\n          />\n        </CCol>\n      </CFormGroup>\n      <CModalFooter>\n        <CButton onClick={() => setShow(false)} color=\"danger\">Cancel</CButton>\n        <CButton onClick={storePetInfo} color=\"primary\">Submit</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default AddNewPetForm\n","import React from 'react'\nimport {\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalBody,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CCol,\n  CSwitch,\n  CButton,\n} from '@coreui/react'\n\nimport useAxios from 'axios-hooks'\n\nimport RSelect from 'react-select';\n\nimport { AppContext } from '../../../App.js'\n\nimport AddNewPetForm from './AddNewPetForm.js'\n\nconst DoctorAppointmentForm = ({ visitorId, dispatch }) => {\n  const { addToast } = React.useContext(AppContext)\n  const [,\n    fetchRecord\n  ] = useAxios(\n    {\n      method: 'GET'\n    },\n    { manual: true }\n  )\n\n  const [showAddAppointmentModal, setShowAddAppointmentModal] = React.useState(false)\n  const [showNewPetModal, setShowNewPetModal] = React.useState(false)\n\n  \n\n  const [keyword, setKeyword] = React.useState('')\n  const [items, setItems] = React.useState([])\n\n  const [selectedPet, setSelectedPet] = React.useState(null)\n  const [fee, setFee] = React.useState('')\n  const [isFollowUp, setIsFollowUp] = React.useState(false)\n\n  const handleChange = (option) => {\n    setSelectedPet(option)\n  }\n\n  const addDoctorReceipt = () => {\n    if (!isFollowUp && +fee === 0 ) {\n      console.log('[Error]: Please provide fee or check follow up if it is follow up !')\n    } else {\n      dispatch({ type: 'addDoctorReceipt', payload: {\n        pet: selectedPet,\n        fee: +fee === 0 ? '0' : fee,\n        appointmentDate: new Date(),\n        isFollowUp\n      } })\n    }\n  }\n\n  React.useEffect(() => {\n    if (keyword.length > 0) {\n      fetchRecord({\n        url: 'https://app.aloropivetcenter.com/api/pets',\n        method: 'GET',\n        params: {\n          patientId: visitorId,\n          search: keyword\n        }\n      }).catch(err => {\n        addToast({\n          message: err.response.data.message\n        })\n      })\n    }\n  }, [keyword, fetchRecord, visitorId])\n\n  React.useEffect(() => {\n    fetchRecord({\n      url: `https://app.aloropivetcenter.com/api/pets/all/patients`,\n      method: 'POST',\n      data: {\n        patientId: visitorId\n      }\n    }).then(resp => {\n      setItems(resp?.data?.rows.map(o => {\n        return {\n          label: o.name,\n          value: o\n        }\n      }) || [])\n    }).catch(err => {\n      addToast({\n        message: err.response.data.message\n      })\n    })\n  }, [fetchRecord, visitorId])\n\n\n  return (\n    <div>\n      <p onClick={() => setShowAddAppointmentModal(true)} className=\"my-5 text-center\">Add Doctors check up</p>\n\n      <CModal\n        show={showAddAppointmentModal}\n        onClose={() => setShowAddAppointmentModal(false)}\n      >\n        <CModalHeader>\n          Create check up\n        </CModalHeader>\n        <CModalBody>\n          <CFormGroup row>\n            <CCol xs=\"12\">\n              <CLabel className=\"pt-1\" htmlFor=\"search\">Select Pet</CLabel>\n            </CCol>\n            <CCol xs=\"12\">\n              <RSelect name=\"search\" value={selectedPet} options={items} onInputChange={(input) => setKeyword(input)} onChange={handleChange}></RSelect>\n            </CCol>\n          </CFormGroup>\n          <div className=\"text-right\">\n            <CButton onClick={() => setShowNewPetModal(true)} size=\"sm\">Add New Pet</CButton>\n          </div>\n          <CFormGroup>\n            <CLabel htmlFor=\"fee\">Fee</CLabel>\n            <CInput value={fee} onChange={(e) => setFee(e.target.value)} name=\"fee\" id=\"fee\" placeholder=\"Enter fees\" />\n          </CFormGroup>\n          <CFormGroup row className=\"align-items-center pt-3\">\n            <CCol xs=\"3\" md=\"3\">\n              <CLabel htmlFor=\"text-description\" className=\"pl-1\">Follow Up ?</CLabel>\n            </CCol>\n            <CCol xs=\"9\" md=\"9\">\n              <CSwitch\n                color=\"primary\"\n                name=\"active\"\n                value={isFollowUp}\n                onChange={(e) => setIsFollowUp(e.target.checked)}\n                {\n                  ...({\n                    variant: 'opposite',\n                    shape:'pill'\n                  })\n                }\n              />\n            </CCol>\n          </CFormGroup>\n\n          <AddNewPetForm\n            show={showNewPetModal}\n            visitorId={visitorId}\n            setShow={setShowNewPetModal}\n            setItems={setItems}\n            setSelectedPet={setSelectedPet}\n          />\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"danger\" onClick={() => setShowAddAppointmentModal(false)}>Cancel</CButton>\n          <CButton color=\"primary\" onClick={addDoctorReceipt}>Submit</CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default DoctorAppointmentForm\n","import React from 'react'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CSwitch,\n} from '@coreui/react'\n\nimport DoctorReceipt from './DoctorReceipt.js'\nimport DoctorAppointmentForm from './DoctorAppointmentForm.js'\n\nconst DoctorsForm = ({ visitorId, doctorFormVisibility, isDoctorVisitAdded, doctorsReceipt, dispatch }) => {\n  return (\n    <>\n      <CCard>\n        <CCardHeader className=\"d-flex justify-content-between align-items-center\">\n          <div><strong>Doctor's Visit</strong></div>\n          <CSwitch\n            className=\"mr-1\"\n            color=\"dark\"\n            shape=\"pill\"\n            variant=\"opposite\"\n            value={doctorFormVisibility}\n            onChange={(e) => dispatch({ type: 'setDoctorFormVisibility', payload: e.target.checked })}\n          />\n        </CCardHeader>\n        {\n          doctorFormVisibility &&\n          <CCardBody>\n            {\n              isDoctorVisitAdded ?\n              <DoctorReceipt doctorsReceipt={doctorsReceipt} /> :\n              <DoctorAppointmentForm visitorId={visitorId} dispatch={dispatch} />\n            }\n          </CCardBody> \n        }\n      </CCard>\n    </>\n  )\n}\n\nexport default DoctorsForm\n","const addVisitorReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'setKeyword':\n      return {\n        ...state,\n        keyword: payload\n      }\n    case 'setItems': \n      return {\n        ...state,\n        items: payload\n      }\n    case 'setIsVisitorRecordAdded':\n      return {\n        ...state,\n        isVisitorRecordAdded: payload\n      }\n    case 'setVisitorsId':\n      return {\n        ...state,\n        visitorsId: payload\n      }\n    case 'setVisitorsRecord':\n      return {\n        ...state,\n        visitorRecord: { ...payload }\n      }\n    case 'handleChangeVisitorRecord':\n      return {\n        ...state,\n        visitorRecord: {\n          ...state.visitorRecord,\n          [payload.target.name]: payload.target.value \n        }\n      }\n    case 'setReceiptFormVisibility':\n      return {\n        ...state,\n        receiptFormVisibility: payload\n      }\n    case 'setShowAddReceiptForm':\n      return {\n        ...state,\n        showAddReceiptForm: payload\n      }\n    case 'setDoctorFormVisibility':\n      return {\n        ...state,\n        doctorFormVisibility: payload\n      }\n    case 'setIsDoctorVisitAdded':\n      return {\n        ...state,\n        isDoctorVisitAdded: payload\n      }\n    case 'addItemInReceipt':\n      const item = {\n        id: payload.itemId?.value || null,\n        packageId: payload.packageId?.value || null,\n        name: payload.itemId?.label || payload.packageId?.label,\n        category: payload.categoryId.label,\n        price: payload.itemId?.price || payload.packageId?.price,\n        qty: payload.quantity,\n        total: payload.quantity * (payload.itemId?.price || payload.packageId?.price)\n      }\n      return {\n        ...state,\n        receiptItems: [...state.receiptItems, item]\n      }\n    case 'addDoctorReceipt':\n      const doctorsReceipt = {\n        pet: payload.pet,\n        fee: payload.fee,\n        appointmentDate: payload.appointmentDate,\n        isFollowUp: payload.isFollowUp\n      }\n\n      return {\n        ...state,\n        isDoctorVisitAdded: true,\n        doctorsReceipt: doctorsReceipt\n      }\n    case 'resetForm':\n      return {\n        ...state,\n        keyword: '',\n        items: [],\n        isVisitorRecordAdded: false,\n        visitorsId: null,\n        visitorRecord: {\n          emiratesId: '',\n          name: '',\n          email: '',\n          contact: ''\n        },\n\n        receiptFormVisibility: false,\n        showAddReceiptForm: false,\n\n        doctorFormVisibility: false,\n        isDoctorVisitAdded: false,\n\n        receiptItems: [],\n        doctorsReceipt: {\n          pet: null,\n          fee: '',\n          appointmentDate: null,\n          isFollowUp: false\n        }\n      }\n    default: \n      return state\n  }\n}\n\nexport default addVisitorReducer","const initialState = {\n  keyword: '',\n  items: [],\n  isVisitorRecordAdded: false,\n  visitorsId: null,\n  visitorRecord: {\n    emiratesId: '',\n    name: '',\n    email: '',\n    contact: ''\n  },\n\n  receiptFormVisibility: false,\n  showAddReceiptForm: false,\n\n  doctorFormVisibility: false,\n  isDoctorVisitAdded: false,\n\n  receiptItems: [],\n  doctorsReceipt: {\n    pet: null,\n    fee: '',\n    appointmentDate: null,\n    isFollowUp: false\n  }\n}\n\nexport default initialState","import React, { useContext } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CFormGroup,\n  CLabel,\n  CRow,\n} from '@coreui/react'\n\nimport { useHistory } from 'react-router-dom'\n\nimport RSelect from 'react-select';\n\nimport useAxios from 'axios-hooks'\n\nimport NewVisitorsForm from './NewVisitorsForm.js'\nimport ReceiptForm from './ReceiptForm/ReceiptForm.js'\nimport DoctorsForm from './DoctorsForm/DoctorsForm.js'\n\nimport reducer from './addVisitorReducer'\nimport initialState from './addVisitorState'\n\nimport { AppContext } from '../../App.js'\n\nconst AddVisitor = () => {\n  const history = useHistory()\n  const { addToast } = useContext(AppContext)\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const [,\n    fetchRecord\n  ] = useAxios(\n    {\n      method: 'GET'\n    },\n    { manual: true }\n  )\n\n  const createNewVisitor = () => {\n    fetchRecord({\n      url: 'https://app.aloropivetcenter.com/api/patients',\n      method: 'POST',\n      data: {\n        ...state.visitorRecord\n      }\n    }).then(resp => {\n      dispatch({ type: 'setVisitorsId', payload: resp.data.id })\n      dispatch({ type: 'setIsVisitorRecordAdded', payload: true })\n    }).catch(err => {\n      addToast({\n        message: err.response.data.message\n      })\n    })\n  }\n\n  const storeNewOrder = () => {\n    const data = {\n      patientId: state.visitorsId,\n      appointment: state.isDoctorVisitAdded,\n      checkUpPrice: +state.doctorsReceipt.fee,\n      description: 'Order Receipt For Shopping.',\n      followUp: state.doctorsReceipt.isFollowUp,\n      items: state.receiptItems.filter(item => item.id !== null).map(item => {\n        return {\n          itemId: item.id,\n          quantity: item.qty\n        }\n      }),\n      packages: state.receiptItems.filter(item => item.packageId !== null).map(item => {\n        return {\n          packageId: item.packageId,\n          quantity: item.qty\n        }\n      })\n    }\n\n    fetchRecord({\n      url: 'https://app.aloropivetcenter.com/api/orders',\n      method: 'POST',\n      data\n    }).then(resp => {\n      dispatch({ type: 'resetForm', payload: null })\n      history.push('/visitors')\n    })\n  }\n\n  const handleSubmit = () => {\n    if (!state.isVisitorRecordAdded) {\n      createNewVisitor()\n    } else {\n      storeNewOrder()\n    }\n  }\n\n  const resetForm = () => {\n    dispatch({ type: 'setVisitorsRecord', payload: {\n      emiratesId: '',\n      name: '',\n      email: '',\n      contact: ''\n    }})\n    dispatch({ type: 'setVisitorsId', payload: null })\n    dispatch({ type: 'setIsVisitorRecordAdded', payload: false })\n  }\n\n  const handleUserChange = ({ value }) => {\n    dispatch({ type: 'setVisitorsRecord', payload: {\n      emiratesId: value.emiratesId,\n      name: value.name,\n      email: value.email,\n      contact: value.contact\n    }})\n    dispatch({ type: 'setVisitorsId', payload: value.id })\n    dispatch({ type: 'setIsVisitorRecordAdded', payload: true })\n    dispatch({ type: 'setKeyword', payload: {} })\n  }\n\n  React.useEffect(() => {\n    if (state.keyword.length > 0) {\n      fetchRecord({\n        url: 'https://app.aloropivetcenter.com/api/patients',\n        params: {\n          search: state.keyword\n        }\n      }).then(resp => {\n        dispatch({ type: 'setItems', payload: (resp?.data?.rows || []).map(item => {\n          return {\n            label: item.name,\n            value: item,\n          }\n        })})\n      })\n    }\n  }, [state.keyword, fetchRecord])\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" sm=\"12\">\n          <CCard>\n            <CCardHeader>\n              Visitor\n              <small> Form</small>\n            </CCardHeader>\n            <CCardBody>\n              <CFormGroup row>\n                <CCol xs=\"12\">\n                  <CLabel className=\"pt-1\" htmlFor=\"search\">Search</CLabel>\n                </CCol>\n                <CCol xs=\"12\">\n                  <RSelect name=\"search\" options={state.items} onInputChange={(input) => dispatch({ type: 'setKeyword', payload: input })} onChange={handleUserChange}></RSelect>\n                </CCol>\n              </CFormGroup>\n              <CCard>\n                <CCardBody>\n                  <NewVisitorsForm \n                    isVisitorRecordAdded={state.isVisitorRecordAdded}\n                    visitorRecord={state.visitorRecord}\n                    dispatch={dispatch}\n                  />\n                </CCardBody>\n              </CCard>\n\n              {\n                state.isVisitorRecordAdded &&\n                <CRow>\n                  <CCol sm=\"6\">\n                    <ReceiptForm\n                      receiptFormVisibility={state.receiptFormVisibility}\n                      showAddReceiptFormModal={state.showAddReceiptForm}\n                      receiptItems={state.receiptItems}\n                      dispatch={dispatch}\n                    />\n                  </CCol>\n                  <CCol sm=\"6\">\n                    <DoctorsForm\n                      visitorId={state.visitorsId}\n                      doctorFormVisibility={state.doctorFormVisibility}\n                      isDoctorVisitAdded={state.isDoctorVisitAdded}\n                      doctorsReceipt={state.doctorsReceipt}\n                      dispatch={dispatch}\n                    />\n                  </CCol>\n                </CRow>\n              }\n            </CCardBody>\n            <CCardFooter>\n              <div className=\"d-flex\">\n                <div className=\"w-50 ml-auto text-right\">\n                  <CButton onClick={resetForm} className=\"w-25 mr-1\" color=\"danger\">Clear</CButton>\n                  <CButton onClick={handleSubmit} className=\"w-25\" color=\"primary\">Submit</CButton>\n                </div>\n              </div>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default AddVisitor\n"],"sourceRoot":""}