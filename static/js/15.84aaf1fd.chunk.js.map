{"version":3,"sources":["views/base/tableHeader/TableHeader.js","views/roles/Roles.js"],"names":["TableHeader","keyword","changeKeyword","children","className","sm","type","name","placeholder","autoComplete","value","onChange","onKeyPress","fields","key","label","Roles","React","useState","setKeyword","totalPages","setTotalPages","currentPage","setActivePage","useAxios","url","method","params","pageNo","manual","data","loading","error","fetch","useEffect","then","resp","xs","lg","items","rows","striped","itemsPerPage","overTableSlot","e","search","target","underTableSlot","activePage","pages","onActivePageChange","i"],"mappings":"6KAAA,yBAiCeA,IAvBK,SAAC,GAAsD,IAAD,IAAnDC,eAAmD,MAAzC,GAAyC,MAArCC,qBAAqC,MAArB,KAAqB,EAAfC,EAAe,EAAfA,SACzD,OACE,eAAC,IAAD,CAAMC,UAAU,6CAAhB,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAYD,UAAU,OAAtB,SACE,cAAC,IAAD,CACEE,KAAK,OACLC,KAAK,UACLC,YAAY,gBACZC,aAAa,MACbC,MAAOT,EACPU,SAAUT,EACVU,WAAYV,QAIlB,cAAC,IAAD,CAAMG,GAAG,IAAID,UAAU,6BAAvB,SACID,S,sGCbJU,EAAS,CACX,CACEC,IAAK,cACLC,MAAO,QAET,CACED,IAAK,YACLC,MAAO,cAET,eA4EWC,UAzED,WAAO,IAAD,EACYC,IAAMC,SAAS,IAD3B,mBACXjB,EADW,KACFkB,EADE,OAGkBF,IAAMC,SAAS,GAHjC,mBAGXE,EAHW,KAGCC,EAHD,OAImBJ,IAAMC,SAAS,GAJlC,mBAIXI,EAJW,KAIEC,EAJF,OAMwBC,YACxC,CACEC,IAAK,6CACLC,OAAQ,MACRC,OAAQ,CACNC,OAAQN,IAGZ,CACEO,QAAQ,IAfM,0BAMTC,EANS,EAMTA,KAAMC,EANG,EAMHA,QAASC,EANN,EAMMA,MAASC,EANf,KAsClB,OAPAhB,IAAMiB,WAAU,WACdD,IACGE,MAAK,SAAAC,GACJf,EAAce,EAAKN,KAAKV,iBAE3B,CAACa,IAGF,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMI,GAAG,KAAKC,GAAG,KAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,oBAGA,cAAC,IAAD,UACA,cAAC,IAAD,CACEC,MAAOR,GAAgBC,EAAN,IAAuB,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMU,OAAQ,GAClD3B,OAAQA,EACR4B,SAAO,EACPC,aAAc,GACdX,QAASA,EACTY,cACE,cAAC,IAAD,CAAa1C,QAASA,EAASC,cAnCvB,SAAC0C,GACR,UAAVA,EAAE9B,IACHmB,EAAM,CACJN,OAAQ,CACNkB,OAAQ5C,KAIZkB,EAAWyB,EAAEE,OAAOpC,UA8BZqC,eACE,cAAC,IAAD,CACEC,WAAY1B,EACZ2B,MAAO7B,EACP8B,mBAAoB,SAACC,GAAD,OAAO5B,EAAc4B","file":"static/js/15.84aaf1fd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CInput,\r\n} from '@coreui/react'\r\n\r\n\r\nconst TableHeader = ({ keyword = '', changeKeyword = null, children }) => {\r\n  return (\r\n    <CRow className=\"align-items-center justify-content-between\">\r\n      <CCol sm=\"4\">\r\n        <CFormGroup className=\"mb-0\">\r\n          <CInput\r\n            type=\"text\"\r\n            name=\"nf-text\"\r\n            placeholder=\"Search Here..\"\r\n            autoComplete=\"off\"\r\n            value={keyword}\r\n            onChange={changeKeyword}\r\n            onKeyPress={changeKeyword}\r\n          />\r\n        </CFormGroup>\r\n      </CCol>\r\n      <CCol sm=\"4\" className=\"d-flex justify-content-end\">\r\n        { children }\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default TableHeader\r\n","import React from 'react'\nimport useAxios from 'axios-hooks'\nimport TableHeader from '../base/tableHeader/TableHeader'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination\n} from '@coreui/react'\n\nconst fields = [\n    {\n      key: 'displayName',\n      label: 'Name'\n    },\n    {\n      key: 'createdAt',\n      label: 'Registered'\n    },\n    'description',\n  ]\n\nconst Roles = () => {\n  const [keyword, setKeyword] = React.useState('')\n\n  const [totalPages, setTotalPages] = React.useState(1)\n  const [currentPage, setActivePage] = React.useState(1)\n\n  const [{ data, loading, error }, fetch] = useAxios(\n    {\n      url: 'https://app.aloropivetcenter.com/api/roles',\n      method: 'GET',\n      params: {\n        pageNo: currentPage\n      }\n    },\n    {\n      manual: true\n    }\n  )\n\n  const changeKeyword = (e) => {\n    if(e.key === 'Enter') {\n      fetch({\n        params: {\n          search: keyword\n        }\n      })\n    } else {\n      setKeyword(e.target.value)\n    }\n  }\n\n  React.useEffect(() => {\n    fetch()\n      .then(resp => {\n        setTotalPages(resp.data.totalPages)\n      })\n  }, [fetch])\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              Roles\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={loading ? [] : (error ? [] : data?.rows || [])}\n              fields={fields}\n              striped\n              itemsPerPage={10}\n              loading={loading}\n              overTableSlot={\n                <TableHeader keyword={keyword} changeKeyword={changeKeyword}>\n                </TableHeader>\n              }\n              underTableSlot={\n                <CPagination\n                  activePage={currentPage}\n                  pages={totalPages}\n                  onActivePageChange={(i) => setActivePage(i)}\n                ></CPagination>\n              }\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Roles\n"],"sourceRoot":""}