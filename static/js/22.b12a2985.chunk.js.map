{"version":3,"sources":["assets/logo/logo.jpg","views/pages/login/Login.js"],"names":["Login","useState","errMessage","setErrorMessage","useContext","AppContext","setToken","setRole","useAxios","url","method","manual","data","loading","executePost","username","password","creds","setCreds","updateCred","e","oldCreds","target","name","value","useEffect","token","temp","split","tokenData","JSON","parse","atob","localStorage","setItem","exp","role","className","md","color","type","placeholder","autoComplete","onChange","xs","onClick","catch","err","response","message","style","width","src","LogoImage","alt"],"mappings":"0OAAe,MAA0B,iC,wBCkI1BA,UA3GD,WAAO,IAAD,EACsBC,mBAAS,IAD/B,mBACVC,EADU,KACEC,EADF,OAEYC,qBAAWC,KAAjCC,EAFU,EAEVA,SAAUC,EAFA,EAEAA,QAFA,EAOdC,YACF,CACEC,IAAK,4DACLC,OAAQ,QAEV,CAAEC,QAAQ,IAZM,0BAKdC,EALc,EAKdA,KAAMC,EALQ,EAKRA,QACRC,EANgB,OAeQb,mBAAS,CACjCc,SAAU,GACVC,SAAU,KAjBM,mBAeXC,EAfW,KAeJC,EAfI,KAoBZC,EAAa,SAACC,GAClBF,GAAS,SAACG,GACR,OAAO,2BACFA,GADL,kBAEGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,YA6BhC,OAZAC,qBAAU,WACR,GAAIb,GAAQA,EAAKc,MAAO,CACtB,IAAMC,EAAOf,EAAKc,MAAME,MAAM,KAAK,GAC7BC,EAAYC,KAAKC,MAAMC,KAAKL,IAElCM,aAAaC,QAAQ,cAAeL,EAAUM,KAE9C5B,EAAQsB,EAAUO,KAAKb,MACvBjB,EAASM,EAAKc,UAEf,CAACd,EAAML,EAASD,IAGjB,qBAAK+B,UAAU,qDAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOD,UAAU,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,uCACA,mBAAGA,UAAU,aAAb,6CAEEnC,GACA,cAAC,IAAD,CAAQqC,MAAM,SAAd,SAAwBrC,IAE1B,eAAC,IAAD,CAAamC,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOd,KAAK,iBAGhB,cAAC,IAAD,CAAQA,KAAK,WAAWiB,KAAK,OAAOC,YAAY,WAAWC,aAAa,WAAWlB,MAAOP,EAAMF,SAAU4B,SAAUxB,OAEtH,eAAC,IAAD,CAAakB,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOd,KAAK,wBAGhB,cAAC,IAAD,CAAQA,KAAK,WAAWiB,KAAK,WAAWC,YAAY,WAAWC,aAAa,mBAAoBlB,MAAOP,EAAMD,SAAU2B,SAAUxB,OAEnI,cAAC,IAAD,UACE,cAAC,IAAD,CAAMyB,GAAG,IAAT,SACE,cAAC,IAAD,CAASC,QAzDb,SAACzB,GACZP,GACHC,EAAY,CACVF,KAAK,eACAK,KAEJ6B,OAAM,SAAAC,GAAQ,IAAD,IACd5C,GAAgB,UAAA4C,EAAIC,gBAAJ,mBAAcpC,YAAd,eAAoBqC,UAAW,uCAkDFV,MAAM,UAAUF,UAAU,OAAvD,SACIxB,EAAU,UAAY,qBAOpC,cAAC,IAAD,CAAOwB,UAAU,uCAAuCa,MAAO,CAAEC,MAAO,OAAxE,SACE,cAAC,IAAD,CAAWd,UAAU,cAArB,SACE,qBAAKe,IAAKC,EAAWC,IAAI,MAAMJ,MAAO,CAAEC,MAAO","file":"static/js/22.b12a2985.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b0e961c2.jpg\";","import React, { useState, useEffect, useContext } from 'react'\nimport useAxios from 'axios-hooks'\nimport { AppContext } from '../../../App'\n\nimport LogoImage from '../../../assets/logo/logo.jpg'\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n  CAlert\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst Login = () => {\n  const [ errMessage, setErrorMessage ] = useState('')\n  const { setToken, setRole } = useContext(AppContext)\n\n  const [\n    { data, loading },\n    executePost\n  ] = useAxios(\n    {\n      url: 'https://app.aloropivetcenter.com/api/authentication/login',\n      method: 'POST'\n    },\n    { manual: true }\n  )\n\n  const [creds, setCreds] = useState({\n    username: '',\n    password: ''\n  })\n\n  const updateCred = (e) => {\n    setCreds((oldCreds) => {\n      return {\n        ...oldCreds,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  const loginUser = (e) => {\n    if (!loading) {\n      executePost({\n        data: {\n          ...creds\n        }\n      }).catch(err => {\n        setErrorMessage(err.response?.data?.message || 'Error occured try again later !')\n      })\n    }\n  }\n\n  useEffect(() => {\n    if (data && data.token) {\n      const temp = data.token.split('.')[1]\n      const tokenData = JSON.parse(atob(temp))\n\n      localStorage.setItem('tokenExpiry', tokenData.exp)\n\n      setRole(tokenData.role.name)\n      setToken(data.token)\n    }\n  }, [data, setRole, setToken])\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your Aloropi account</p>\n                    {\n                      errMessage &&\n                      <CAlert color=\"danger\">{errMessage}</CAlert>\n                    }\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput name=\"username\" type=\"text\" placeholder=\"Username\" autoComplete=\"username\" value={creds.username} onChange={updateCred} />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput name=\"password\" type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\"  value={creds.password} onChange={updateCred} />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <CButton onClick={loginUser} color=\"primary\" className=\"px-4\">\n                          { loading ? 'Loading' : 'Login' }\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary d-md-down-none\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <img src={LogoImage} alt=\"Vet\" style={{ width: '100%' }} />\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n"],"sourceRoot":""}