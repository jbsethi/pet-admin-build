{"version":3,"sources":["views/base/tableHeader/TableHeader.js","views/users/Users.js"],"names":["TableHeader","keyword","changeKeyword","children","className","sm","type","name","placeholder","autoComplete","value","onChange","onKeyPress","fields","key","_classes","label","Users","history","useHistory","React","useState","totalPages","setTotalPages","currentPage","setActivePage","useAxios","url","method","params","pageNo","manual","data","loading","error","refetch","useEffect","xl","items","rows","striped","itemsPerPage","clickableRows","onRowClick","item","push","id","overTableSlot","color","variant","onClick","underTableSlot","activePage","pages","onActivePageChange","i","scopedSlots","status","active"],"mappings":"6KAAA,0BAiCeA,IAvBK,SAAC,GAAsD,IAAD,IAAnDC,eAAmD,MAAzC,GAAyC,MAArCC,qBAAqC,MAArB,KAAqB,EAAfC,EAAe,EAAfA,SACzD,OACE,eAAC,IAAD,CAAMC,UAAU,6CAAhB,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAYD,UAAU,OAAtB,SACE,cAAC,IAAD,CACEE,KAAK,OACLC,KAAK,UACLC,YAAY,gBACZC,aAAa,MACbC,MAAOT,EACPU,SAAUT,EACVU,WAAYV,QAIlB,cAAC,IAAD,CAAMG,GAAG,IAAID,UAAU,6BAAvB,SACID,S,+GCVJU,EAAS,CACb,CAAEC,IAAK,OAAQC,SAAU,oBACzB,QACA,WACA,OACA,CACED,IAAK,YACLE,MAAO,cAET,UA4FaC,UAjFD,WACZ,IAAMC,EAAUC,cADE,EAEkBC,IAAMC,SAAS,GAFjC,mBAEXC,EAFW,KAECC,EAFD,OAGmBH,IAAMC,SAAS,GAHlC,mBAGXG,EAHW,KAGEC,EAHF,OAK0BC,YAC1C,CACEC,IAAK,6CACLC,OAAQ,MACRC,OAAQ,CACNC,OAAQN,IAGZ,CACEO,QAAQ,IAdM,0BAKTC,EALS,EAKTA,KAAMC,EALG,EAKHA,QAASC,EALN,EAKMA,MAASC,EALf,KA4BlB,OAVAf,IAAMgB,WAAU,YACd,OAAIJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAMV,aACRC,EAAcS,EAAKV,cAEpB,CAACU,IAEJZ,IAAMgB,WAAU,WACdD,MACC,CAACA,IAGF,cAAC,IAAD,UACE,cAAC,IAAD,CAAME,GAAI,GAAV,SACE,eAAC,IAAD,WACE,cAAC,IAAD,oBAGA,cAAC,IAAD,UACA,cAAC,IAAD,CACEC,MAAOL,GAAgBC,EAAN,IAAuB,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMO,OAAQ,GAClD1B,OAAQA,EACR2B,SAAO,EACPC,aAAc,GACdR,QAASA,EACTS,eAAa,EACbC,WAAY,SAACC,GAAD,OAAU1B,EAAQ2B,KAAR,iBAAuBD,EAAKE,MAClDC,cACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,MAAM,UACNC,QAAQ,UACN7C,UAAU,gBACV8C,QAAS,kBAAMhC,EAAQ2B,KAAK,eAJhC,SAMI,sBAAMzC,UAAU,OAAhB,8BAIR+C,eACE,cAAC,IAAD,CACEC,WAAY5B,EACZ6B,MAAO/B,EACPgC,mBAAoB,SAACC,GAAD,OAAO9B,EAAc8B,MAG7CC,YAAe,CACb,OACE,SAACZ,GAAD,OACE,6BACE,cAAC,IAAD,CAAQI,OA3EXS,EA2E2Bb,EAAKc,OA1E3CD,EACK,UAEA,UAuES,SACGb,EAAKc,OAAU,SAAW,eA5EhC,IAAAD","file":"static/js/15.97dbbc77.chunk.js","sourcesContent":["import React from 'react'\n\nimport {\n  CRow,\n  CCol,\n  CFormGroup,\n  CInput,\n} from '@coreui/react'\n\n\nconst TableHeader = ({ keyword = '', changeKeyword = null, children }) => {\n  return (\n    <CRow className=\"align-items-center justify-content-between\">\n      <CCol sm=\"4\">\n        <CFormGroup className=\"mb-0\">\n          <CInput\n            type=\"text\"\n            name=\"nf-text\"\n            placeholder=\"Search Here..\"\n            autoComplete=\"off\"\n            value={keyword}\n            onChange={changeKeyword}\n            onKeyPress={changeKeyword}\n          />\n        </CFormGroup>\n      </CCol>\n      <CCol sm=\"4\" className=\"d-flex justify-content-end\">\n        { children }\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default TableHeader\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport useAxios from 'axios-hooks'\nimport TableHeader from '../base/tableHeader/TableHeader'\n\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CButton\n} from '@coreui/react'\n\nconst fields = [\n  { key: 'name', _classes: 'font-weight-bold' },\n  'email',\n  'username',\n  'role',\n  {\n    key: 'createdAt',\n    label: 'Registered'\n  },\n  'active'\n]\n\nconst getBadge = status => {\n  if (status) {\n    return 'success'\n  } else {\n    return 'danger'\n  }\n}\n\nconst Users = () => {\n  const history = useHistory()\n  const [totalPages, setTotalPages] = React.useState(1)\n  const [currentPage, setActivePage] = React.useState(1)\n\n  const [{ data, loading, error }, refetch] = useAxios(\n    {\n      url: 'https://app.aloropivetcenter.com/api/users',\n      method: 'GET',\n      params: {\n        pageNo: currentPage\n      }\n    },\n    {\n      manual: true\n    }\n  )\n\n  React.useEffect(() => {\n    if (data?.totalPages) {\n      setTotalPages(data.totalPages)\n    }\n  }, [data])\n\n  React.useEffect(() => {\n    refetch()\n  }, [refetch])\n\n  return (\n    <CRow>\n      <CCol xl={12}>\n        <CCard>\n          <CCardHeader>\n            Users\n          </CCardHeader>\n          <CCardBody>\n          <CDataTable\n            items={loading ? [] : (error ? [] : data?.rows || [])}\n            fields={fields}\n            striped\n            itemsPerPage={10}\n            loading={loading}\n            clickableRows\n            onRowClick={(item) => history.push(`/users/${item.id}`)}\n            overTableSlot={\n              <TableHeader>\n                <CButton\n                  color=\"primary\"\n                  variant=\"outline\"\n                    className=\"m-2 pl-3 pr-4\"\n                    onClick={() => history.push('/users/add')}\n                  >\n                    <span className=\"ml-1\">Add New User</span>\n                  </CButton>\n              </TableHeader>\n            }\n            underTableSlot={\n              <CPagination\n                activePage={currentPage}\n                pages={totalPages}\n                onActivePageChange={(i) => setActivePage(i)}\n              ></CPagination>\n            }\n            scopedSlots = {{\n              'active':\n                (item)=>(\n                  <td>\n                    <CBadge color={getBadge(item.active)}>\n                      {item.active  ? 'Active' : 'Inactive'}\n                    </CBadge>\n                  </td>\n                )\n            }}\n          />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Users\n"],"sourceRoot":""}